#include "pdfcos.h"
 
static DDL::Bool parser_z24zlf(DDL::UInt<8>);
static DDL::Bool parser_z24zcr(DDL::UInt<8>);
static DDL::Bool parser_z24zspace(DDL::UInt<8>);
static DDL::Bool parser_z24zsimpleWS(DDL::UInt<8>);
static bool parser_EOL(DDL::ParserStateUser<ReferenceTable>&,
                       DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_EOL_(DDL::ParserStateUser<ReferenceTable>&,
                        DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Many_2647(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_SkipTillEOL_(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_GenComment_(DDL::ParserStateUser<ReferenceTable>&,
                               DDL::Unit*, DDL::Input*, DDL::Input, DDL::Array<DDL::UInt<8>>);
static bool parser_Comment_(DDL::ParserStateUser<ReferenceTable>&,
                            DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_JustWhite_(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_AnyWS_(DDL::ParserStateUser<ReferenceTable>&,
                          DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Many_2652(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Token_2500(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Unit*, DDL::Input*, DDL::Input, DDL::Array<DDL::UInt<8>>);
static bool parser_KW(DDL::ParserStateUser<ReferenceTable>&,
                      DDL::Unit*, DDL::Input*, DDL::Input, DDL::Array<DDL::UInt<8>>);
static bool parser_When_2502(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Bool*, DDL::Input*, DDL::Input, DDL::Bool);
static bool parser_When_2503(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Bool*, DDL::Input*, DDL::Input, DDL::Bool);
static bool parser_Bool(DDL::ParserStateUser<ReferenceTable>&,
                        DDL::Bool*, DDL::Input*, DDL::Input);
static bool parser_Sign(DDL::ParserStateUser<ReferenceTable>&,
                        User::Sign*, DDL::Input*, DDL::Input);
static bool parser_Digit(DDL::ParserStateUser<ReferenceTable>&,
                         DDL::Integer*, DDL::Input*, DDL::Input);
static DDL::Integer parser_for_2667(DDL::Integer,
                                    DDL::Array<DDL::Integer>::Iterator, DDL::Integer);
static DDL::Integer parser_numBase_2507(DDL::Integer,
                                        DDL::Array<DDL::Integer>);
static bool parser_Many_2672(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::Integer>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<DDL::Integer>);
static bool parser_Many_2677(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::Integer>*, DDL::Input*, DDL::Input,
                             DDL::Builder<DDL::Integer>);
static bool parser_Natural(DDL::ParserStateUser<ReferenceTable>&,
                           DDL::Integer*, DDL::Input*, DDL::Input);
static bool parser_Many_2687(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::Integer>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<DDL::Integer>, DDL::UInt<64>);
static bool parser_Many_2692(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::Integer>*, DDL::Input*, DDL::Input,
                             DDL::Builder<DDL::Integer>, DDL::UInt<64>);
static bool parser_for_2701(DDL::ParserStateUser<ReferenceTable>&,
                            User::Number*, DDL::Input*, DDL::Input, User::Number,
                            DDL::Array<DDL::Integer>::Iterator);
static bool parser_Frac(DDL::ParserStateUser<ReferenceTable>&,
                        User::Number*, DDL::Input*, DDL::Input, DDL::UInt<64>,
                        User::Number);
static bool parser_UnsignedLeadDigits(DDL::ParserStateUser<ReferenceTable>&,
                                      User::Number*, DDL::Input*, DDL::Input);
static bool parser_UnsignedNumber(DDL::ParserStateUser<ReferenceTable>&,
                                  User::Number*, DDL::Input*, DDL::Input);
static bool parser_Many_2718(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Token_2512(DDL::ParserStateUser<ReferenceTable>&,
                              User::Number*, DDL::Input*, DDL::Input);
static bool parser_Number(DDL::ParserStateUser<ReferenceTable>&,
                          User::Number*, DDL::Input*, DDL::Input);
static bool parser_OctDigit(DDL::ParserStateUser<ReferenceTable>&,
                            DDL::Integer*, DDL::Input*, DDL::Input);
static bool parser_HexDigit(DDL::ParserStateUser<ReferenceTable>&,
                            DDL::Integer*, DDL::Input*, DDL::Input);
static bool parser_Guard_(DDL::ParserStateUser<ReferenceTable>&,
                          DDL::Unit*, DDL::Input*, DDL::Input, DDL::Bool);
static bool parser_NumberAsNat(DDL::ParserStateUser<ReferenceTable>&,
                               DDL::Integer*, DDL::Input*, DDL::Input, User::Number);
static bool parser_Many_2736(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::Integer>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<DDL::Integer>);
static bool parser_Many_2741(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::Integer>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<DDL::Integer>);
static bool parser_StringNumEsc(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input);
static bool parser_When_2519(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                             DDL::Array<DDL::UInt<8>>);
static bool parser_When_2520(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                             DDL::Array<DDL::UInt<8>>);
static bool parser_When_2521(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                             DDL::Array<DDL::UInt<8>>);
static bool parser_When_2522(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                             DDL::Array<DDL::UInt<8>>);
static bool parser_When_2523(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                             DDL::Array<DDL::UInt<8>>);
static bool parser_When_2524(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                             DDL::Array<DDL::UInt<8>>);
static bool parser_StringEsc(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input);
static bool parser_Many_2773(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<DDL::UInt<8>>);
static bool parser_Many_2778(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                             DDL::Builder<DDL::UInt<8>>);
static bool parser_StringChars(DDL::ParserStateUser<ReferenceTable>&,
                               DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input);
static bool parser_StringInParens(DDL::ParserStateUser<ReferenceTable>&,
                                  DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input);
static bool parser_StringChunk(DDL::ParserStateUser<ReferenceTable>&,
                               DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input);
static bool parser_Many_2763(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::Array<DDL::UInt<8>>>*, DDL::Input*, DDL::Input,
                             DDL::Builder<DDL::Array<DDL::UInt<8>>>);
static bool parser_Many_2783(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Token__2529(DDL::ParserStateUser<ReferenceTable>&,
                               DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_String(DDL::ParserStateUser<ReferenceTable>&,
                          DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input);
static bool parser_Many_2787(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Token_2531(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Integer*, DDL::Input*, DDL::Input);
static bool parser_Many_2791(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::Integer>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<DDL::Integer>);
static bool parser_HexStringNum2(DDL::ParserStateUser<ReferenceTable>&,
                                 DDL::UInt<8>*, DDL::Input*, DDL::Input);
static bool parser_HexStringNum1(DDL::ParserStateUser<ReferenceTable>&,
                                 DDL::UInt<8>*, DDL::Input*, DDL::Input);
static bool parser_Many_2800(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Token__2534(DDL::ParserStateUser<ReferenceTable>&,
                               DDL::Unit*, DDL::Input*, DDL::Input, DDL::Array<DDL::UInt<8>>);
static bool parser_KW_(DDL::ParserStateUser<ReferenceTable>&,
                       DDL::Unit*, DDL::Input*, DDL::Input, DDL::Array<DDL::UInt<8>>);
static bool parser_Many_2807(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                             DDL::Builder<DDL::UInt<8>>);
static bool parser_Between_2536(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                                DDL::Array<DDL::UInt<8>>, DDL::Array<DDL::UInt<8>>);
static bool parser_HexString(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input);
static bool parser_Many_2819(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::Integer>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<DDL::Integer>);
static bool parser_NameEsc(DDL::ParserStateUser<ReferenceTable>&,
                           DDL::UInt<8>*, DDL::Input*, DDL::Input);
static bool parser_NameChar(DDL::ParserStateUser<ReferenceTable>&,
                            DDL::UInt<8>*, DDL::Input*, DDL::Input);
static bool parser_Many_2828(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                             DDL::Builder<DDL::UInt<8>>);
static bool parser_Many_2833(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Token_2540(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input);
static bool parser_Name(DDL::ParserStateUser<ReferenceTable>&,
                        DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input);
static bool parser_Null(DDL::ParserStateUser<ReferenceTable>&,
                        DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Many_2836(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Token_2543(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Integer*, DDL::Input*, DDL::Input);
static bool parser_Ref(DDL::ParserStateUser<ReferenceTable>&,
                       User::Ref*, DDL::Input*, DDL::Input);
static bool parser_for_2854(DDL::ParserStateUser<ReferenceTable>&,
                            DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>*, DDL::Input*,
                            DDL::Input, DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>,
                            DDL::Array<User::Dict0>::Iterator);
static bool parser_Array(DDL::ParserStateUser<ReferenceTable>&,
                         DDL::Array<User::Value>*, DDL::Input*, DDL::Input);
static bool parser_Many_2845(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<User::Dict0>*, DDL::Input*, DDL::Input,
                             DDL::Builder<User::Dict0>);
static bool parser_Between_2546(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Array<User::Dict0>*, DDL::Input*, DDL::Input,
                                DDL::Array<DDL::UInt<8>>, DDL::Array<DDL::UInt<8>>);
static bool parser_Dict(DDL::ParserStateUser<ReferenceTable>&,
                        DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>*, DDL::Input*,
                        DDL::Input);
static bool parser_Value(DDL::ParserStateUser<ReferenceTable>&,
                         User::Value*, DDL::Input*, DDL::Input);
static bool parser_Many_2870(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<User::Value>*, DDL::Input*, DDL::Input,
                             DDL::Builder<User::Value>);
static bool parser_Between_2549(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Array<User::Value>*, DDL::Input*, DDL::Input,
                                DDL::Array<DDL::UInt<8>>, DDL::Array<DDL::UInt<8>>);
static bool parser_NatValue(DDL::ParserStateUser<ReferenceTable>&,
                            DDL::Integer*, DDL::Input*, DDL::Input, User::Value);
static User::Value parser_nullValue();
static bool parser_GuardMsg_(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input, DDL::Bool,
                             DDL::Array<DDL::UInt<8>>);
static bool parser_CheckExpected(DDL::ParserStateUser<ReferenceTable>&,
                                 User::TopDeclDef*, DDL::Input*, DDL::Input, User::Ref,
                                 User::TopDecl);
static bool parser_ResolveDeclRef(DDL::ParserStateUser<ReferenceTable>&,
                                  User::TopDeclDef*, DDL::Input*, DDL::Input, User::Ref);
static bool parser_ResolveValRef(DDL::ParserStateUser<ReferenceTable>&,
                                 User::Value*, DDL::Input*, DDL::Input, User::Ref);
static bool parser_ResolveVal(DDL::ParserStateUser<ReferenceTable>&,
                              User::Value*, DDL::Input*, DDL::Input, User::Value);
static bool parser_LookupResolve(DDL::ParserStateUser<ReferenceTable>&,
                                 User::Value*, DDL::Input*, DDL::Input, DDL::Array<DDL::UInt<8>>,
                                 DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_StreamLen(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::UInt<64>*, DDL::Input*, DDL::Input,
                             DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_FilterParam(DDL::ParserStateUser<ReferenceTable>&,
                               DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>>*,
                               DDL::Input*, DDL::Input, User::Value);
static bool parser_Filter(DDL::ParserStateUser<ReferenceTable>&,
                          User::Filter*, DDL::Input*, DDL::Input, User::Value, User::Value);
static User::fdDefaults parser_fdDefaults();
static bool parser_LookupNat(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Integer*, DDL::Input*, DDL::Input, DDL::Array<DDL::UInt<8>>,
                             DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_Default_2565(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Integer*, DDL::Input*, DDL::Input,
                                DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>, DDL::Integer);
static bool parser_Default_2566(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Integer*, DDL::Input*, DDL::Input,
                                DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>, DDL::Integer);
static bool parser_Default_2567(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Integer*, DDL::Input*, DDL::Input,
                                DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>, DDL::Integer);
static bool parser_Default_2568(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Integer*, DDL::Input*, DDL::Input,
                                DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>, DDL::Integer);
static bool parser_FlateDecodeParams(DDL::ParserStateUser<ReferenceTable>&,
                                     User::fdDefaults*, DDL::Input*, DDL::Input,
                                     DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>>);
static User::lzwDefaults parser_lzzwDefaults();
static bool parser_Default_2571(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Integer*, DDL::Input*, DDL::Input,
                                DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>, DDL::Integer);
static bool parser_LZWDecodeParams(DDL::ParserStateUser<ReferenceTable>&,
                                   User::lzwDefaults*, DDL::Input*, DDL::Input,
                                   DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>>);
static bool parser_ApplyFilter_2574(DDL::ParserStateUser<ReferenceTable>&,
                                    User::ApplyFilter*, DDL::Input*, DDL::Input, DDL::Input,
                                    User::fdDefaults, User::Filter, DDL::Bool, DDL::Input);
static bool parser_ApplyFilter_2576(DDL::ParserStateUser<ReferenceTable>&,
                                    User::ApplyFilter*, DDL::Input*, DDL::Input, DDL::Input,
                                    User::lzwDefaults, User::Filter, DDL::Bool, DDL::Input);
static bool parser_ApplyFilter_2578(DDL::ParserStateUser<ReferenceTable>&,
                                    User::ApplyFilter*, DDL::Input*, DDL::Input, DDL::Input,
                                    User::Filter, DDL::Bool, DDL::Input);
static bool parser_ApplyFilter_2580(DDL::ParserStateUser<ReferenceTable>&,
                                    User::ApplyFilter*, DDL::Input*, DDL::Input, DDL::Input,
                                    User::Filter, DDL::Bool, DDL::Input);
static bool parser_ApplyFilter_2581(DDL::ParserStateUser<ReferenceTable>&,
                                    User::ApplyFilter*, DDL::Input*, DDL::Input, DDL::Input,
                                    User::Filter, DDL::Bool, DDL::Input);
static bool parser_ApplyFilter_2582(DDL::ParserStateUser<ReferenceTable>&,
                                    User::ApplyFilter*, DDL::Input*, DDL::Input, User::Filter,
                                    DDL::Bool, DDL::Input);
static bool parser_TryApplyFilter(DDL::ParserStateUser<ReferenceTable>&,
                                  User::ApplyFilter*, DDL::Input*, DDL::Input, User::Filter,
                                  DDL::Input);
static bool parser_Default_2584(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Array<User::Value>*, DDL::Input*, DDL::Input, User::Value,
                                DDL::Array<User::Value>);
static bool parser_OneOrArray(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Array<User::Value>*, DDL::Input*, DDL::Input, User::Value);
static bool parser_Default_2586(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Array<User::Value>*, DDL::Input*, DDL::Input,
                                DDL::Array<DDL::UInt<8>>,
                                DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>,
                                DDL::Array<User::Value>);
static bool parser_LookupOptArray(DDL::ParserStateUser<ReferenceTable>&,
                                  DDL::Array<User::Value>*, DDL::Input*, DDL::Input,
                                  DDL::Array<DDL::UInt<8>>,
                                  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_Default_2588(DDL::ParserStateUser<ReferenceTable>&,
                                User::Value*, DDL::Input*, DDL::Input, DDL::Array<User::Value>,
                                DDL::UInt<64>, User::Value);
static bool parser_for_3063(DDL::ParserStateUser<ReferenceTable>&,
                            User::ApplyFilter*, DDL::Input*, DDL::Input, User::ApplyFilter,
                            DDL::Array<User::Value>::Iterator, DDL::Array<User::Value>);
static bool parser_ApplyFilters(DDL::ParserStateUser<ReferenceTable>&,
                                User::ApplyFilter*, DDL::Input*, DDL::Input,
                                DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>, DDL::Input);
static bool parser_SetStreamAt_(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Unit*, DDL::Input*, DDL::Input, DDL::UInt<64>, DDL::Input);
static bool parser_Chunk_2591(DDL::ParserStateUser<ReferenceTable>&,
                              User::ApplyFilter*, DDL::Input*, DDL::Input,
                              DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>, DDL::UInt<64>);
static bool parser_Many_3085(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Token_2592(DDL::ParserStateUser<ReferenceTable>&,
                              User::ApplyFilter*, DDL::Input*, DDL::Input,
                              DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_StreamBody(DDL::ParserStateUser<ReferenceTable>&,
                              User::ApplyFilter*, DDL::Input*, DDL::Input,
                              DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_SimpleEOL_(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Stream(DDL::ParserStateUser<ReferenceTable>&,
                          User::Stream*, DDL::Input*, DDL::Input, User::Value);
static bool parser_TopDeclDef(DDL::ParserStateUser<ReferenceTable>&,
                              User::TopDeclDef*, DDL::Input*, DDL::Input);
static bool parser_Many_3096(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_ManyWS_(DDL::ParserStateUser<ReferenceTable>&,
                           DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_TopDecl(DDL::ParserStateUser<ReferenceTable>&,
                           User::TopDecl*, DDL::Input*, DDL::Input);
static bool parser_LookupSizze(DDL::ParserStateUser<ReferenceTable>&,
                               DDL::UInt<64>*, DDL::Input*, DDL::Input, DDL::Array<DDL::UInt<8>>,
                               DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_LookupName(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                              DDL::Array<DDL::UInt<8>>,
                              DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_CheckType_(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Unit*, DDL::Input*, DDL::Input, DDL::Array<DDL::UInt<8>>,
                              DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_ObjStreamMeta(DDL::ParserStateUser<ReferenceTable>&,
                                 User::ObjStreamMeta*, DDL::Input*, DDL::Input);
static bool parser_Many_3124(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<User::ObjStreamMeta>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<User::ObjStreamMeta>, DDL::UInt<64>);
static bool parser_LookAhead_2603(DDL::ParserStateUser<ReferenceTable>&,
                                  DDL::Array<User::ObjStreamMeta>*, DDL::Input*, DDL::Input,
                                  DDL::Input, DDL::UInt<64>);
static bool parser_WithStream_2604(DDL::ParserStateUser<ReferenceTable>&,
                                   DDL::Array<User::ObjStreamMeta>*, DDL::Input*, DDL::Input,
                                   DDL::UInt<64>, DDL::Input);
static bool parser_ObjStream(DDL::ParserStateUser<ReferenceTable>&,
                             User::ObjStream*, DDL::Input*, DDL::Input, User::Stream);
static bool parser_LookAhead_2606(DDL::ParserStateUser<ReferenceTable>&,
                                  User::Value*, DDL::Input*, DDL::Input, DDL::Input);
static bool parser_WithStream_2607(DDL::ParserStateUser<ReferenceTable>&,
                                   User::Value*, DDL::Input*, DDL::Input, DDL::Input);
static bool parser_ObjStreamEntry(DDL::ParserStateUser<ReferenceTable>&,
                                  User::TopDecl*, DDL::Input*, DDL::Input, User::ObjStream,
                                  DDL::UInt<64>);
static bool parser_LookupNatDirect(DDL::ParserStateUser<ReferenceTable>&,
                                   DDL::Integer*, DDL::Input*, DDL::Input, DDL::Array<DDL::UInt<8>>,
                                   DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_map_3185(DDL::ParserStateUser<ReferenceTable>&,
                            DDL::Builder<DDL::Integer>*, DDL::Input*, DDL::Input,
                            DDL::Builder<DDL::Integer>, DDL::Array<User::Value>::Iterator);
static bool parser_LookupNats(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Array<DDL::Integer>*, DDL::Input*, DDL::Input,
                              DDL::Array<DDL::UInt<8>>,
                              DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_Many_3190(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_WhiteTillEOL_(DDL::ParserStateUser<ReferenceTable>&,
                                 DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Many_3192(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Many_3194(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_Many_3200(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_PdfEnd(DDL::ParserStateUser<ReferenceTable>&,
                          DDL::UInt<64>*, DDL::Input*, DDL::Input);
static bool parser_UsedEntry(DDL::ParserStateUser<ReferenceTable>&,
                             User::UsedEntry*, DDL::Input*, DDL::Input, DDL::Integer,
                             DDL::Integer);
static bool parser_FreeEntry(DDL::ParserStateUser<ReferenceTable>&,
                             User::FreeEntry*, DDL::Input*, DDL::Input, DDL::Integer,
                             DDL::Integer);
static bool parser_Many_3212(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::Integer>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<DDL::Integer>, DDL::UInt<64>);
static bool parser_NatN(DDL::ParserStateUser<ReferenceTable>&,
                        DDL::Integer*, DDL::Input*, DDL::Input, DDL::UInt<64>);
static bool parser_CrossRefEntry(DDL::ParserStateUser<ReferenceTable>&,
                                 User::CrossRefEntry*, DDL::Input*, DDL::Input);
static bool parser_Many_3229(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<User::CrossRefEntry>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<User::CrossRefEntry>, DDL::UInt<64>);
static bool parser_CrossRefSubSection(DDL::ParserStateUser<ReferenceTable>&,
                                      User::CrossRefSubSection*, DDL::Input*, DDL::Input);
static bool parser_Many_3237(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<User::CrossRefSubSection>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<User::CrossRefSubSection>);
static bool parser_Many_3242(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<User::CrossRefSubSection>*, DDL::Input*, DDL::Input,
                             DDL::Builder<User::CrossRefSubSection>);
static bool parser_CrossRefSection(DDL::ParserStateUser<ReferenceTable>&,
                                   DDL::Array<User::CrossRefSubSection>*, DDL::Input*, DDL::Input);
static bool parser_TrailerIds(DDL::ParserStateUser<ReferenceTable>&,
                              User::TrailerIds*, DDL::Input*, DDL::Input,
                              DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_TrailerDictEncrypt(DDL::ParserStateUser<ReferenceTable>&,
                                      User::TrailerDictEncrypt*, DDL::Input*, DDL::Input,
                                      DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>, User::Value);
static bool parser_TrailerDict(DDL::ParserStateUser<ReferenceTable>&,
                               User::TrailerDict*, DDL::Input*, DDL::Input,
                               DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_Many_3292(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Unit*, DDL::Input*, DDL::Input);
static bool parser_CrossRefAndTrailer(DDL::ParserStateUser<ReferenceTable>&,
                                      User::CrossRefAndTrailer*, DDL::Input*, DDL::Input);
static bool parser_Default_2623(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Array<DDL::Integer>*, DDL::Input*, DDL::Input,
                                DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>,
                                DDL::Array<DDL::Integer>);
static bool parser_map_3316(DDL::ParserStateUser<ReferenceTable>&,
                            DDL::Builder<User::XRefIndex0>*, DDL::Input*, DDL::Input,
                            DDL::Builder<User::XRefIndex0>,
                            DDL::Array<DDL::UInt<64>>::Iterator, DDL::Array<DDL::Integer>);
static bool parser_XRefIndex(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Array<User::XRefIndex0>*, DDL::Input*, DDL::Input,
                             DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_LookupInt(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Integer*, DDL::Input*, DDL::Input, DDL::Array<User::Value>,
                             DDL::UInt<64>);
static bool parser_for_3348(DDL::ParserStateUser<ReferenceTable>&,
                            DDL::Integer*, DDL::Input*, DDL::Input, DDL::Integer,
                            DDL::Array<User::Value>::Iterator);
static bool parser_XRefFormat(DDL::ParserStateUser<ReferenceTable>&,
                              User::XRefFormat*, DDL::Input*, DDL::Input,
                              DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_XRefMeta(DDL::ParserStateUser<ReferenceTable>&,
                            User::XRefMeta*, DDL::Input*, DDL::Input,
                            DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_Many_3361(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<DDL::UInt<8>>, DDL::UInt<64>);
static bool parser_for_3370(DDL::ParserStateUser<ReferenceTable>&,
                            DDL::Integer*, DDL::Input*, DDL::Input, DDL::Integer,
                            DDL::Array<DDL::UInt<8>>::Iterator);
static bool parser_BEBytes(DDL::ParserStateUser<ReferenceTable>&,
                           DDL::Integer*, DDL::Input*, DDL::Input, DDL::UInt<64>);
static bool parser_XRefFieldWithDefault(DDL::ParserStateUser<ReferenceTable>&,
                                        DDL::Integer*, DDL::Input*, DDL::Input, DDL::Integer,
                                        DDL::UInt<64>);
static bool parser_XRefFieldRequired(DDL::ParserStateUser<ReferenceTable>&,
                                     DDL::Integer*, DDL::Input*, DDL::Input, DDL::UInt<64>);
static bool parser_XRefFree(DDL::ParserStateUser<ReferenceTable>&,
                            User::XRefFree*, DDL::Input*, DDL::Input, User::XRefFormat);
static bool parser_XRefOffset(DDL::ParserStateUser<ReferenceTable>&,
                              User::XRefOffset*, DDL::Input*, DDL::Input, User::XRefFormat);
static bool parser_XRefCompressed(DDL::ParserStateUser<ReferenceTable>&,
                                  User::XRefCompressed*, DDL::Input*, DDL::Input, User::XRefFormat);
static bool parser_Chunk_2634(DDL::ParserStateUser<ReferenceTable>&,
                              User::XRefObjEntry*, DDL::Input*, DDL::Input, User::XRefFormat,
                              DDL::UInt<64>);
static bool parser_XRefObjEntry(DDL::ParserStateUser<ReferenceTable>&,
                                User::XRefObjEntry*, DDL::Input*, DDL::Input, User::XRefFormat);
static bool parser_Many_3407(DDL::ParserStateUser<ReferenceTable>&,
                             DDL::Builder<User::XRefObjEntry>*, DDL::Input*, DDL::Input,
                             DDL::UInt<64>, DDL::Builder<User::XRefObjEntry>, User::XRefMeta,
                             User::XRefIndex0);
static bool parser_map_3413(DDL::ParserStateUser<ReferenceTable>&,
                            DDL::Builder<User::XRefObjTable0>*, DDL::Input*, DDL::Input,
                            DDL::Builder<User::XRefObjTable0>,
                            DDL::Array<User::XRefIndex0>::Iterator, User::XRefMeta);
static bool parser_XRefObjTable(DDL::ParserStateUser<ReferenceTable>&,
                                User::XRefObjTable*, DDL::Input*, DDL::Input, User::XRefMeta);
static bool parser_LookAhead_2637(DDL::ParserStateUser<ReferenceTable>&,
                                  User::XRefObjTable*, DDL::Input*, DDL::Input, DDL::Input,
                                  User::Stream);
static bool parser_WithStream_2638(DDL::ParserStateUser<ReferenceTable>&,
                                   User::XRefObjTable*, DDL::Input*, DDL::Input, User::Stream,
                                   DDL::Input);
static bool parser_XRefObj(DDL::ParserStateUser<ReferenceTable>&,
                           User::XRefObjTable*, DDL::Input*, DDL::Input);
static bool parser_CrossRef(DDL::ParserStateUser<ReferenceTable>&,
                            User::CrossRef*, DDL::Input*, DDL::Input);
static bool parser_NumberAsNat_(DDL::ParserStateUser<ReferenceTable>&,
                                DDL::Unit*, DDL::Input*, DDL::Input, User::Number);
static bool parser_LookupNat_(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Unit*, DDL::Input*, DDL::Input, DDL::Array<DDL::UInt<8>>,
                              DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_V4stmFname(DDL::ParserStateUser<ReferenceTable>&,
                              DDL::Array<DDL::UInt<8>>*, DDL::Input*, DDL::Input,
                              DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>);
static bool parser_ChooseCiph_2644(DDL::ParserStateUser<ReferenceTable>&,
                                   User::ChooseCiph*, DDL::Input*, DDL::Input,
                                   DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>, DDL::Integer);
static bool parser_EncryptionDict(DDL::ParserStateUser<ReferenceTable>&,
                                  User::EncryptionDict*, DDL::Input*, DDL::Input,
                                  User::TrailerDictEncrypt);
void parseTopDecl ( ReferenceTable &userState
                  , DDL::ParseError &error
                  , std::vector<User::TopDecl> &results
                  , DDL::Input a1
                  ) {
  DDL::ParserStateUser<ReferenceTable> p{userState};
  User::TopDecl out_result;
  DDL::Input out_input;
  if (parser_TopDecl(p, &out_result, &out_input, a1)) {
    results.push_back(out_result);
    out_input.free();
  } else {
    error = p.getParseError();
  }
}
void parseObjStream ( ReferenceTable &userState
                    , DDL::ParseError &error
                    , std::vector<User::ObjStream> &results
                    , DDL::Input a1
                    , User::Stream a2
                    ) {
  DDL::ParserStateUser<ReferenceTable> p{userState};
  User::ObjStream out_result;
  DDL::Input out_input;
  if (parser_ObjStream(p, &out_result, &out_input, a1, a2)) {
    results.push_back(out_result);
    out_input.free();
  } else {
    error = p.getParseError();
  }
}
void parseObjStreamEntry ( ReferenceTable &userState
                         , DDL::ParseError &error
                         , std::vector<User::TopDecl> &results
                         , DDL::Input a1
                         , User::ObjStream a2
                         , DDL::UInt<64> a3
                         ) {
  DDL::ParserStateUser<ReferenceTable> p{userState};
  User::TopDecl out_result;
  DDL::Input out_input;
  if (parser_ObjStreamEntry(p, &out_result, &out_input, a1, a2,
                            a3)) {
    results.push_back(out_result);
    out_input.free();
  } else {
    error = p.getParseError();
  }
}
void parsePdfEnd ( ReferenceTable &userState
                 , DDL::ParseError &error
                 , std::vector<DDL::UInt<64>> &results
                 , DDL::Input a1
                 ) {
  DDL::ParserStateUser<ReferenceTable> p{userState};
  DDL::UInt<64> out_result;
  DDL::Input out_input;
  if (parser_PdfEnd(p, &out_result, &out_input, a1)) {
    results.push_back(out_result);
    out_input.free();
  } else {
    error = p.getParseError();
  }
}
void parseCrossRef ( ReferenceTable &userState
                   , DDL::ParseError &error
                   , std::vector<User::CrossRef> &results
                   , DDL::Input a1
                   ) {
  DDL::ParserStateUser<ReferenceTable> p{userState};
  User::CrossRef out_result;
  DDL::Input out_input;
  if (parser_CrossRef(p, &out_result, &out_input, a1)) {
    results.push_back(out_result);
    out_input.free();
  } else {
    error = p.getParseError();
  }
}
void parseEncryptionDict ( ReferenceTable &userState
                         , DDL::ParseError &error
                         , std::vector<User::EncryptionDict> &results
                         , DDL::Input a1
                         , User::TrailerDictEncrypt a2
                         ) {
  DDL::ParserStateUser<ReferenceTable> p{userState};
  User::EncryptionDict out_result;
  DDL::Input out_input;
  if (parser_EncryptionDict(p, &out_result, &out_input, a1, a2)) {
    results.push_back(out_result);
    out_input.free();
  } else {
    error = p.getParseError();
  }
}
DDL::Bool parser_z24zlf(DDL::UInt<8> a1) {
  
// Parameters for L_0_$lf2489
  DDL::UInt<8> z24zlf2489_0_ra0u;
  z24zlf2489_0_ra0u = a1;
  goto z24zlf2489_0;
  // NormalBlock
  z24zlf2489_0: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(10)} == z24zlf2489_0_ra0u};
    return r0;
  }
}
DDL::Bool parser_z24zcr(DDL::UInt<8> a1) {
  
// Parameters for L_0_$cr2490
  DDL::UInt<8> z24zcr2490_0_ra0u;
  z24zcr2490_0_ra0u = a1;
  goto z24zcr2490_0;
  // NormalBlock
  z24zcr2490_0: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(13)} == z24zcr2490_0_ra0u};
    return r0;
  }
}
DDL::Bool parser_z24zspace(DDL::UInt<8> a1) {
  
// Parameters for L_0_$space2491
  DDL::UInt<8> z24zspace2491_0_ra0u;
  z24zspace2491_0_ra0u = a1;
  goto z24zspace2491_0;
  // NormalBlock
  z24zspace2491_0: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(32)} == z24zspace2491_0_ra0u};
    return r0;
  }
}
DDL::Bool parser_z24zsimpleWS(DDL::UInt<8> a1) {
  
// Parameters for L_1_$simpleWS2492
  DDL::UInt<8> z24zsimpleWS2492_1_ra0u;
  
// Parameters for L_2_$simpleWS2492
  DDL::Bool z24zsimpleWS2492_2_ra0u;
  DDL::UInt<8> z24zsimpleWS2492_2_ra1u;
  
// Parameters for L_3_$simpleWS2492
  DDL::UInt<8> z24zsimpleWS2492_3_ra0u;
  
// Parameters for L_4_$simpleWS2492
  DDL::UInt<8> z24zsimpleWS2492_4_ra0u;
  
// Parameters for L_5_$simpleWS2492
  DDL::Bool z24zsimpleWS2492_5_ra0u;
  DDL::UInt<8> z24zsimpleWS2492_5_ra1u;
  
// Parameters for L_6_$simpleWS2492
  DDL::UInt<8> z24zsimpleWS2492_6_ra0u;
  
// Parameters for L_7_$simpleWS2492
  DDL::UInt<8> z24zsimpleWS2492_7_ra0u;
  
// Parameters for L_8_$simpleWS2492
  DDL::UInt<8> z24zsimpleWS2492_8_ra0u;
  z24zsimpleWS2492_8_ra0u = a1;
  goto z24zsimpleWS2492_8;
  // NormalBlock
  z24zsimpleWS2492_0: {
    return DDL::Bool(true);
  }
  // NormalBlock
  z24zsimpleWS2492_1: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(32)} == z24zsimpleWS2492_1_ra0u};
    return r0;
  }
  // NormalBlock
  z24zsimpleWS2492_2: {
    if (z24zsimpleWS2492_2_ra0u.getValue()) {
      goto z24zsimpleWS2492_0;
    } else {
      z24zsimpleWS2492_1_ra0u = z24zsimpleWS2492_2_ra1u;
      goto z24zsimpleWS2492_1;
    }
  }
  // NormalBlock
  z24zsimpleWS2492_3: {
    z24zsimpleWS2492_2_ra0u = DDL::Bool(true);
    z24zsimpleWS2492_2_ra1u = z24zsimpleWS2492_3_ra0u;
    goto z24zsimpleWS2492_2;
  }
  // NormalBlock
  z24zsimpleWS2492_4: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(12)} == z24zsimpleWS2492_4_ra0u};
    z24zsimpleWS2492_2_ra0u = r0;
    z24zsimpleWS2492_2_ra1u = z24zsimpleWS2492_4_ra0u;
    goto z24zsimpleWS2492_2;
  }
  // NormalBlock
  z24zsimpleWS2492_5: {
    if (z24zsimpleWS2492_5_ra0u.getValue()) {
      z24zsimpleWS2492_3_ra0u = z24zsimpleWS2492_5_ra1u;
      goto z24zsimpleWS2492_3;
    } else {
      z24zsimpleWS2492_4_ra0u = z24zsimpleWS2492_5_ra1u;
      goto z24zsimpleWS2492_4;
    }
  }
  // NormalBlock
  z24zsimpleWS2492_6: {
    z24zsimpleWS2492_5_ra0u = DDL::Bool(true);
    z24zsimpleWS2492_5_ra1u = z24zsimpleWS2492_6_ra0u;
    goto z24zsimpleWS2492_5;
  }
  // NormalBlock
  z24zsimpleWS2492_7: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(9)} == z24zsimpleWS2492_7_ra0u};
    z24zsimpleWS2492_5_ra0u = r0;
    z24zsimpleWS2492_5_ra1u = z24zsimpleWS2492_7_ra0u;
    goto z24zsimpleWS2492_5;
  }
  // NormalBlock
  z24zsimpleWS2492_8: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(0)} == z24zsimpleWS2492_8_ra0u};
    if (r0.getValue()) {
      z24zsimpleWS2492_6_ra0u = z24zsimpleWS2492_8_ra0u;
      goto z24zsimpleWS2492_6;
    } else {
      z24zsimpleWS2492_7_ra0u = z24zsimpleWS2492_8_ra0u;
      goto z24zsimpleWS2492_7;
    }
  }
}
bool parser_EOL(DDL::ParserStateUser<ReferenceTable> &p,
                DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_EOL2493
  DDL::Input EOL2493_1_ra0o;
  
// Parameters for L_2_EOL2493
  DDL::Input EOL2493_2_ra0o;
  DDL::Input EOL2493_2_ra1o;
  
// Parameters for L_4_EOL2493
  DDL::Input EOL2493_4_ra0o;
  
// Parameters for L_5_EOL2493
  DDL::Input EOL2493_5_ra0o;
  DDL::Input EOL2493_5_ra1o;
  
// Parameters for L_6_EOL2493
  DDL::Bool EOL2493_6_ra0u;
  DDL::Input EOL2493_6_ra2o;
  DDL::Input EOL2493_6_ra1o;
  DDL::Input EOL2493_6_ra3o;
  
// Parameters for L_7_EOL2493
  DDL::Input EOL2493_7_ra2o;
  DDL::Input EOL2493_7_ra0o;
  DDL::Input EOL2493_7_ra1o;
  
// Parameters for L_9_EOL2493
  DDL::Input EOL2493_9_ra0o;
  
// Parameters for L_11_EOL2493
  DDL::Input EOL2493_11_ra0o;
  
// Parameters for L_12_EOL2493
  DDL::Input EOL2493_12_ra0o;
  
// Parameters for L_13_EOL2493
  DDL::Bool EOL2493_13_ra0u;
  DDL::Input EOL2493_13_ra1o;
  DDL::Input EOL2493_13_ra2o;
  
// Parameters for L_14_EOL2493
  DDL::Input EOL2493_14_ra1o;
  DDL::Input EOL2493_14_ra0o;
  
// Parameters for L_16_EOL2493
  DDL::Input EOL2493_16_ra0o;
  
// Parameters for L_17_EOL2493
  DDL::Input EOL2493_17_ra0o;
  DDL::Input EOL2493_17_ra1o;
  
// Parameters for L_19_EOL2493
  DDL::Input EOL2493_19_ra0o;
  
// Parameters for L_20_EOL2493
  DDL::Input EOL2493_20_ra0o;
  DDL::Input EOL2493_20_ra1o;
  
// Parameters for L_21_EOL2493
  DDL::Bool EOL2493_21_ra0u;
  DDL::Input EOL2493_21_ra2o;
  DDL::Input EOL2493_21_ra1o;
  DDL::Input EOL2493_21_ra3o;
  
// Parameters for L_22_EOL2493
  DDL::Input EOL2493_22_ra2o;
  DDL::Input EOL2493_22_ra0o;
  DDL::Input EOL2493_22_ra1o;
  
// Parameters for L_23_EOL2493
  DDL::Input EOL2493_23_ra0o;
  EOL2493_23_ra0o = a1;
  goto EOL2493_23;
  // NormalBlock
  EOL2493_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = EOL2493_1_ra0o;
    return true;
  }
  // NormalBlock
  EOL2493_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:54--18:56",
               EOL2493_2_ra0o, r0);
    EOL2493_2_ra0o.free();
    r0.free();
    EOL2493_1_ra0o = EOL2493_2_ra1o;
    goto EOL2493_1;
  }
  // NormalBlock
  EOL2493_4: {
    DDL::Input r0 = EOL2493_4_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  EOL2493_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:54--18:56",
               EOL2493_5_ra0o, r0);
    EOL2493_5_ra0o.free();
    r0.free();
    EOL2493_1_ra0o = EOL2493_5_ra1o;
    goto EOL2493_1;
  }
  // ReturnBlock RetPure
  EOL2493_6: {
    if (EOL2493_6_ra0u.getValue()) {
      EOL2493_6_ra1o.free();
      EOL2493_6_ra2o.free();
      EOL2493_4_ra0o = EOL2493_6_ra3o;
      goto EOL2493_4;
    } else {
      EOL2493_6_ra3o.free();
      EOL2493_5_ra0o = EOL2493_6_ra2o;
      EOL2493_5_ra1o = EOL2493_6_ra1o;
      goto EOL2493_5;
    }
  }
  // NormalBlock
  EOL2493_7: {
    DDL::UInt<8> r0 = DDL::UInt<8>(EOL2493_7_ra0o.iHead());
    EOL2493_6_ra0u = parser_z24zlf(r0);
    EOL2493_6_ra2o = EOL2493_7_ra2o;
    EOL2493_6_ra1o = EOL2493_7_ra1o;
    EOL2493_6_ra3o = EOL2493_7_ra0o;
    goto EOL2493_6;
  }
  // NormalBlock
  EOL2493_9: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:39--18:41",
               EOL2493_9_ra0o, r0);
    EOL2493_9_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EOL2493_11: {
    DDL::Input r0 = EOL2493_11_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Bool r1 = r0.length() == 0;
    r0.copy();
    r0.copy();
    r0.copy();
    if (r1.getValue()) {
      r0.free();
      r0.free();
      EOL2493_2_ra0o = r0;
      EOL2493_2_ra1o = r0;
      goto EOL2493_2;
    } else {
      r0.free();
      EOL2493_7_ra2o = r0;
      EOL2493_7_ra0o = r0;
      EOL2493_7_ra1o = r0;
      goto EOL2493_7;
    }
  }
  // NormalBlock
  EOL2493_12: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:39--18:41",
               EOL2493_12_ra0o, r0);
    EOL2493_12_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock RetPure
  EOL2493_13: {
    if (EOL2493_13_ra0u.getValue()) {
      EOL2493_13_ra1o.free();
      EOL2493_11_ra0o = EOL2493_13_ra2o;
      goto EOL2493_11;
    } else {
      EOL2493_13_ra2o.free();
      EOL2493_12_ra0o = EOL2493_13_ra1o;
      goto EOL2493_12;
    }
  }
  // NormalBlock
  EOL2493_14: {
    DDL::UInt<8> r0 = DDL::UInt<8>(EOL2493_14_ra0o.iHead());
    EOL2493_13_ra0u = parser_z24zcr(r0);
    EOL2493_13_ra1o = EOL2493_14_ra1o;
    EOL2493_13_ra2o = EOL2493_14_ra0o;
    goto EOL2493_13;
  }
  // NormalBlock
  EOL2493_16: {
    DDL::Bool r0 = EOL2493_16_ra0o.length() == 0;
    EOL2493_16_ra0o.copy();
    if (r0.getValue()) {
      EOL2493_16_ra0o.free();
      EOL2493_9_ra0o = EOL2493_16_ra0o;
      goto EOL2493_9;
    } else {
      EOL2493_14_ra1o = EOL2493_16_ra0o;
      EOL2493_14_ra0o = EOL2493_16_ra0o;
      goto EOL2493_14;
    }
  }
  // NormalBlock
  EOL2493_17: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:30--18:32",
               EOL2493_17_ra0o, r0);
    EOL2493_17_ra0o.free();
    r0.free();
    EOL2493_16_ra0o = EOL2493_17_ra1o;
    goto EOL2493_16;
  }
  // NormalBlock
  EOL2493_19: {
    DDL::Input r0 = EOL2493_19_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  EOL2493_20: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:30--18:32",
               EOL2493_20_ra0o, r0);
    EOL2493_20_ra0o.free();
    r0.free();
    EOL2493_16_ra0o = EOL2493_20_ra1o;
    goto EOL2493_16;
  }
  // ReturnBlock RetPure
  EOL2493_21: {
    if (EOL2493_21_ra0u.getValue()) {
      EOL2493_21_ra1o.free();
      EOL2493_21_ra2o.free();
      EOL2493_19_ra0o = EOL2493_21_ra3o;
      goto EOL2493_19;
    } else {
      EOL2493_21_ra3o.free();
      EOL2493_20_ra0o = EOL2493_21_ra2o;
      EOL2493_20_ra1o = EOL2493_21_ra1o;
      goto EOL2493_20;
    }
  }
  // NormalBlock
  EOL2493_22: {
    DDL::UInt<8> r0 = DDL::UInt<8>(EOL2493_22_ra0o.iHead());
    EOL2493_21_ra0u = parser_z24zlf(r0);
    EOL2493_21_ra2o = EOL2493_22_ra2o;
    EOL2493_21_ra1o = EOL2493_22_ra1o;
    EOL2493_21_ra3o = EOL2493_22_ra0o;
    goto EOL2493_21;
  }
  // NormalBlock
  EOL2493_23: {
    DDL::Bool r0 = EOL2493_23_ra0o.length() == 0;
    EOL2493_23_ra0o.copy();
    EOL2493_23_ra0o.copy();
    EOL2493_23_ra0o.copy();
    if (r0.getValue()) {
      EOL2493_23_ra0o.free();
      EOL2493_23_ra0o.free();
      EOL2493_17_ra0o = EOL2493_23_ra0o;
      EOL2493_17_ra1o = EOL2493_23_ra0o;
      goto EOL2493_17;
    } else {
      EOL2493_23_ra0o.free();
      EOL2493_22_ra2o = EOL2493_23_ra0o;
      EOL2493_22_ra0o = EOL2493_23_ra0o;
      EOL2493_22_ra1o = EOL2493_23_ra0o;
      goto EOL2493_22;
    }
  }
}
bool parser_EOL_(DDL::ParserStateUser<ReferenceTable> &p,
                 DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_EOL_2494
  DDL::Input EOL_2494_1_ra0o;
  
// Parameters for L_2_EOL_2494
  DDL::Input EOL_2494_2_ra0o;
  DDL::Input EOL_2494_2_ra1o;
  
// Parameters for L_4_EOL_2494
  DDL::Input EOL_2494_4_ra0o;
  
// Parameters for L_5_EOL_2494
  DDL::Input EOL_2494_5_ra0o;
  DDL::Input EOL_2494_5_ra1o;
  
// Parameters for L_6_EOL_2494
  DDL::Bool EOL_2494_6_ra0u;
  DDL::Input EOL_2494_6_ra2o;
  DDL::Input EOL_2494_6_ra1o;
  DDL::Input EOL_2494_6_ra3o;
  
// Parameters for L_7_EOL_2494
  DDL::Input EOL_2494_7_ra2o;
  DDL::Input EOL_2494_7_ra0o;
  DDL::Input EOL_2494_7_ra1o;
  
// Parameters for L_9_EOL_2494
  DDL::Input EOL_2494_9_ra0o;
  
// Parameters for L_11_EOL_2494
  DDL::Input EOL_2494_11_ra0o;
  
// Parameters for L_12_EOL_2494
  DDL::Input EOL_2494_12_ra0o;
  
// Parameters for L_13_EOL_2494
  DDL::Bool EOL_2494_13_ra0u;
  DDL::Input EOL_2494_13_ra1o;
  DDL::Input EOL_2494_13_ra2o;
  
// Parameters for L_14_EOL_2494
  DDL::Input EOL_2494_14_ra1o;
  DDL::Input EOL_2494_14_ra0o;
  
// Parameters for L_16_EOL_2494
  DDL::Input EOL_2494_16_ra0o;
  
// Parameters for L_17_EOL_2494
  DDL::Input EOL_2494_17_ra0o;
  DDL::Input EOL_2494_17_ra1o;
  
// Parameters for L_19_EOL_2494
  DDL::Input EOL_2494_19_ra0o;
  
// Parameters for L_20_EOL_2494
  DDL::Input EOL_2494_20_ra0o;
  DDL::Input EOL_2494_20_ra1o;
  
// Parameters for L_21_EOL_2494
  DDL::Bool EOL_2494_21_ra0u;
  DDL::Input EOL_2494_21_ra2o;
  DDL::Input EOL_2494_21_ra1o;
  DDL::Input EOL_2494_21_ra3o;
  
// Parameters for L_22_EOL_2494
  DDL::Input EOL_2494_22_ra2o;
  DDL::Input EOL_2494_22_ra0o;
  DDL::Input EOL_2494_22_ra1o;
  
// Parameters for L_23_EOL_2494
  DDL::Input EOL_2494_23_ra0o;
  EOL_2494_23_ra0o = a1;
  goto EOL_2494_23;
  // NormalBlock
  EOL_2494_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = EOL_2494_1_ra0o;
    return true;
  }
  // NormalBlock
  EOL_2494_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:54--18:56",
               EOL_2494_2_ra0o, r0);
    EOL_2494_2_ra0o.free();
    r0.free();
    EOL_2494_1_ra0o = EOL_2494_2_ra1o;
    goto EOL_2494_1;
  }
  // NormalBlock
  EOL_2494_4: {
    DDL::Input r0 = EOL_2494_4_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  EOL_2494_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:54--18:56",
               EOL_2494_5_ra0o, r0);
    EOL_2494_5_ra0o.free();
    r0.free();
    EOL_2494_1_ra0o = EOL_2494_5_ra1o;
    goto EOL_2494_1;
  }
  // ReturnBlock RetPure
  EOL_2494_6: {
    if (EOL_2494_6_ra0u.getValue()) {
      EOL_2494_6_ra1o.free();
      EOL_2494_6_ra2o.free();
      EOL_2494_4_ra0o = EOL_2494_6_ra3o;
      goto EOL_2494_4;
    } else {
      EOL_2494_6_ra3o.free();
      EOL_2494_5_ra0o = EOL_2494_6_ra2o;
      EOL_2494_5_ra1o = EOL_2494_6_ra1o;
      goto EOL_2494_5;
    }
  }
  // NormalBlock
  EOL_2494_7: {
    DDL::UInt<8> r0 = DDL::UInt<8>(EOL_2494_7_ra0o.iHead());
    EOL_2494_6_ra0u = parser_z24zlf(r0);
    EOL_2494_6_ra2o = EOL_2494_7_ra2o;
    EOL_2494_6_ra1o = EOL_2494_7_ra1o;
    EOL_2494_6_ra3o = EOL_2494_7_ra0o;
    goto EOL_2494_6;
  }
  // NormalBlock
  EOL_2494_9: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:39--18:41",
               EOL_2494_9_ra0o, r0);
    EOL_2494_9_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EOL_2494_11: {
    DDL::Input r0 = EOL_2494_11_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Bool r1 = r0.length() == 0;
    r0.copy();
    r0.copy();
    r0.copy();
    if (r1.getValue()) {
      r0.free();
      r0.free();
      EOL_2494_2_ra0o = r0;
      EOL_2494_2_ra1o = r0;
      goto EOL_2494_2;
    } else {
      r0.free();
      EOL_2494_7_ra2o = r0;
      EOL_2494_7_ra0o = r0;
      EOL_2494_7_ra1o = r0;
      goto EOL_2494_7;
    }
  }
  // NormalBlock
  EOL_2494_12: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:39--18:41",
               EOL_2494_12_ra0o, r0);
    EOL_2494_12_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock RetPure
  EOL_2494_13: {
    if (EOL_2494_13_ra0u.getValue()) {
      EOL_2494_13_ra1o.free();
      EOL_2494_11_ra0o = EOL_2494_13_ra2o;
      goto EOL_2494_11;
    } else {
      EOL_2494_13_ra2o.free();
      EOL_2494_12_ra0o = EOL_2494_13_ra1o;
      goto EOL_2494_12;
    }
  }
  // NormalBlock
  EOL_2494_14: {
    DDL::UInt<8> r0 = DDL::UInt<8>(EOL_2494_14_ra0o.iHead());
    EOL_2494_13_ra0u = parser_z24zcr(r0);
    EOL_2494_13_ra1o = EOL_2494_14_ra1o;
    EOL_2494_13_ra2o = EOL_2494_14_ra0o;
    goto EOL_2494_13;
  }
  // NormalBlock
  EOL_2494_16: {
    DDL::Bool r0 = EOL_2494_16_ra0o.length() == 0;
    EOL_2494_16_ra0o.copy();
    if (r0.getValue()) {
      EOL_2494_16_ra0o.free();
      EOL_2494_9_ra0o = EOL_2494_16_ra0o;
      goto EOL_2494_9;
    } else {
      EOL_2494_14_ra1o = EOL_2494_16_ra0o;
      EOL_2494_14_ra0o = EOL_2494_16_ra0o;
      goto EOL_2494_14;
    }
  }
  // NormalBlock
  EOL_2494_17: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:30--18:32",
               EOL_2494_17_ra0o, r0);
    EOL_2494_17_ra0o.free();
    r0.free();
    EOL_2494_16_ra0o = EOL_2494_17_ra1o;
    goto EOL_2494_16;
  }
  // NormalBlock
  EOL_2494_19: {
    DDL::Input r0 = EOL_2494_19_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  EOL_2494_20: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:18:30--18:32",
               EOL_2494_20_ra0o, r0);
    EOL_2494_20_ra0o.free();
    r0.free();
    EOL_2494_16_ra0o = EOL_2494_20_ra1o;
    goto EOL_2494_16;
  }
  // ReturnBlock RetPure
  EOL_2494_21: {
    if (EOL_2494_21_ra0u.getValue()) {
      EOL_2494_21_ra1o.free();
      EOL_2494_21_ra2o.free();
      EOL_2494_19_ra0o = EOL_2494_21_ra3o;
      goto EOL_2494_19;
    } else {
      EOL_2494_21_ra3o.free();
      EOL_2494_20_ra0o = EOL_2494_21_ra2o;
      EOL_2494_20_ra1o = EOL_2494_21_ra1o;
      goto EOL_2494_20;
    }
  }
  // NormalBlock
  EOL_2494_22: {
    DDL::UInt<8> r0 = DDL::UInt<8>(EOL_2494_22_ra0o.iHead());
    EOL_2494_21_ra0u = parser_z24zlf(r0);
    EOL_2494_21_ra2o = EOL_2494_22_ra2o;
    EOL_2494_21_ra1o = EOL_2494_22_ra1o;
    EOL_2494_21_ra3o = EOL_2494_22_ra0o;
    goto EOL_2494_21;
  }
  // NormalBlock
  EOL_2494_23: {
    DDL::Bool r0 = EOL_2494_23_ra0o.length() == 0;
    EOL_2494_23_ra0o.copy();
    EOL_2494_23_ra0o.copy();
    EOL_2494_23_ra0o.copy();
    if (r0.getValue()) {
      EOL_2494_23_ra0o.free();
      EOL_2494_23_ra0o.free();
      EOL_2494_17_ra0o = EOL_2494_23_ra0o;
      EOL_2494_17_ra1o = EOL_2494_23_ra0o;
      goto EOL_2494_17;
    } else {
      EOL_2494_23_ra0o.free();
      EOL_2494_22_ra2o = EOL_2494_23_ra0o;
      EOL_2494_22_ra0o = EOL_2494_23_ra0o;
      EOL_2494_22_ra1o = EOL_2494_23_ra0o;
      goto EOL_2494_22;
    }
  }
}
bool parser_Many_2647(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many2647
  DDL::Input Many2647_0_ra0o;
  
// Parameters for L_1_Many2647
  DDL::Input Many2647_1_ra0o;
  
// Parameters for L_2_Many2647
  DDL::Bool Many2647_2_ra0u;
  DDL::Input Many2647_2_ra1o;
  
// Parameters for L_5_Many2647
  DDL::Input Many2647_5_ra0o;
  
// Parameters for L_7_Many2647
  DDL::Input Many2647_7_ra0o;
  DDL::Input Many2647_7_ra1o;
  
// Parameters for L_10_Many2647
  DDL::Input Many2647_10_ra0o;
  
// Parameters for L_11_Many2647
  DDL::Input Many2647_11_ra0o;
  DDL::Input Many2647_11_ra1o;
  
// Parameters for L_12_Many2647
  DDL::Input Many2647_12_ra2o;
  DDL::Bool Many2647_12_ra0u;
  DDL::Input Many2647_12_ra1o;
  DDL::Input Many2647_12_ra3o;
  
// Parameters for L_13_Many2647
  DDL::Input Many2647_13_ra2o;
  DDL::Input Many2647_13_ra0o;
  DDL::Input Many2647_13_ra1o;
  
// Parameters for L_14_Many2647
  DDL::Bool Many2647_14_ra0u;
  DDL::Input Many2647_14_ra3o;
  DDL::Input Many2647_14_ra1o;
  DDL::Input Many2647_14_ra2o;
  
// Parameters for L_15_Many2647
  DDL::Input Many2647_15_ra3o;
  DDL::UInt<8> Many2647_15_ra0u;
  DDL::Input Many2647_15_ra1o;
  DDL::Input Many2647_15_ra2o;
  
// Parameters for L_16_Many2647
  DDL::Bool Many2647_16_ra0u;
  DDL::Input Many2647_16_ra4o;
  DDL::UInt<8> Many2647_16_ra1u;
  DDL::Input Many2647_16_ra2o;
  DDL::Input Many2647_16_ra3o;
  
// Parameters for L_17_Many2647
  DDL::Input Many2647_17_ra2o;
  DDL::Input Many2647_17_ra0o;
  DDL::Input Many2647_17_ra1o;
  
// Parameters for L_18_Many2647
  DDL::Input Many2647_18_ra0o;
  Many2647_18_ra0o = a1;
  goto Many2647_18;
  // NormalBlock
  Many2647_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:36:5--36:25:Many_2647",
                true);
    Many2647_18_ra0o = Many2647_0_ra0o;
    goto Many2647_18;
  }
  // NormalBlock
  Many2647_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many2647_1_ra0o;
    return true;
  }
  // NormalBlock
  Many2647_2: {
    if (Many2647_2_ra0u.getValue()) {
      Many2647_0_ra0o = Many2647_2_ra1o;
      goto Many2647_0;
    } else {
      Many2647_1_ra0o = Many2647_2_ra1o;
      goto Many2647_1;
    }
  }
  // NormalBlock
  Many2647_5: {
    Many2647_2_ra0u = DDL::Bool(false);
    Many2647_2_ra1o = Many2647_5_ra0o;
    goto Many2647_2;
  }
  // NormalBlock
  Many2647_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:36:10--36:25",
               Many2647_7_ra0o, r0);
    Many2647_7_ra0o.free();
    r0.free();
    Many2647_5_ra0o = Many2647_7_ra1o;
    goto Many2647_5;
  }
  // NormalBlock
  Many2647_10: {
    DDL::Input r0 = Many2647_10_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    Many2647_2_ra0u = DDL::Bool(true);
    Many2647_2_ra1o = r0;
    goto Many2647_2;
  }
  // NormalBlock
  Many2647_11: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:36:10--36:25",
               Many2647_11_ra0o, r0);
    Many2647_11_ra0o.free();
    r0.free();
    Many2647_5_ra0o = Many2647_11_ra1o;
    goto Many2647_5;
  }
  // NormalBlock
  Many2647_12: {
    DDL::Bool r0 = !Many2647_12_ra0u;
    if (r0.getValue()) {
      Many2647_12_ra1o.free();
      Many2647_12_ra2o.free();
      Many2647_10_ra0o = Many2647_12_ra3o;
      goto Many2647_10;
    } else {
      Many2647_12_ra3o.free();
      Many2647_11_ra0o = Many2647_12_ra2o;
      Many2647_11_ra1o = Many2647_12_ra1o;
      goto Many2647_11;
    }
  }
  // NormalBlock
  Many2647_13: {
    Many2647_12_ra2o = Many2647_13_ra2o;
    Many2647_12_ra0u = DDL::Bool(true);
    Many2647_12_ra1o = Many2647_13_ra0o;
    Many2647_12_ra3o = Many2647_13_ra1o;
    goto Many2647_12;
  }
  // ReturnBlock RetPure
  Many2647_14: {
    Many2647_12_ra2o = Many2647_14_ra3o;
    Many2647_12_ra0u = Many2647_14_ra0u;
    Many2647_12_ra1o = Many2647_14_ra1o;
    Many2647_12_ra3o = Many2647_14_ra2o;
    goto Many2647_12;
  }
  // NormalBlock
  Many2647_15: {
    Many2647_14_ra0u = parser_z24zcr(Many2647_15_ra0u);
    Many2647_14_ra3o = Many2647_15_ra3o;
    Many2647_14_ra1o = Many2647_15_ra1o;
    Many2647_14_ra2o = Many2647_15_ra2o;
    goto Many2647_14;
  }
  // ReturnBlock RetPure
  Many2647_16: {
    if (Many2647_16_ra0u.getValue()) {
      Many2647_13_ra2o = Many2647_16_ra4o;
      Many2647_13_ra0o = Many2647_16_ra2o;
      Many2647_13_ra1o = Many2647_16_ra3o;
      goto Many2647_13;
    } else {
      Many2647_15_ra3o = Many2647_16_ra4o;
      Many2647_15_ra0u = Many2647_16_ra1u;
      Many2647_15_ra1o = Many2647_16_ra2o;
      Many2647_15_ra2o = Many2647_16_ra3o;
      goto Many2647_15;
    }
  }
  // NormalBlock
  Many2647_17: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Many2647_17_ra0o.iHead());
    Many2647_16_ra0u = parser_z24zlf(r0);
    Many2647_16_ra4o = Many2647_17_ra2o;
    Many2647_16_ra1u = r0;
    Many2647_16_ra2o = Many2647_17_ra1o;
    Many2647_16_ra3o = Many2647_17_ra0o;
    goto Many2647_16;
  }
  // NormalBlock
  Many2647_18: {
    DDL::Bool r0 = Many2647_18_ra0o.length() == 0;
    Many2647_18_ra0o.copy();
    Many2647_18_ra0o.copy();
    Many2647_18_ra0o.copy();
    if (r0.getValue()) {
      Many2647_18_ra0o.free();
      Many2647_18_ra0o.free();
      Many2647_7_ra0o = Many2647_18_ra0o;
      Many2647_7_ra1o = Many2647_18_ra0o;
      goto Many2647_7;
    } else {
      Many2647_18_ra0o.free();
      Many2647_17_ra2o = Many2647_18_ra0o;
      Many2647_17_ra0o = Many2647_18_ra0o;
      Many2647_17_ra1o = Many2647_18_ra0o;
      goto Many2647_17;
    }
  }
}
bool parser_SkipTillEOL_(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_SkipTillEOL_2495
  DDL::Unit SkipTillEOL_2495_1_ra0u;
  DDL::Input SkipTillEOL_2495_1_ra1o;
  
// Parameters for L_2_SkipTillEOL_2495
  DDL::Input SkipTillEOL_2495_2_ra0o;
  SkipTillEOL_2495_2_ra0o = a1;
  goto SkipTillEOL_2495_2;
  // ReturnBlock (RetNo NoCapture)
  SkipTillEOL_2495_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  SkipTillEOL_2495_1: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:37:5--37:7:EOL_",
                true);
    return parser_EOL_(p, _result, _result_input,
                       SkipTillEOL_2495_1_ra1o);
  }
  // NormalBlock
  SkipTillEOL_2495_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:36:5--36:25:Many_2647",
                false);
    if (parser_Many_2647(p, &SkipTillEOL_2495_1_ra0u,
                         &SkipTillEOL_2495_1_ra1o, SkipTillEOL_2495_2_ra0o)) {
      goto SkipTillEOL_2495_1;
    } else {
      goto SkipTillEOL_2495_0;
    }
  }
}
bool parser_GenComment_(DDL::ParserStateUser<ReferenceTable> &p,
                        DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1,
                        DDL::Array<DDL::UInt<8>> a2) {
  
// Parameters for L_1_GenComment_2496
  DDL::Array<DDL::UInt<8>> GenComment_2496_1_ra0o;
  DDL::Input GenComment_2496_1_ra1o;
  
// Parameters for L_2_GenComment_2496
  DDL::Input GenComment_2496_2_ra1o;
  DDL::Array<DDL::UInt<8>> GenComment_2496_2_ra0o;
  
// Parameters for L_4_GenComment_2496
  DDL::Input GenComment_2496_4_ra0o;
  
// Parameters for L_6_GenComment_2496
  DDL::Input GenComment_2496_6_ra0o;
  DDL::Array<DDL::UInt<8>> GenComment_2496_6_ra1o;
  
// Parameters for L_7_GenComment_2496
  DDL::Input GenComment_2496_7_ra0o;
  
// Parameters for L_8_GenComment_2496
  DDL::Input GenComment_2496_8_ra1o;
  DDL::Input GenComment_2496_8_ra0o;
  DDL::Array<DDL::UInt<8>> GenComment_2496_8_ra2o;
  
// Parameters for L_9_GenComment_2496
  DDL::Input GenComment_2496_9_ra0o;
  DDL::Array<DDL::UInt<8>> GenComment_2496_9_ra1o;
  GenComment_2496_9_ra0o = a1;
  GenComment_2496_9_ra1o = a2;
  goto GenComment_2496_9;
  // NormalBlock
  GenComment_2496_1: {
    DDL::UInt<64> r0 = DDL::UInt<64>{GenComment_2496_1_ra0o.size().rep()};
    GenComment_2496_1_ra0o.free();
    DDL::Input r1 = GenComment_2496_1_ra1o.iDrop(DDL::Size::from(r0.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:24:5--24:15:SkipTillEOL_",
                true);
    return parser_SkipTillEOL_(p, _result, _result_input, r1);
  }
  // NormalBlock
  GenComment_2496_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r1 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   GenComment_2496_2_ra0o};
    DDL::Array<DDL::UInt<8>> r2 = DDL::Array<DDL::UInt<8>>(r1);
    r1.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:23:5--23:15",
               GenComment_2496_2_ra1o, r2);
    GenComment_2496_2_ra1o.free();
    r2.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  GenComment_2496_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:22:5--22:10",
               GenComment_2496_4_ra0o, r0);
    GenComment_2496_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  GenComment_2496_6: {
    DDL::Input r0 = GenComment_2496_6_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Bool r1 = r0.hasPrefix(GenComment_2496_6_ra1o);
    if (r1.getValue()) {
      GenComment_2496_1_ra0o = GenComment_2496_6_ra1o;
      GenComment_2496_1_ra1o = r0;
      goto GenComment_2496_1;
    } else {
      GenComment_2496_2_ra1o = r0;
      GenComment_2496_2_ra0o = GenComment_2496_6_ra1o;
      goto GenComment_2496_2;
    }
  }
  // NormalBlock
  GenComment_2496_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:22:5--22:10",
               GenComment_2496_7_ra0o, r0);
    GenComment_2496_7_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  GenComment_2496_8: {
    DDL::UInt<8> r0 = DDL::UInt<8>(GenComment_2496_8_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(37)} == r0};
    if (r1.getValue()) {
      GenComment_2496_8_ra1o.free();
      GenComment_2496_6_ra0o = GenComment_2496_8_ra0o;
      GenComment_2496_6_ra1o = GenComment_2496_8_ra2o;
      goto GenComment_2496_6;
    } else {
      GenComment_2496_8_ra0o.free();
      GenComment_2496_8_ra2o.free();
      GenComment_2496_7_ra0o = GenComment_2496_8_ra1o;
      goto GenComment_2496_7;
    }
  }
  // NormalBlock
  GenComment_2496_9: {
    DDL::Bool r0 = GenComment_2496_9_ra0o.length() == 0;
    GenComment_2496_9_ra0o.copy();
    if (r0.getValue()) {
      GenComment_2496_9_ra1o.free();
      GenComment_2496_9_ra0o.free();
      GenComment_2496_4_ra0o = GenComment_2496_9_ra0o;
      goto GenComment_2496_4;
    } else {
      GenComment_2496_8_ra1o = GenComment_2496_9_ra0o;
      GenComment_2496_8_ra0o = GenComment_2496_9_ra0o;
      GenComment_2496_8_ra2o = GenComment_2496_9_ra1o;
      goto GenComment_2496_8;
    }
  }
}
bool parser_Comment_(DDL::ParserStateUser<ReferenceTable> &p,
                     DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Comment_2497
  DDL::Input Comment_2497_0_ra0o;
  Comment_2497_0_ra0o = a1;
  goto Comment_2497_0;
  // NormalBlock
  Comment_2497_0: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:26:29--26:41:GenComment_",
                true);
    return parser_GenComment_(p, _result, _result_input,
                              Comment_2497_0_ra0o, r0);
  }
}
bool parser_JustWhite_(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_JustWhite_2498
  DDL::Input JustWhite_2498_1_ra0o;
  
// Parameters for L_2_JustWhite_2498
  DDL::Input JustWhite_2498_2_ra0o;
  DDL::Input JustWhite_2498_2_ra1o;
  
// Parameters for L_4_JustWhite_2498
  DDL::Input JustWhite_2498_4_ra0o;
  
// Parameters for L_5_JustWhite_2498
  DDL::Input JustWhite_2498_5_ra0o;
  DDL::Input JustWhite_2498_5_ra1o;
  
// Parameters for L_6_JustWhite_2498
  DDL::Bool JustWhite_2498_6_ra0u;
  DDL::Input JustWhite_2498_6_ra2o;
  DDL::Input JustWhite_2498_6_ra1o;
  DDL::Input JustWhite_2498_6_ra3o;
  
// Parameters for L_7_JustWhite_2498
  DDL::Input JustWhite_2498_7_ra2o;
  DDL::Input JustWhite_2498_7_ra0o;
  DDL::Input JustWhite_2498_7_ra1o;
  
// Parameters for L_8_JustWhite_2498
  DDL::Input JustWhite_2498_8_ra0o;
  JustWhite_2498_8_ra0o = a1;
  goto JustWhite_2498_8;
  // NormalBlock
  JustWhite_2498_1: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:27:43--27:45:EOL_",
                true);
    return parser_EOL_(p, _result, _result_input,
                       JustWhite_2498_1_ra0o);
  }
  // NormalBlock
  JustWhite_2498_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:27:30--27:38",
               JustWhite_2498_2_ra0o, r0);
    JustWhite_2498_2_ra0o.free();
    r0.free();
    JustWhite_2498_1_ra0o = JustWhite_2498_2_ra1o;
    goto JustWhite_2498_1;
  }
  // NormalBlock
  JustWhite_2498_4: {
    DDL::Input r0 = JustWhite_2498_4_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  JustWhite_2498_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:27:30--27:38",
               JustWhite_2498_5_ra0o, r0);
    JustWhite_2498_5_ra0o.free();
    r0.free();
    JustWhite_2498_1_ra0o = JustWhite_2498_5_ra1o;
    goto JustWhite_2498_1;
  }
  // ReturnBlock RetPure
  JustWhite_2498_6: {
    if (JustWhite_2498_6_ra0u.getValue()) {
      JustWhite_2498_6_ra1o.free();
      JustWhite_2498_6_ra2o.free();
      JustWhite_2498_4_ra0o = JustWhite_2498_6_ra3o;
      goto JustWhite_2498_4;
    } else {
      JustWhite_2498_6_ra3o.free();
      JustWhite_2498_5_ra0o = JustWhite_2498_6_ra2o;
      JustWhite_2498_5_ra1o = JustWhite_2498_6_ra1o;
      goto JustWhite_2498_5;
    }
  }
  // NormalBlock
  JustWhite_2498_7: {
    DDL::UInt<8> r0 = DDL::UInt<8>(JustWhite_2498_7_ra0o.iHead());
    JustWhite_2498_6_ra0u = parser_z24zsimpleWS(r0);
    JustWhite_2498_6_ra2o = JustWhite_2498_7_ra2o;
    JustWhite_2498_6_ra1o = JustWhite_2498_7_ra1o;
    JustWhite_2498_6_ra3o = JustWhite_2498_7_ra0o;
    goto JustWhite_2498_6;
  }
  // NormalBlock
  JustWhite_2498_8: {
    DDL::Bool r0 = JustWhite_2498_8_ra0o.length() == 0;
    JustWhite_2498_8_ra0o.copy();
    JustWhite_2498_8_ra0o.copy();
    JustWhite_2498_8_ra0o.copy();
    if (r0.getValue()) {
      JustWhite_2498_8_ra0o.free();
      JustWhite_2498_8_ra0o.free();
      JustWhite_2498_2_ra0o = JustWhite_2498_8_ra0o;
      JustWhite_2498_2_ra1o = JustWhite_2498_8_ra0o;
      goto JustWhite_2498_2;
    } else {
      JustWhite_2498_8_ra0o.free();
      JustWhite_2498_7_ra2o = JustWhite_2498_8_ra0o;
      JustWhite_2498_7_ra0o = JustWhite_2498_8_ra0o;
      JustWhite_2498_7_ra1o = JustWhite_2498_8_ra0o;
      goto JustWhite_2498_7;
    }
  }
}
bool parser_AnyWS_(DDL::ParserStateUser<ReferenceTable> &p,
                   DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_AnyWS_2499
  DDL::Input AnyWS_2499_0_ra0o;
  
// Parameters for L_1_AnyWS_2499
  DDL::Unit AnyWS_2499_1_ra0u;
  DDL::Input AnyWS_2499_1_ra1o;
  
// Parameters for L_2_AnyWS_2499
  DDL::Input AnyWS_2499_2_ra0o;
  AnyWS_2499_2_ra0o = a1;
  goto AnyWS_2499_2;
  // ReturnBlock (RetNo NoCapture)
  AnyWS_2499_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:28:42--28:48:Comment_",
                true);
    return parser_Comment_(p, _result, _result_input,
                           AnyWS_2499_0_ra0o);
  }
  // ReturnBlock (RetYes NoCapture)
  AnyWS_2499_1: {
    p.popDebug();
    *_result = AnyWS_2499_1_ra0u;
    *_result_input = AnyWS_2499_1_ra1o;
    return true;
  }
  // NormalBlock
  AnyWS_2499_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:28:29--28:37:JustWhite_",
                false);
    AnyWS_2499_2_ra0o.copy();
    if (parser_JustWhite_(p, &AnyWS_2499_1_ra0u, &AnyWS_2499_1_ra1o,
                          AnyWS_2499_2_ra0o)) {
      AnyWS_2499_2_ra0o.free();
      goto AnyWS_2499_1;
    } else {
      AnyWS_2499_0_ra0o = AnyWS_2499_2_ra0o;
      goto AnyWS_2499_0;
    }
  }
}
bool parser_Many_2652(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many2652
  DDL::Input Many2652_0_ra0o;
  
// Parameters for L_1_Many2652
  DDL::Input Many2652_1_ra0o;
  
// Parameters for L_2_Many2652
  DDL::Bool Many2652_2_ra0u;
  DDL::Input Many2652_2_ra1o;
  
// Parameters for L_4_Many2652
  DDL::Input Many2652_4_ra0o;
  
// Parameters for L_5_Many2652
  DDL::Unit Many2652_5_ra0u;
  DDL::Input Many2652_5_ra1o;
  
// Parameters for L_6_Many2652
  DDL::Input Many2652_6_ra0o;
  Many2652_6_ra0o = a1;
  goto Many2652_6;
  // NormalBlock
  Many2652_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2652",
                true);
    Many2652_6_ra0o = Many2652_0_ra0o;
    goto Many2652_6;
  }
  // NormalBlock
  Many2652_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many2652_1_ra0o;
    return true;
  }
  // NormalBlock
  Many2652_2: {
    if (Many2652_2_ra0u.getValue()) {
      Many2652_0_ra0o = Many2652_2_ra1o;
      goto Many2652_0;
    } else {
      Many2652_1_ra0o = Many2652_2_ra1o;
      goto Many2652_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2652_4: {
    Many2652_2_ra0u = DDL::Bool(false);
    Many2652_2_ra1o = Many2652_4_ra0o;
    goto Many2652_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2652_5: {
    Many2652_2_ra0u = DDL::Bool(true);
    Many2652_2_ra1o = Many2652_5_ra1o;
    goto Many2652_2;
  }
  // NormalBlock
  Many2652_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:48--228:52:AnyWS_",
                false);
    Many2652_6_ra0o.copy();
    if (parser_AnyWS_(p, &Many2652_5_ra0u, &Many2652_5_ra1o,
                      Many2652_6_ra0o)) {
      Many2652_6_ra0o.free();
      goto Many2652_5;
    } else {
      Many2652_4_ra0o = Many2652_6_ra0o;
      goto Many2652_4;
    }
  }
}
bool parser_Token_2500(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1,
                       DDL::Array<DDL::UInt<8>> a2) {
  
// Parameters for L_1_Token2500
  DDL::Unit Token2500_1_ra0u;
  DDL::Input Token2500_1_ra1o;
  DDL::Unit Token2500_1_ra2u;
  
// Parameters for L_3_Token2500
  DDL::Array<DDL::UInt<8>> Token2500_3_ra0o;
  DDL::Input Token2500_3_ra1o;
  
// Parameters for L_4_Token2500
  DDL::Input Token2500_4_ra1o;
  DDL::Array<DDL::UInt<8>> Token2500_4_ra0o;
  
// Parameters for L_5_Token2500
  DDL::Input Token2500_5_ra0o;
  DDL::Array<DDL::UInt<8>> Token2500_5_ra1o;
  Token2500_5_ra0o = a1;
  Token2500_5_ra1o = a2;
  goto Token2500_5;
  // ReturnBlock (RetNo NoCapture)
  Token2500_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2500_1: {
    p.popDebug();
    *_result = Token2500_1_ra2u;
    *_result_input = Token2500_1_ra1o;
    return true;
  }
  // NormalBlock
  Token2500_3: {
    DDL::UInt<64> r0 = DDL::UInt<64>{Token2500_3_ra0o.size().rep()};
    Token2500_3_ra0o.free();
    DDL::Input r1 = Token2500_3_ra1o.iDrop(DDL::Size::from(r0.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2652",
                false);
    if (parser_Many_2652(p, &Token2500_1_ra0u, &Token2500_1_ra1o,
                         r1)) {
      Token2500_1_ra2u = DDL::Unit();
      goto Token2500_1;
    } else {
      goto Token2500_0;
    }
  }
  // NormalBlock
  Token2500_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r1 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   Token2500_4_ra0o};
    DDL::Array<DDL::UInt<8>> r2 = DDL::Array<DDL::UInt<8>>(r1);
    r1.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:40--228:40",
               Token2500_4_ra1o, r2);
    Token2500_4_ra1o.free();
    r2.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Token2500_5: {
    DDL::Bool r0 = Token2500_5_ra0o.hasPrefix(Token2500_5_ra1o);
    if (r0.getValue()) {
      Token2500_3_ra0o = Token2500_5_ra1o;
      Token2500_3_ra1o = Token2500_5_ra0o;
      goto Token2500_3;
    } else {
      Token2500_4_ra1o = Token2500_5_ra0o;
      Token2500_4_ra0o = Token2500_5_ra1o;
      goto Token2500_4;
    }
  }
}
bool parser_KW(DDL::ParserStateUser<ReferenceTable> &p,
               DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1,
               DDL::Array<DDL::UInt<8>> a2) {
  
// Parameters for L_0_KW2501
  DDL::Input KW2501_0_ra0o;
  DDL::Array<DDL::UInt<8>> KW2501_0_ra1o;
  KW2501_0_ra0o = a1;
  KW2501_0_ra1o = a2;
  goto KW2501_0;
  // NormalBlock
  KW2501_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:229:29--229:43:Token_2500",
                true);
    return parser_Token_2500(p, _result, _result_input, KW2501_0_ra0o,
                             KW2501_0_ra1o);
  }
}
bool parser_When_2502(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Bool* _result, DDL::Input* _result_input, DDL::Input a1,
                      DDL::Bool a2) {
  
// Parameters for L_1_When2502
  DDL::Unit When2502_1_ra0u;
  DDL::Input When2502_1_ra1o;
  DDL::Bool When2502_1_ra2u;
  
// Parameters for L_2_When2502
  DDL::Input When2502_2_ra0o;
  DDL::Bool When2502_2_ra1u;
  When2502_2_ra0o = a1;
  When2502_2_ra1u = a2;
  goto When2502_2;
  // ReturnBlock (RetNo NoCapture)
  When2502_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  When2502_1: {
    p.popDebug();
    *_result = When2502_1_ra2u;
    *_result_input = When2502_1_ra1o;
    return true;
  }
  // NormalBlock
  When2502_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(101UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27:KW",
                false);
    if (parser_KW(p, &When2502_1_ra0u, &When2502_1_ra1o,
                  When2502_2_ra0o, r0)) {
      When2502_1_ra2u = When2502_2_ra1u;
      goto When2502_1;
    } else {
      goto When2502_0;
    }
  }
}
bool parser_When_2503(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Bool* _result, DDL::Input* _result_input, DDL::Input a1,
                      DDL::Bool a2) {
  
// Parameters for L_1_When2503
  DDL::Unit When2503_1_ra0u;
  DDL::Input When2503_1_ra1o;
  DDL::Bool When2503_1_ra2u;
  
// Parameters for L_2_When2503
  DDL::Input When2503_2_ra0o;
  DDL::Bool When2503_2_ra1u;
  When2503_2_ra0o = a1;
  When2503_2_ra1u = a2;
  goto When2503_2;
  // ReturnBlock (RetNo NoCapture)
  When2503_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  When2503_1: {
    p.popDebug();
    *_result = When2503_1_ra2u;
    *_result_input = When2503_1_ra1o;
    return true;
  }
  // NormalBlock
  When2503_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(101UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27:KW",
                false);
    if (parser_KW(p, &When2503_1_ra0u, &When2503_1_ra1o,
                  When2503_2_ra0o, r0)) {
      When2503_1_ra2u = When2503_2_ra1u;
      goto When2503_1;
    } else {
      goto When2503_0;
    }
  }
}
bool parser_Bool(DDL::ParserStateUser<ReferenceTable> &p,
                 DDL::Bool* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Bool2504
  DDL::Input Bool2504_0_ra0o;
  
// Parameters for L_1_Bool2504
  DDL::Bool Bool2504_1_ra0u;
  DDL::Input Bool2504_1_ra1o;
  
// Parameters for L_2_Bool2504
  DDL::Input Bool2504_2_ra0o;
  Bool2504_2_ra0o = a1;
  goto Bool2504_2;
  // ReturnBlock (RetNo NoCapture)
  Bool2504_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:52:6--52:28:When_2503",
                true);
    return parser_When_2503(p, _result, _result_input, Bool2504_0_ra0o,
                            DDL::Bool(false));
  }
  // ReturnBlock (RetYes NoCapture)
  Bool2504_1: {
    p.popDebug();
    *_result = Bool2504_1_ra0u;
    *_result_input = Bool2504_1_ra1o;
    return true;
  }
  // NormalBlock
  Bool2504_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:51:6--51:27:When_2502",
                false);
    Bool2504_2_ra0o.copy();
    if (parser_When_2502(p, &Bool2504_1_ra0u, &Bool2504_1_ra1o,
                         Bool2504_2_ra0o, DDL::Bool(true))) {
      Bool2504_2_ra0o.free();
      goto Bool2504_1;
    } else {
      Bool2504_0_ra0o = Bool2504_2_ra0o;
      goto Bool2504_0;
    }
  }
}
bool parser_Sign(DDL::ParserStateUser<ReferenceTable> &p,
                 User::Sign* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Sign2505
  DDL::Unit Sign2505_0_ra0u;
  DDL::Input Sign2505_0_ra1o;
  
// Parameters for L_4_Sign2505
  DDL::Array<DDL::UInt<8>> Sign2505_4_ra0o;
  DDL::Input Sign2505_4_ra1o;
  
// Parameters for L_5_Sign2505
  DDL::Input Sign2505_5_ra0o;
  DDL::Input Sign2505_5_ra1o;
  
// Parameters for L_10_Sign2505
  DDL::Array<DDL::UInt<8>> Sign2505_10_ra0o;
  DDL::Input Sign2505_10_ra1o;
  
// Parameters for L_11_Sign2505
  DDL::Input Sign2505_11_ra0o;
  DDL::Input Sign2505_11_ra1o;
  
// Parameters for L_12_Sign2505
  DDL::Input Sign2505_12_ra0o;
  Sign2505_12_ra0o = a1;
  goto Sign2505_12;
  // NormalBlock
  Sign2505_0: {
    User::Sign r0;
    r0.init_pos();
    p.popDebug();
    *_result = r0;
    *_result_input = Sign2505_0_ra1o;
    return true;
  }
  // NormalBlock
  Sign2505_4: {
    DDL::UInt<64> r0 = DDL::UInt<64>{Sign2505_4_ra0o.size().rep()};
    Sign2505_4_ra0o.free();
    DDL::Input r1 = Sign2505_4_ra1o.iDrop(DDL::Size::from(r0.rep()));
    Sign2505_0_ra0u = DDL::Unit();
    Sign2505_0_ra1o = r1;
    goto Sign2505_0;
  }
  // NormalBlock
  Sign2505_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(43UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:74:22--74:30",
               Sign2505_5_ra0o, r3);
    Sign2505_5_ra0o.free();
    r3.free();
    Sign2505_0_ra0u = DDL::Unit();
    Sign2505_0_ra1o = Sign2505_5_ra1o;
    goto Sign2505_0;
  }
  // NormalBlock
  Sign2505_10: {
    DDL::UInt<64> r0 = DDL::UInt<64>{Sign2505_10_ra0o.size().rep()};
    Sign2505_10_ra0o.free();
    DDL::Input r1 = Sign2505_10_ra1o.iDrop(DDL::Size::from(r0.rep()));
    User::Sign r2;
    r2.init_neg();
    p.popDebug();
    *_result = r2;
    *_result_input = r1;
    return true;
  }
  // NormalBlock
  Sign2505_11: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(45UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:73:12--73:20",
               Sign2505_11_ra0o, r3);
    Sign2505_11_ra0o.free();
    r3.free();
    DDL::Array<DDL::UInt<8>> r4 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(43UL)};
    DDL::Bool r5 = Sign2505_11_ra1o.hasPrefix(r4);
    Sign2505_11_ra1o.copy();
    if (r5.getValue()) {
      Sign2505_11_ra1o.free();
      Sign2505_4_ra0o = r4;
      Sign2505_4_ra1o = Sign2505_11_ra1o;
      goto Sign2505_4;
    } else {
      r4.free();
      Sign2505_5_ra0o = Sign2505_11_ra1o;
      Sign2505_5_ra1o = Sign2505_11_ra1o;
      goto Sign2505_5;
    }
  }
  // NormalBlock
  Sign2505_12: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(45UL)};
    DDL::Bool r1 = Sign2505_12_ra0o.hasPrefix(r0);
    Sign2505_12_ra0o.copy();
    if (r1.getValue()) {
      Sign2505_12_ra0o.free();
      Sign2505_10_ra0o = r0;
      Sign2505_10_ra1o = Sign2505_12_ra0o;
      goto Sign2505_10;
    } else {
      r0.free();
      Sign2505_11_ra0o = Sign2505_12_ra0o;
      Sign2505_11_ra1o = Sign2505_12_ra0o;
      goto Sign2505_11;
    }
  }
}
bool parser_Digit(DDL::ParserStateUser<ReferenceTable> &p,
                  DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_Digit2506
  DDL::Input Digit2506_1_ra0o;
  
// Parameters for L_3_Digit2506
  DDL::Input Digit2506_3_ra0o;
  DDL::UInt<8> Digit2506_3_ra1u;
  
// Parameters for L_4_Digit2506
  DDL::Input Digit2506_4_ra0o;
  
// Parameters for L_5_Digit2506
  DDL::Input Digit2506_5_ra1o;
  DDL::Bool Digit2506_5_ra0u;
  DDL::Input Digit2506_5_ra2o;
  DDL::UInt<8> Digit2506_5_ra3u;
  
// Parameters for L_6_Digit2506
  DDL::Input Digit2506_6_ra2o;
  DDL::UInt<8> Digit2506_6_ra0u;
  DDL::Input Digit2506_6_ra1o;
  
// Parameters for L_7_Digit2506
  DDL::Input Digit2506_7_ra2o;
  DDL::Input Digit2506_7_ra0o;
  DDL::UInt<8> Digit2506_7_ra1u;
  
// Parameters for L_8_Digit2506
  DDL::Input Digit2506_8_ra1o;
  DDL::Input Digit2506_8_ra0o;
  
// Parameters for L_9_Digit2506
  DDL::Input Digit2506_9_ra0o;
  Digit2506_9_ra0o = a1;
  goto Digit2506_9;
  // NormalBlock
  Digit2506_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:99:17--99:29",
               Digit2506_1_ra0o, r0);
    Digit2506_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Digit2506_3: {
    DDL::Input r0 = Digit2506_3_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::UInt<8> r1 = Digit2506_3_ra1u - DDL::UInt<8>{UINT8_C(48)};
    DDL::Integer r2 = DDL::uint_to_integer<8>(r1);
    p.popDebug();
    *_result = r2;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  Digit2506_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:99:17--99:29",
               Digit2506_4_ra0o, r0);
    Digit2506_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Digit2506_5: {
    if (Digit2506_5_ra0u.getValue()) {
      Digit2506_5_ra1o.free();
      Digit2506_3_ra0o = Digit2506_5_ra2o;
      Digit2506_3_ra1u = Digit2506_5_ra3u;
      goto Digit2506_3;
    } else {
      Digit2506_5_ra2o.free();
      Digit2506_4_ra0o = Digit2506_5_ra1o;
      goto Digit2506_4;
    }
  }
  // NormalBlock
  Digit2506_6: {
    DDL::Bool r0 = DDL::Bool{Digit2506_6_ra0u <= DDL::UInt<8>{UINT8_C(57)}};
    Digit2506_5_ra1o = Digit2506_6_ra2o;
    Digit2506_5_ra0u = r0;
    Digit2506_5_ra2o = Digit2506_6_ra1o;
    Digit2506_5_ra3u = Digit2506_6_ra0u;
    goto Digit2506_5;
  }
  // NormalBlock
  Digit2506_7: {
    Digit2506_5_ra1o = Digit2506_7_ra2o;
    Digit2506_5_ra0u = DDL::Bool(false);
    Digit2506_5_ra2o = Digit2506_7_ra0o;
    Digit2506_5_ra3u = Digit2506_7_ra1u;
    goto Digit2506_5;
  }
  // NormalBlock
  Digit2506_8: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Digit2506_8_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(48)} <= r0};
    if (r1.getValue()) {
      Digit2506_6_ra2o = Digit2506_8_ra1o;
      Digit2506_6_ra0u = r0;
      Digit2506_6_ra1o = Digit2506_8_ra0o;
      goto Digit2506_6;
    } else {
      Digit2506_7_ra2o = Digit2506_8_ra1o;
      Digit2506_7_ra0o = Digit2506_8_ra0o;
      Digit2506_7_ra1u = r0;
      goto Digit2506_7;
    }
  }
  // NormalBlock
  Digit2506_9: {
    DDL::Bool r0 = Digit2506_9_ra0o.length() == 0;
    Digit2506_9_ra0o.copy();
    if (r0.getValue()) {
      Digit2506_9_ra0o.free();
      Digit2506_1_ra0o = Digit2506_9_ra0o;
      goto Digit2506_1;
    } else {
      Digit2506_8_ra1o = Digit2506_9_ra0o;
      Digit2506_8_ra0o = Digit2506_9_ra0o;
      goto Digit2506_8;
    }
  }
}
DDL::Integer parser_for_2667(DDL::Integer a1,
                             DDL::Array<DDL::Integer>::Iterator a2, DDL::Integer a3) {
  
// Parameters for L_0_for2667
  DDL::Integer for2667_0_ra0o;
  
// Parameters for L_1_for2667
  DDL::Array<DDL::Integer>::Iterator for2667_1_ra0o;
  DDL::Integer for2667_1_ra1o;
  DDL::Integer for2667_1_ra2o;
  
// Parameters for L_2_for2667
  DDL::Integer for2667_2_ra0o;
  DDL::Array<DDL::Integer>::Iterator for2667_2_ra1o;
  DDL::Integer for2667_2_ra2o;
  for2667_2_ra0o = a1;
  for2667_2_ra1o = a2;
  for2667_2_ra2o = a3;
  goto for2667_2;
  // NormalBlock
  for2667_0: {
    return for2667_0_ra0o;
  }
  // NormalBlock
  for2667_1: {
    DDL::Integer r0 = for2667_1_ra0o.value();
    for2667_1_ra2o.copy();
    DDL::Integer r1 = for2667_1_ra1o * for2667_1_ra2o;
    DDL::Integer r2 = r1 + r0;
    DDL::Array<DDL::Integer>::Iterator r3 = for2667_1_ra0o.next();
    for2667_2_ra0o = r2;
    for2667_2_ra1o = r3;
    for2667_2_ra2o = for2667_1_ra2o;
    goto for2667_2;
  }
  // NormalBlock
  for2667_2: {
    DDL::Bool r0 = for2667_2_ra1o.done();
    if (r0.getValue()) {
      for2667_2_ra1o.free();
      for2667_2_ra2o.free();
      for2667_0_ra0o = for2667_2_ra0o;
      goto for2667_0;
    } else {
      for2667_1_ra0o = for2667_2_ra1o;
      for2667_1_ra1o = for2667_2_ra0o;
      for2667_1_ra2o = for2667_2_ra2o;
      goto for2667_1;
    }
  }
}
DDL::Integer parser_numBase_2507(DDL::Integer a1,
                                 DDL::Array<DDL::Integer> a2) {
  
// Parameters for L_0_numBase2507
  DDL::Integer numBase2507_0_ra0o;
  DDL::Array<DDL::Integer> numBase2507_0_ra1o;
  numBase2507_0_ra0o = a1;
  numBase2507_0_ra1o = a2;
  goto numBase2507_0;
  // NormalBlock
  numBase2507_0: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Array<DDL::Integer>::Iterator r1 = DDL::Array<DDL::Integer>::Iterator(numBase2507_0_ra1o);
    return parser_for_2667(r0, r1, numBase2507_0_ra0o);
  }
}
bool parser_Many_2672(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::Integer>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::UInt<64> a2, DDL::Builder<DDL::Integer> a3) {
  
// Parameters for L_1_Many2672
  DDL::Input Many2672_1_ra0o;
  
// Parameters for L_2_Many2672
  DDL::Integer Many2672_2_ra0o;
  DDL::Input Many2672_2_ra1o;
  DDL::UInt<64> Many2672_2_ra2u;
  DDL::Builder<DDL::Integer> Many2672_2_ra3o;
  
// Parameters for L_3_Many2672
  DDL::Input Many2672_3_ra0o;
  DDL::UInt<64> Many2672_3_ra1u;
  DDL::Builder<DDL::Integer> Many2672_3_ra2o;
  
// Parameters for L_4_Many2672
  DDL::Input Many2672_4_ra1o;
  DDL::Builder<DDL::Integer> Many2672_4_ra0o;
  
// Parameters for L_5_Many2672
  DDL::Input Many2672_5_ra0o;
  DDL::UInt<64> Many2672_5_ra1u;
  DDL::Builder<DDL::Integer> Many2672_5_ra2o;
  Many2672_5_ra0o = a1;
  Many2672_5_ra1u = a2;
  Many2672_5_ra2o = a3;
  goto Many2672_5;
  // ReturnBlock (RetNo NoCapture)
  Many2672_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many2672_1_ra0o, r0);
    Many2672_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2672_2: {
    DDL::UInt<64> r0 = Many2672_2_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<DDL::Integer> r1 = DDL::Builder<DDL::Integer>(Many2672_2_ra3o,
                                                               Many2672_2_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:88:27--88:42:Many_2672",
                true);
    Many2672_5_ra0o = Many2672_2_ra1o;
    Many2672_5_ra1u = r0;
    Many2672_5_ra2o = r1;
    goto Many2672_5;
  }
  // NormalBlock
  Many2672_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:88:38--88:42:Digit",
                false);
    Many2672_3_ra0o.copy();
    if (parser_Digit(p, &Many2672_2_ra0o, &Many2672_2_ra1o,
                     Many2672_3_ra0o)) {
      Many2672_3_ra0o.free();
      Many2672_2_ra2u = Many2672_3_ra1u;
      Many2672_2_ra3o = Many2672_3_ra2o;
      goto Many2672_2;
    } else {
      Many2672_3_ra2o.free();
      Many2672_1_ra0o = Many2672_3_ra0o;
      goto Many2672_1;
    }
  }
  // NormalBlock
  Many2672_4: {
    p.popDebug();
    *_result = Many2672_4_ra0o;
    *_result_input = Many2672_4_ra1o;
    return true;
  }
  // NormalBlock
  Many2672_5: {
    DDL::Bool r0 = DDL::Bool{Many2672_5_ra1u < DDL::UInt<64>{UINT64_C(1)}};
    if (r0.getValue()) {
      Many2672_3_ra0o = Many2672_5_ra0o;
      Many2672_3_ra1u = Many2672_5_ra1u;
      Many2672_3_ra2o = Many2672_5_ra2o;
      goto Many2672_3;
    } else {
      Many2672_4_ra1o = Many2672_5_ra0o;
      Many2672_4_ra0o = Many2672_5_ra2o;
      goto Many2672_4;
    }
  }
}
bool parser_Many_2677(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::Integer>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Builder<DDL::Integer> a2) {
  
// Parameters for L_0_Many2677
  DDL::Input Many2677_0_ra2o;
  DDL::Builder<DDL::Integer> Many2677_0_ra0o;
  DDL::Maybe<DDL::Integer> Many2677_0_ra1o;
  
// Parameters for L_1_Many2677
  DDL::Input Many2677_1_ra1o;
  DDL::Builder<DDL::Integer> Many2677_1_ra0o;
  
// Parameters for L_2_Many2677
  DDL::Maybe<DDL::Integer> Many2677_2_ra0o;
  DDL::Input Many2677_2_ra2o;
  DDL::Builder<DDL::Integer> Many2677_2_ra1o;
  
// Parameters for L_4_Many2677
  DDL::Input Many2677_4_ra0o;
  DDL::Builder<DDL::Integer> Many2677_4_ra1o;
  
// Parameters for L_5_Many2677
  DDL::Integer Many2677_5_ra0o;
  DDL::Input Many2677_5_ra1o;
  DDL::Builder<DDL::Integer> Many2677_5_ra2o;
  
// Parameters for L_6_Many2677
  DDL::Input Many2677_6_ra0o;
  DDL::Builder<DDL::Integer> Many2677_6_ra1o;
  Many2677_6_ra0o = a1;
  Many2677_6_ra1o = a2;
  goto Many2677_6;
  // NormalBlock
  Many2677_0: {
    DDL::Integer r0 = Many2677_0_ra1o.getValue();
    Many2677_0_ra1o.free();
    DDL::Builder<DDL::Integer> r1 = DDL::Builder<DDL::Integer>(Many2677_0_ra0o,
                                                               r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:88:27--88:42:Many_2677",
                true);
    Many2677_6_ra0o = Many2677_0_ra2o;
    Many2677_6_ra1o = r1;
    goto Many2677_6;
  }
  // NormalBlock
  Many2677_1: {
    p.popDebug();
    *_result = Many2677_1_ra0o;
    *_result_input = Many2677_1_ra1o;
    return true;
  }
  // NormalBlock
  Many2677_2: {
    if (Many2677_2_ra0o.isJust()) {
      Many2677_0_ra2o = Many2677_2_ra2o;
      Many2677_0_ra0o = Many2677_2_ra1o;
      Many2677_0_ra1o = Many2677_2_ra0o;
      goto Many2677_0;
    } else {
      Many2677_2_ra0o.free();
      Many2677_1_ra1o = Many2677_2_ra2o;
      Many2677_1_ra0o = Many2677_2_ra1o;
      goto Many2677_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2677_4: {
    Many2677_2_ra0o = (DDL::Maybe<DDL::Integer>());
    Many2677_2_ra2o = Many2677_4_ra0o;
    Many2677_2_ra1o = Many2677_4_ra1o;
    goto Many2677_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2677_5: {
    DDL::Maybe<DDL::Integer> r0 = DDL::Maybe<DDL::Integer>(Many2677_5_ra0o);
    Many2677_2_ra0o = r0;
    Many2677_2_ra2o = Many2677_5_ra1o;
    Many2677_2_ra1o = Many2677_5_ra2o;
    goto Many2677_2;
  }
  // NormalBlock
  Many2677_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:88:38--88:42:Digit",
                false);
    Many2677_6_ra0o.copy();
    Many2677_6_ra1o.copy();
    if (parser_Digit(p, &Many2677_5_ra0o, &Many2677_5_ra1o,
                     Many2677_6_ra0o)) {
      Many2677_6_ra0o.free();
      Many2677_6_ra1o.free();
      Many2677_5_ra2o = Many2677_6_ra1o;
      goto Many2677_5;
    } else {
      Many2677_6_ra1o.free();
      Many2677_4_ra0o = Many2677_6_ra0o;
      Many2677_4_ra1o = Many2677_6_ra1o;
      goto Many2677_4;
    }
  }
}
bool parser_Natural(DDL::ParserStateUser<ReferenceTable> &p,
                    DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Natural2508
  DDL::Integer Natural2508_0_ra0o;
  DDL::Input Natural2508_0_ra1o;
  
// Parameters for L_2_Natural2508
  DDL::Builder<DDL::Integer> Natural2508_2_ra0o;
  DDL::Input Natural2508_2_ra1o;
  
// Parameters for L_4_Natural2508
  DDL::Builder<DDL::Integer> Natural2508_4_ra0o;
  DDL::Input Natural2508_4_ra1o;
  
// Parameters for L_5_Natural2508
  DDL::Input Natural2508_5_ra0o;
  Natural2508_5_ra0o = a1;
  goto Natural2508_5;
  // ReturnBlock RetPure
  Natural2508_0: {
    p.popDebug();
    *_result = Natural2508_0_ra0o;
    *_result_input = Natural2508_0_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Natural2508_1: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Natural2508_2: {
    DDL::Array<DDL::Integer> r0 = DDL::Array<DDL::Integer>(Natural2508_2_ra0o);
    DDL::Integer r1 = DDL::Integer("10");
    Natural2508_0_ra0o = parser_numBase_2507(r1, r0);
    Natural2508_0_ra1o = Natural2508_2_ra1o;
    goto Natural2508_0;
  }
  // ReturnBlock (RetNo NoCapture)
  Natural2508_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Natural2508_4: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:88:27--88:42:Many_2677",
                false);
    if (parser_Many_2677(p, &Natural2508_2_ra0o, &Natural2508_2_ra1o,
                         Natural2508_4_ra1o, Natural2508_4_ra0o)) {
      goto Natural2508_2;
    } else {
      goto Natural2508_1;
    }
  }
  // NormalBlock
  Natural2508_5: {
    DDL::Builder<DDL::Integer> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:88:27--88:42:Many_2672",
                false);
    if (parser_Many_2672(p, &Natural2508_4_ra0o, &Natural2508_4_ra1o,
                         Natural2508_5_ra0o, DDL::UInt<64>{UINT64_C(0)}, r0)) {
      goto Natural2508_4;
    } else {
      goto Natural2508_3;
    }
  }
}
bool parser_Many_2687(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::Integer>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::UInt<64> a2, DDL::Builder<DDL::Integer> a3,
                      DDL::UInt<64> a4) {
  
// Parameters for L_1_Many2687
  DDL::Input Many2687_1_ra0o;
  
// Parameters for L_2_Many2687
  DDL::Integer Many2687_2_ra0o;
  DDL::Input Many2687_2_ra1o;
  DDL::UInt<64> Many2687_2_ra2u;
  DDL::Builder<DDL::Integer> Many2687_2_ra3o;
  DDL::UInt<64> Many2687_2_ra4u;
  
// Parameters for L_3_Many2687
  DDL::Input Many2687_3_ra0o;
  DDL::UInt<64> Many2687_3_ra1u;
  DDL::Builder<DDL::Integer> Many2687_3_ra2o;
  DDL::UInt<64> Many2687_3_ra3u;
  
// Parameters for L_4_Many2687
  DDL::Input Many2687_4_ra1o;
  DDL::Builder<DDL::Integer> Many2687_4_ra0o;
  
// Parameters for L_5_Many2687
  DDL::Input Many2687_5_ra0o;
  DDL::UInt<64> Many2687_5_ra1u;
  DDL::Builder<DDL::Integer> Many2687_5_ra2o;
  DDL::UInt<64> Many2687_5_ra3u;
  Many2687_5_ra0o = a1;
  Many2687_5_ra1u = a2;
  Many2687_5_ra2o = a3;
  Many2687_5_ra3u = a4;
  goto Many2687_5;
  // ReturnBlock (RetNo NoCapture)
  Many2687_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many2687_1_ra0o, r0);
    Many2687_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2687_2: {
    DDL::UInt<64> r0 = Many2687_2_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<DDL::Integer> r1 = DDL::Builder<DDL::Integer>(Many2687_2_ra3o,
                                                               Many2687_2_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:93:24--93:40:Many_2687",
                true);
    Many2687_5_ra0o = Many2687_2_ra1o;
    Many2687_5_ra1u = r0;
    Many2687_5_ra2o = r1;
    Many2687_5_ra3u = Many2687_2_ra4u;
    goto Many2687_5;
  }
  // NormalBlock
  Many2687_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:93:36--93:40:Digit",
                false);
    Many2687_3_ra0o.copy();
    if (parser_Digit(p, &Many2687_2_ra0o, &Many2687_2_ra1o,
                     Many2687_3_ra0o)) {
      Many2687_3_ra0o.free();
      Many2687_2_ra2u = Many2687_3_ra1u;
      Many2687_2_ra3o = Many2687_3_ra2o;
      Many2687_2_ra4u = Many2687_3_ra3u;
      goto Many2687_2;
    } else {
      Many2687_3_ra2o.free();
      Many2687_1_ra0o = Many2687_3_ra0o;
      goto Many2687_1;
    }
  }
  // NormalBlock
  Many2687_4: {
    p.popDebug();
    *_result = Many2687_4_ra0o;
    *_result_input = Many2687_4_ra1o;
    return true;
  }
  // NormalBlock
  Many2687_5: {
    DDL::Bool r0 = DDL::Bool{Many2687_5_ra1u < Many2687_5_ra3u};
    if (r0.getValue()) {
      Many2687_3_ra0o = Many2687_5_ra0o;
      Many2687_3_ra1u = Many2687_5_ra1u;
      Many2687_3_ra2o = Many2687_5_ra2o;
      Many2687_3_ra3u = Many2687_5_ra3u;
      goto Many2687_3;
    } else {
      Many2687_4_ra1o = Many2687_5_ra0o;
      Many2687_4_ra0o = Many2687_5_ra2o;
      goto Many2687_4;
    }
  }
}
bool parser_Many_2692(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::Integer>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Builder<DDL::Integer> a2, DDL::UInt<64> a3) {
  
// Parameters for L_0_Many2692
  DDL::Input Many2692_0_ra3o;
  DDL::Builder<DDL::Integer> Many2692_0_ra0o;
  DDL::Maybe<DDL::Integer> Many2692_0_ra1o;
  DDL::UInt<64> Many2692_0_ra2u;
  
// Parameters for L_1_Many2692
  DDL::Input Many2692_1_ra1o;
  DDL::Builder<DDL::Integer> Many2692_1_ra0o;
  
// Parameters for L_2_Many2692
  DDL::Maybe<DDL::Integer> Many2692_2_ra0o;
  DDL::Input Many2692_2_ra2o;
  DDL::Builder<DDL::Integer> Many2692_2_ra1o;
  DDL::UInt<64> Many2692_2_ra3u;
  
// Parameters for L_4_Many2692
  DDL::Input Many2692_4_ra0o;
  DDL::Builder<DDL::Integer> Many2692_4_ra1o;
  DDL::UInt<64> Many2692_4_ra2u;
  
// Parameters for L_5_Many2692
  DDL::Integer Many2692_5_ra0o;
  DDL::Input Many2692_5_ra1o;
  DDL::Builder<DDL::Integer> Many2692_5_ra2o;
  DDL::UInt<64> Many2692_5_ra3u;
  
// Parameters for L_6_Many2692
  DDL::Input Many2692_6_ra0o;
  DDL::Builder<DDL::Integer> Many2692_6_ra1o;
  DDL::UInt<64> Many2692_6_ra2u;
  Many2692_6_ra0o = a1;
  Many2692_6_ra1o = a2;
  Many2692_6_ra2u = a3;
  goto Many2692_6;
  // NormalBlock
  Many2692_0: {
    DDL::Integer r0 = Many2692_0_ra1o.getValue();
    Many2692_0_ra1o.free();
    DDL::Builder<DDL::Integer> r1 = DDL::Builder<DDL::Integer>(Many2692_0_ra0o,
                                                               r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:93:24--93:40:Many_2692",
                true);
    Many2692_6_ra0o = Many2692_0_ra3o;
    Many2692_6_ra1o = r1;
    Many2692_6_ra2u = Many2692_0_ra2u;
    goto Many2692_6;
  }
  // NormalBlock
  Many2692_1: {
    p.popDebug();
    *_result = Many2692_1_ra0o;
    *_result_input = Many2692_1_ra1o;
    return true;
  }
  // NormalBlock
  Many2692_2: {
    if (Many2692_2_ra0o.isJust()) {
      Many2692_0_ra3o = Many2692_2_ra2o;
      Many2692_0_ra0o = Many2692_2_ra1o;
      Many2692_0_ra1o = Many2692_2_ra0o;
      Many2692_0_ra2u = Many2692_2_ra3u;
      goto Many2692_0;
    } else {
      Many2692_2_ra0o.free();
      Many2692_1_ra1o = Many2692_2_ra2o;
      Many2692_1_ra0o = Many2692_2_ra1o;
      goto Many2692_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2692_4: {
    Many2692_2_ra0o = (DDL::Maybe<DDL::Integer>());
    Many2692_2_ra2o = Many2692_4_ra0o;
    Many2692_2_ra1o = Many2692_4_ra1o;
    Many2692_2_ra3u = Many2692_4_ra2u;
    goto Many2692_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2692_5: {
    DDL::Maybe<DDL::Integer> r0 = DDL::Maybe<DDL::Integer>(Many2692_5_ra0o);
    Many2692_2_ra0o = r0;
    Many2692_2_ra2o = Many2692_5_ra1o;
    Many2692_2_ra1o = Many2692_5_ra2o;
    Many2692_2_ra3u = Many2692_5_ra3u;
    goto Many2692_2;
  }
  // NormalBlock
  Many2692_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:93:36--93:40:Digit",
                false);
    Many2692_6_ra0o.copy();
    Many2692_6_ra1o.copy();
    if (parser_Digit(p, &Many2692_5_ra0o, &Many2692_5_ra1o,
                     Many2692_6_ra0o)) {
      Many2692_6_ra0o.free();
      Many2692_6_ra1o.free();
      Many2692_5_ra2o = Many2692_6_ra1o;
      Many2692_5_ra3u = Many2692_6_ra2u;
      goto Many2692_5;
    } else {
      Many2692_6_ra1o.free();
      Many2692_4_ra0o = Many2692_6_ra0o;
      Many2692_4_ra1o = Many2692_6_ra1o;
      Many2692_4_ra2u = Many2692_6_ra2u;
      goto Many2692_4;
    }
  }
}
bool parser_for_2701(DDL::ParserStateUser<ReferenceTable> &p,
                     User::Number* _result, DDL::Input* _result_input, DDL::Input a1,
                     User::Number a2, DDL::Array<DDL::Integer>::Iterator a3) {
  
// Parameters for L_0_for2701
  DDL::Input for2701_0_ra1o;
  User::Number for2701_0_ra0o;
  
// Parameters for L_1_for2701
  DDL::Input for2701_1_ra2o;
  DDL::Array<DDL::Integer>::Iterator for2701_1_ra0o;
  User::Number for2701_1_ra1o;
  
// Parameters for L_2_for2701
  DDL::Input for2701_2_ra0o;
  User::Number for2701_2_ra1o;
  DDL::Array<DDL::Integer>::Iterator for2701_2_ra2o;
  for2701_2_ra0o = a1;
  for2701_2_ra1o = a2;
  for2701_2_ra2o = a3;
  goto for2701_2;
  // NormalBlock
  for2701_0: {
    p.popDebug();
    *_result = for2701_0_ra0o;
    *_result_input = for2701_0_ra1o;
    return true;
  }
  // NormalBlock
  for2701_1: {
    DDL::Integer r0 = for2701_1_ra0o.value();
    DDL::Integer r1 = DDL::Integer("10");
    DDL::Integer r2 = for2701_1_ra1o.get_num();
    DDL::Integer r3 = r1 * r2;
    DDL::Integer r4 = r3 + r0;
    DDL::Integer r5 = for2701_1_ra1o.get_exp();
    for2701_1_ra1o.free();
    DDL::Integer r6 = DDL::Integer("1");
    DDL::Integer r7 = r5 - r6;
    User::Number r8;
    r8.init(r4, r7);
    DDL::Array<DDL::Integer>::Iterator r9 = for2701_1_ra0o.next();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:94:39--94:49:for_2701",
                true);
    for2701_2_ra0o = for2701_1_ra2o;
    for2701_2_ra1o = r8;
    for2701_2_ra2o = r9;
    goto for2701_2;
  }
  // NormalBlock
  for2701_2: {
    DDL::Bool r0 = for2701_2_ra2o.done();
    if (r0.getValue()) {
      for2701_2_ra2o.free();
      for2701_0_ra1o = for2701_2_ra0o;
      for2701_0_ra0o = for2701_2_ra1o;
      goto for2701_0;
    } else {
      for2701_1_ra2o = for2701_2_ra0o;
      for2701_1_ra0o = for2701_2_ra2o;
      for2701_1_ra1o = for2701_2_ra1o;
      goto for2701_1;
    }
  }
}
bool parser_Frac(DDL::ParserStateUser<ReferenceTable> &p,
                 User::Number* _result, DDL::Input* _result_input, DDL::Input a1,
                 DDL::UInt<64> a2, User::Number a3) {
  
// Parameters for L_1_Frac2509
  DDL::Builder<DDL::Integer> Frac2509_1_ra0o;
  DDL::Input Frac2509_1_ra1o;
  User::Number Frac2509_1_ra2o;
  
// Parameters for L_3_Frac2509
  DDL::Builder<DDL::Integer> Frac2509_3_ra0o;
  DDL::Input Frac2509_3_ra1o;
  DDL::UInt<64> Frac2509_3_ra2u;
  User::Number Frac2509_3_ra3o;
  
// Parameters for L_5_Frac2509
  DDL::Input Frac2509_5_ra0o;
  
// Parameters for L_7_Frac2509
  DDL::Input Frac2509_7_ra0o;
  DDL::UInt<64> Frac2509_7_ra1u;
  User::Number Frac2509_7_ra2o;
  
// Parameters for L_8_Frac2509
  DDL::Input Frac2509_8_ra0o;
  
// Parameters for L_9_Frac2509
  DDL::Input Frac2509_9_ra1o;
  DDL::Input Frac2509_9_ra0o;
  DDL::UInt<64> Frac2509_9_ra2u;
  User::Number Frac2509_9_ra3o;
  
// Parameters for L_10_Frac2509
  DDL::Input Frac2509_10_ra0o;
  DDL::UInt<64> Frac2509_10_ra1u;
  User::Number Frac2509_10_ra2o;
  Frac2509_10_ra0o = a1;
  Frac2509_10_ra1u = a2;
  Frac2509_10_ra2o = a3;
  goto Frac2509_10;
  // ReturnBlock (RetNo NoCapture)
  Frac2509_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Frac2509_1: {
    DDL::Array<DDL::Integer> r0 = DDL::Array<DDL::Integer>(Frac2509_1_ra0o);
    DDL::Array<DDL::Integer>::Iterator r1 = DDL::Array<DDL::Integer>::Iterator(r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:93:5--94:51:for_2701",
                true);
    return parser_for_2701(p, _result, _result_input, Frac2509_1_ra1o,
                           Frac2509_1_ra2o, r1);
  }
  // ReturnBlock (RetNo NoCapture)
  Frac2509_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Frac2509_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:93:24--93:40:Many_2692",
                false);
    if (parser_Many_2692(p, &Frac2509_1_ra0o, &Frac2509_1_ra1o,
                         Frac2509_3_ra1o, Frac2509_3_ra0o, Frac2509_3_ra2u)) {
      Frac2509_1_ra2o = Frac2509_3_ra3o;
      goto Frac2509_1;
    } else {
      Frac2509_3_ra3o.free();
      goto Frac2509_0;
    }
  }
  // NormalBlock
  Frac2509_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:92:5--92:10",
               Frac2509_5_ra0o, r0);
    Frac2509_5_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Frac2509_7: {
    DDL::Input r0 = Frac2509_7_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Builder<DDL::Integer> r1;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:93:24--94:51:Many_2687",
                false);
    if (parser_Many_2687(p, &Frac2509_3_ra0o, &Frac2509_3_ra1o, r0,
                         DDL::UInt<64>{UINT64_C(0)}, r1, Frac2509_7_ra1u)) {
      Frac2509_3_ra2u = Frac2509_7_ra1u;
      Frac2509_3_ra3o = Frac2509_7_ra2o;
      goto Frac2509_3;
    } else {
      Frac2509_7_ra2o.free();
      goto Frac2509_2;
    }
  }
  // NormalBlock
  Frac2509_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:92:5--92:10",
               Frac2509_8_ra0o, r0);
    Frac2509_8_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Frac2509_9: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Frac2509_9_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(46)} == r0};
    if (r1.getValue()) {
      Frac2509_9_ra1o.free();
      Frac2509_7_ra0o = Frac2509_9_ra0o;
      Frac2509_7_ra1u = Frac2509_9_ra2u;
      Frac2509_7_ra2o = Frac2509_9_ra3o;
      goto Frac2509_7;
    } else {
      Frac2509_9_ra0o.free();
      Frac2509_9_ra3o.free();
      Frac2509_8_ra0o = Frac2509_9_ra1o;
      goto Frac2509_8;
    }
  }
  // NormalBlock
  Frac2509_10: {
    DDL::Bool r0 = Frac2509_10_ra0o.length() == 0;
    Frac2509_10_ra0o.copy();
    if (r0.getValue()) {
      Frac2509_10_ra2o.free();
      Frac2509_10_ra0o.free();
      Frac2509_5_ra0o = Frac2509_10_ra0o;
      goto Frac2509_5;
    } else {
      Frac2509_9_ra1o = Frac2509_10_ra0o;
      Frac2509_9_ra0o = Frac2509_10_ra0o;
      Frac2509_9_ra2u = Frac2509_10_ra1u;
      Frac2509_9_ra3o = Frac2509_10_ra2o;
      goto Frac2509_9;
    }
  }
}
bool parser_UnsignedLeadDigits(DDL::ParserStateUser<ReferenceTable> &p,
                               User::Number* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_UnsignedLeadDigits2510
  DDL::Input UnsignedLeadDigits2510_0_ra0o;
  User::Number UnsignedLeadDigits2510_0_ra1o;
  
// Parameters for L_1_UnsignedLeadDigits2510
  User::Number UnsignedLeadDigits2510_1_ra0o;
  DDL::Input UnsignedLeadDigits2510_1_ra1o;
  
// Parameters for L_3_UnsignedLeadDigits2510
  DDL::Integer UnsignedLeadDigits2510_3_ra0o;
  DDL::Input UnsignedLeadDigits2510_3_ra1o;
  
// Parameters for L_4_UnsignedLeadDigits2510
  DDL::Input UnsignedLeadDigits2510_4_ra0o;
  UnsignedLeadDigits2510_4_ra0o = a1;
  goto UnsignedLeadDigits2510_4;
  // ReturnBlock (RetNo NoCapture)
  UnsignedLeadDigits2510_0: {
    p.popDebug();
    *_result = UnsignedLeadDigits2510_0_ra1o;
    *_result_input = UnsignedLeadDigits2510_0_ra0o;
    return true;
  }
  // ReturnBlock (RetYes NoCapture)
  UnsignedLeadDigits2510_1: {
    p.popDebug();
    *_result = UnsignedLeadDigits2510_1_ra0o;
    *_result_input = UnsignedLeadDigits2510_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  UnsignedLeadDigits2510_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  UnsignedLeadDigits2510_3: {
    DDL::Integer r0 = DDL::Integer("0");
    User::Number r1;
    r1.init(UnsignedLeadDigits2510_3_ra0o, r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:84:5--84:14:Frac",
                false);
    UnsignedLeadDigits2510_3_ra1o.copy();
    r1.copy();
    if (parser_Frac(p, &UnsignedLeadDigits2510_1_ra0o,
                    &UnsignedLeadDigits2510_1_ra1o, UnsignedLeadDigits2510_3_ra1o,
                    DDL::UInt<64>{UINT64_C(0)}, r1)) {
      UnsignedLeadDigits2510_3_ra1o.free();
      r1.free();
      goto UnsignedLeadDigits2510_1;
    } else {
      UnsignedLeadDigits2510_0_ra0o = UnsignedLeadDigits2510_3_ra1o;
      UnsignedLeadDigits2510_0_ra1o = r1;
      goto UnsignedLeadDigits2510_0;
    }
  }
  // NormalBlock
  UnsignedLeadDigits2510_4: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:82:15--82:21:Natural",
                false);
    if (parser_Natural(p, &UnsignedLeadDigits2510_3_ra0o,
                       &UnsignedLeadDigits2510_3_ra1o, UnsignedLeadDigits2510_4_ra0o)) {
      goto UnsignedLeadDigits2510_3;
    } else {
      goto UnsignedLeadDigits2510_2;
    }
  }
}
bool parser_UnsignedNumber(DDL::ParserStateUser<ReferenceTable> &p,
                           User::Number* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_UnsignedNumber2511
  DDL::Input UnsignedNumber2511_0_ra0o;
  
// Parameters for L_1_UnsignedNumber2511
  User::Number UnsignedNumber2511_1_ra0o;
  DDL::Input UnsignedNumber2511_1_ra1o;
  
// Parameters for L_2_UnsignedNumber2511
  DDL::Input UnsignedNumber2511_2_ra0o;
  UnsignedNumber2511_2_ra0o = a1;
  goto UnsignedNumber2511_2;
  // ReturnBlock (RetNo NoCapture)
  UnsignedNumber2511_0: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Integer r1 = DDL::Integer("0");
    User::Number r2;
    r2.init(r0, r1);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:78:6--78:32:Frac",
                true);
    return parser_Frac(p, _result, _result_input,
                       UnsignedNumber2511_0_ra0o, DDL::UInt<64>{UINT64_C(1)}, r2);
  }
  // ReturnBlock (RetYes NoCapture)
  UnsignedNumber2511_1: {
    p.popDebug();
    *_result = UnsignedNumber2511_1_ra0o;
    *_result_input = UnsignedNumber2511_1_ra1o;
    return true;
  }
  // NormalBlock
  UnsignedNumber2511_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:77:6--77:23:UnsignedLeadDigits",
                false);
    UnsignedNumber2511_2_ra0o.copy();
    if (parser_UnsignedLeadDigits(p, &UnsignedNumber2511_1_ra0o,
                                  &UnsignedNumber2511_1_ra1o, UnsignedNumber2511_2_ra0o)) {
      UnsignedNumber2511_2_ra0o.free();
      goto UnsignedNumber2511_1;
    } else {
      UnsignedNumber2511_0_ra0o = UnsignedNumber2511_2_ra0o;
      goto UnsignedNumber2511_0;
    }
  }
}
bool parser_Many_2718(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many2718
  DDL::Input Many2718_0_ra0o;
  
// Parameters for L_1_Many2718
  DDL::Input Many2718_1_ra0o;
  
// Parameters for L_2_Many2718
  DDL::Bool Many2718_2_ra0u;
  DDL::Input Many2718_2_ra1o;
  
// Parameters for L_4_Many2718
  DDL::Input Many2718_4_ra0o;
  
// Parameters for L_5_Many2718
  DDL::Unit Many2718_5_ra0u;
  DDL::Input Many2718_5_ra1o;
  
// Parameters for L_6_Many2718
  DDL::Input Many2718_6_ra0o;
  Many2718_6_ra0o = a1;
  goto Many2718_6;
  // NormalBlock
  Many2718_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2718",
                true);
    Many2718_6_ra0o = Many2718_0_ra0o;
    goto Many2718_6;
  }
  // NormalBlock
  Many2718_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many2718_1_ra0o;
    return true;
  }
  // NormalBlock
  Many2718_2: {
    if (Many2718_2_ra0u.getValue()) {
      Many2718_0_ra0o = Many2718_2_ra1o;
      goto Many2718_0;
    } else {
      Many2718_1_ra0o = Many2718_2_ra1o;
      goto Many2718_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2718_4: {
    Many2718_2_ra0u = DDL::Bool(false);
    Many2718_2_ra1o = Many2718_4_ra0o;
    goto Many2718_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2718_5: {
    Many2718_2_ra0u = DDL::Bool(true);
    Many2718_2_ra1o = Many2718_5_ra1o;
    goto Many2718_2;
  }
  // NormalBlock
  Many2718_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:48--228:52:AnyWS_",
                false);
    Many2718_6_ra0o.copy();
    if (parser_AnyWS_(p, &Many2718_5_ra0u, &Many2718_5_ra1o,
                      Many2718_6_ra0o)) {
      Many2718_6_ra0o.free();
      goto Many2718_5;
    } else {
      Many2718_4_ra0o = Many2718_6_ra0o;
      goto Many2718_4;
    }
  }
}
bool parser_Token_2512(DDL::ParserStateUser<ReferenceTable> &p,
                       User::Number* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_Token2512
  DDL::Unit Token2512_1_ra0u;
  DDL::Input Token2512_1_ra1o;
  User::Number Token2512_1_ra2o;
  
// Parameters for L_2_Token2512
  User::Number Token2512_2_ra0o;
  DDL::Input Token2512_2_ra1o;
  
// Parameters for L_3_Token2512
  DDL::Input Token2512_3_ra1o;
  User::Number Token2512_3_ra0o;
  
// Parameters for L_4_Token2512
  DDL::Input Token2512_4_ra1o;
  User::Number Token2512_4_ra0o;
  
// Parameters for L_5_Token2512
  DDL::Input Token2512_5_ra0o;
  
// Parameters for L_7_Token2512
  User::Number Token2512_7_ra0o;
  DDL::Input Token2512_7_ra1o;
  User::Sign Token2512_7_ra2o;
  
// Parameters for L_9_Token2512
  User::Sign Token2512_9_ra0o;
  DDL::Input Token2512_9_ra1o;
  
// Parameters for L_10_Token2512
  DDL::Input Token2512_10_ra0o;
  Token2512_10_ra0o = a1;
  goto Token2512_10;
  // ReturnBlock (RetNo NoCapture)
  Token2512_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2512_1: {
    p.popDebug();
    *_result = Token2512_1_ra2o;
    *_result_input = Token2512_1_ra1o;
    return true;
  }
  // NormalBlock
  Token2512_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2718",
                false);
    if (parser_Many_2718(p, &Token2512_1_ra0u, &Token2512_1_ra1o,
                         Token2512_2_ra1o)) {
      Token2512_1_ra2o = Token2512_2_ra0o;
      goto Token2512_1;
    } else {
      Token2512_2_ra0o.free();
      goto Token2512_0;
    }
  }
  // NormalBlock
  Token2512_3: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Integer r1 = Token2512_3_ra0o.get_num();
    DDL::Integer r2 = r0 - r1;
    DDL::Integer r3 = Token2512_3_ra0o.get_exp();
    Token2512_3_ra0o.free();
    User::Number r4;
    r4.init(r2, r3);
    Token2512_2_ra0o = r4;
    Token2512_2_ra1o = Token2512_3_ra1o;
    goto Token2512_2;
  }
  // NormalBlock
  Token2512_4: {
    Token2512_2_ra0o = Token2512_4_ra0o;
    Token2512_2_ra1o = Token2512_4_ra1o;
    goto Token2512_2;
  }
  // NormalBlock
  Token2512_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:62:5--66:3",
               Token2512_5_ra0o, r0);
    Token2512_5_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  Token2512_6: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2512_7: {
    switch (Token2512_7_ra2o.getTag()) {
      case DDL::Tag::Sign::neg:
        Token2512_7_ra2o.free();
        Token2512_3_ra1o = Token2512_7_ra1o;
        Token2512_3_ra0o = Token2512_7_ra0o;
        goto Token2512_3;
      case DDL::Tag::Sign::pos:
        Token2512_7_ra2o.free();
        Token2512_4_ra1o = Token2512_7_ra1o;
        Token2512_4_ra0o = Token2512_7_ra0o;
        goto Token2512_4;
      default:
        Token2512_7_ra0o.free();
        Token2512_7_ra2o.free();
        Token2512_5_ra0o = Token2512_7_ra1o;
        goto Token2512_5;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Token2512_8: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2512_9: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:61:16--61:29:UnsignedNumber",
                false);
    if (parser_UnsignedNumber(p, &Token2512_7_ra0o, &Token2512_7_ra1o,
                              Token2512_9_ra1o)) {
      Token2512_7_ra2o = Token2512_9_ra0o;
      goto Token2512_7;
    } else {
      Token2512_9_ra0o.free();
      goto Token2512_6;
    }
  }
  // NormalBlock
  Token2512_10: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:60:16--60:19:Sign",
                false);
    if (parser_Sign(p, &Token2512_9_ra0o, &Token2512_9_ra1o,
                    Token2512_10_ra0o)) {
      goto Token2512_9;
    } else {
      goto Token2512_8;
    }
  }
}
bool parser_Number(DDL::ParserStateUser<ReferenceTable> &p,
                   User::Number* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Number2513
  DDL::Input Number2513_0_ra0o;
  Number2513_0_ra0o = a1;
  goto Number2513_0;
  // NormalBlock
  Number2513_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:58:14--66:3:Token_2512",
                true);
    return parser_Token_2512(p, _result, _result_input,
                             Number2513_0_ra0o);
  }
}
bool parser_OctDigit(DDL::ParserStateUser<ReferenceTable> &p,
                     DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_OctDigit2514
  DDL::Input OctDigit2514_1_ra0o;
  
// Parameters for L_3_OctDigit2514
  DDL::Input OctDigit2514_3_ra0o;
  DDL::UInt<8> OctDigit2514_3_ra1u;
  
// Parameters for L_4_OctDigit2514
  DDL::Input OctDigit2514_4_ra0o;
  
// Parameters for L_5_OctDigit2514
  DDL::Input OctDigit2514_5_ra1o;
  DDL::Bool OctDigit2514_5_ra0u;
  DDL::Input OctDigit2514_5_ra2o;
  DDL::UInt<8> OctDigit2514_5_ra3u;
  
// Parameters for L_6_OctDigit2514
  DDL::Input OctDigit2514_6_ra2o;
  DDL::UInt<8> OctDigit2514_6_ra0u;
  DDL::Input OctDigit2514_6_ra1o;
  
// Parameters for L_7_OctDigit2514
  DDL::Input OctDigit2514_7_ra2o;
  DDL::Input OctDigit2514_7_ra0o;
  DDL::UInt<8> OctDigit2514_7_ra1u;
  
// Parameters for L_8_OctDigit2514
  DDL::Input OctDigit2514_8_ra1o;
  DDL::Input OctDigit2514_8_ra0o;
  
// Parameters for L_9_OctDigit2514
  DDL::Input OctDigit2514_9_ra0o;
  OctDigit2514_9_ra0o = a1;
  goto OctDigit2514_9;
  // NormalBlock
  OctDigit2514_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:98:17--98:29",
               OctDigit2514_1_ra0o, r0);
    OctDigit2514_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  OctDigit2514_3: {
    DDL::Input r0 = OctDigit2514_3_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::UInt<8> r1 = OctDigit2514_3_ra1u - DDL::UInt<8>{UINT8_C(48)};
    DDL::Integer r2 = DDL::uint_to_integer<8>(r1);
    p.popDebug();
    *_result = r2;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  OctDigit2514_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:98:17--98:29",
               OctDigit2514_4_ra0o, r0);
    OctDigit2514_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  OctDigit2514_5: {
    if (OctDigit2514_5_ra0u.getValue()) {
      OctDigit2514_5_ra1o.free();
      OctDigit2514_3_ra0o = OctDigit2514_5_ra2o;
      OctDigit2514_3_ra1u = OctDigit2514_5_ra3u;
      goto OctDigit2514_3;
    } else {
      OctDigit2514_5_ra2o.free();
      OctDigit2514_4_ra0o = OctDigit2514_5_ra1o;
      goto OctDigit2514_4;
    }
  }
  // NormalBlock
  OctDigit2514_6: {
    DDL::Bool r0 = DDL::Bool{OctDigit2514_6_ra0u <= DDL::UInt<8>{UINT8_C(55)}};
    OctDigit2514_5_ra1o = OctDigit2514_6_ra2o;
    OctDigit2514_5_ra0u = r0;
    OctDigit2514_5_ra2o = OctDigit2514_6_ra1o;
    OctDigit2514_5_ra3u = OctDigit2514_6_ra0u;
    goto OctDigit2514_5;
  }
  // NormalBlock
  OctDigit2514_7: {
    OctDigit2514_5_ra1o = OctDigit2514_7_ra2o;
    OctDigit2514_5_ra0u = DDL::Bool(false);
    OctDigit2514_5_ra2o = OctDigit2514_7_ra0o;
    OctDigit2514_5_ra3u = OctDigit2514_7_ra1u;
    goto OctDigit2514_5;
  }
  // NormalBlock
  OctDigit2514_8: {
    DDL::UInt<8> r0 = DDL::UInt<8>(OctDigit2514_8_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(48)} <= r0};
    if (r1.getValue()) {
      OctDigit2514_6_ra2o = OctDigit2514_8_ra1o;
      OctDigit2514_6_ra0u = r0;
      OctDigit2514_6_ra1o = OctDigit2514_8_ra0o;
      goto OctDigit2514_6;
    } else {
      OctDigit2514_7_ra2o = OctDigit2514_8_ra1o;
      OctDigit2514_7_ra0o = OctDigit2514_8_ra0o;
      OctDigit2514_7_ra1u = r0;
      goto OctDigit2514_7;
    }
  }
  // NormalBlock
  OctDigit2514_9: {
    DDL::Bool r0 = OctDigit2514_9_ra0o.length() == 0;
    OctDigit2514_9_ra0o.copy();
    if (r0.getValue()) {
      OctDigit2514_9_ra0o.free();
      OctDigit2514_1_ra0o = OctDigit2514_9_ra0o;
      goto OctDigit2514_1;
    } else {
      OctDigit2514_8_ra1o = OctDigit2514_9_ra0o;
      OctDigit2514_8_ra0o = OctDigit2514_9_ra0o;
      goto OctDigit2514_8;
    }
  }
}
bool parser_HexDigit(DDL::ParserStateUser<ReferenceTable> &p,
                     DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_HexDigit2515
  DDL::Input HexDigit2515_1_ra0o;
  
// Parameters for L_3_HexDigit2515
  DDL::Input HexDigit2515_3_ra0o;
  DDL::UInt<8> HexDigit2515_3_ra1u;
  
// Parameters for L_4_HexDigit2515
  DDL::Input HexDigit2515_4_ra0o;
  
// Parameters for L_5_HexDigit2515
  DDL::Input HexDigit2515_5_ra1o;
  DDL::Bool HexDigit2515_5_ra0u;
  DDL::Input HexDigit2515_5_ra2o;
  DDL::UInt<8> HexDigit2515_5_ra3u;
  
// Parameters for L_6_HexDigit2515
  DDL::Input HexDigit2515_6_ra2o;
  DDL::UInt<8> HexDigit2515_6_ra0u;
  DDL::Input HexDigit2515_6_ra1o;
  
// Parameters for L_7_HexDigit2515
  DDL::Input HexDigit2515_7_ra2o;
  DDL::Input HexDigit2515_7_ra0o;
  DDL::UInt<8> HexDigit2515_7_ra1u;
  
// Parameters for L_8_HexDigit2515
  DDL::Input HexDigit2515_8_ra1o;
  DDL::Input HexDigit2515_8_ra0o;
  
// Parameters for L_11_HexDigit2515
  DDL::Input HexDigit2515_11_ra0o;
  
// Parameters for L_13_HexDigit2515
  DDL::Input HexDigit2515_13_ra0o;
  DDL::Input HexDigit2515_13_ra1o;
  
// Parameters for L_16_HexDigit2515
  DDL::Input HexDigit2515_16_ra0o;
  DDL::UInt<8> HexDigit2515_16_ra1u;
  
// Parameters for L_17_HexDigit2515
  DDL::Input HexDigit2515_17_ra0o;
  DDL::Input HexDigit2515_17_ra1o;
  
// Parameters for L_18_HexDigit2515
  DDL::Input HexDigit2515_18_ra2o;
  DDL::Bool HexDigit2515_18_ra0u;
  DDL::Input HexDigit2515_18_ra1o;
  DDL::Input HexDigit2515_18_ra3o;
  DDL::UInt<8> HexDigit2515_18_ra4u;
  
// Parameters for L_19_HexDigit2515
  DDL::Input HexDigit2515_19_ra3o;
  DDL::UInt<8> HexDigit2515_19_ra0u;
  DDL::Input HexDigit2515_19_ra1o;
  DDL::Input HexDigit2515_19_ra2o;
  
// Parameters for L_20_HexDigit2515
  DDL::Input HexDigit2515_20_ra3o;
  DDL::Input HexDigit2515_20_ra0o;
  DDL::Input HexDigit2515_20_ra1o;
  DDL::UInt<8> HexDigit2515_20_ra2u;
  
// Parameters for L_21_HexDigit2515
  DDL::Input HexDigit2515_21_ra2o;
  DDL::Input HexDigit2515_21_ra0o;
  DDL::Input HexDigit2515_21_ra1o;
  
// Parameters for L_22_HexDigit2515
  DDL::Input HexDigit2515_22_ra0o;
  DDL::Input HexDigit2515_22_ra1o;
  
// Parameters for L_23_HexDigit2515
  DDL::Integer HexDigit2515_23_ra0o;
  DDL::Input HexDigit2515_23_ra1o;
  
// Parameters for L_24_HexDigit2515
  DDL::Input HexDigit2515_24_ra0o;
  HexDigit2515_24_ra0o = a1;
  goto HexDigit2515_24;
  // NormalBlock
  HexDigit2515_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:102:23--102:35",
               HexDigit2515_1_ra0o, r0);
    HexDigit2515_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  HexDigit2515_3: {
    DDL::Input r0 = HexDigit2515_3_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::UInt<8> r1 = DDL::UInt<8>{UINT8_C(10)} + HexDigit2515_3_ra1u;
    DDL::UInt<8> r2 = r1 - DDL::UInt<8>{UINT8_C(65)};
    DDL::Integer r3 = DDL::uint_to_integer<8>(r2);
    p.popDebug();
    *_result = r3;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  HexDigit2515_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:102:23--102:35",
               HexDigit2515_4_ra0o, r0);
    HexDigit2515_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  HexDigit2515_5: {
    if (HexDigit2515_5_ra0u.getValue()) {
      HexDigit2515_5_ra1o.free();
      HexDigit2515_3_ra0o = HexDigit2515_5_ra2o;
      HexDigit2515_3_ra1u = HexDigit2515_5_ra3u;
      goto HexDigit2515_3;
    } else {
      HexDigit2515_5_ra2o.free();
      HexDigit2515_4_ra0o = HexDigit2515_5_ra1o;
      goto HexDigit2515_4;
    }
  }
  // NormalBlock
  HexDigit2515_6: {
    DDL::Bool r0 = DDL::Bool{HexDigit2515_6_ra0u <= DDL::UInt<8>{UINT8_C(70)}};
    HexDigit2515_5_ra1o = HexDigit2515_6_ra2o;
    HexDigit2515_5_ra0u = r0;
    HexDigit2515_5_ra2o = HexDigit2515_6_ra1o;
    HexDigit2515_5_ra3u = HexDigit2515_6_ra0u;
    goto HexDigit2515_5;
  }
  // NormalBlock
  HexDigit2515_7: {
    HexDigit2515_5_ra1o = HexDigit2515_7_ra2o;
    HexDigit2515_5_ra0u = DDL::Bool(false);
    HexDigit2515_5_ra2o = HexDigit2515_7_ra0o;
    HexDigit2515_5_ra3u = HexDigit2515_7_ra1u;
    goto HexDigit2515_5;
  }
  // NormalBlock
  HexDigit2515_8: {
    DDL::UInt<8> r0 = DDL::UInt<8>(HexDigit2515_8_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(65)} <= r0};
    if (r1.getValue()) {
      HexDigit2515_6_ra2o = HexDigit2515_8_ra1o;
      HexDigit2515_6_ra0u = r0;
      HexDigit2515_6_ra1o = HexDigit2515_8_ra0o;
      goto HexDigit2515_6;
    } else {
      HexDigit2515_7_ra2o = HexDigit2515_8_ra1o;
      HexDigit2515_7_ra0o = HexDigit2515_8_ra0o;
      HexDigit2515_7_ra1u = r0;
      goto HexDigit2515_7;
    }
  }
  // NormalBlock
  HexDigit2515_11: {
    DDL::Bool r0 = HexDigit2515_11_ra0o.length() == 0;
    HexDigit2515_11_ra0o.copy();
    if (r0.getValue()) {
      HexDigit2515_11_ra0o.free();
      HexDigit2515_1_ra0o = HexDigit2515_11_ra0o;
      goto HexDigit2515_1;
    } else {
      HexDigit2515_8_ra1o = HexDigit2515_11_ra0o;
      HexDigit2515_8_ra0o = HexDigit2515_11_ra0o;
      goto HexDigit2515_8;
    }
  }
  // NormalBlock
  HexDigit2515_13: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:101:23--101:35",
               HexDigit2515_13_ra0o, r0);
    HexDigit2515_13_ra0o.free();
    r0.free();
    HexDigit2515_11_ra0o = HexDigit2515_13_ra1o;
    goto HexDigit2515_11;
  }
  // NormalBlock
  HexDigit2515_16: {
    DDL::Input r0 = HexDigit2515_16_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::UInt<8> r1 = DDL::UInt<8>{UINT8_C(10)} + HexDigit2515_16_ra1u;
    DDL::UInt<8> r2 = r1 - DDL::UInt<8>{UINT8_C(97)};
    DDL::Integer r3 = DDL::uint_to_integer<8>(r2);
    p.popDebug();
    *_result = r3;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  HexDigit2515_17: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:101:23--101:35",
               HexDigit2515_17_ra0o, r0);
    HexDigit2515_17_ra0o.free();
    r0.free();
    HexDigit2515_11_ra0o = HexDigit2515_17_ra1o;
    goto HexDigit2515_11;
  }
  // NormalBlock
  HexDigit2515_18: {
    if (HexDigit2515_18_ra0u.getValue()) {
      HexDigit2515_18_ra1o.free();
      HexDigit2515_18_ra2o.free();
      HexDigit2515_16_ra0o = HexDigit2515_18_ra3o;
      HexDigit2515_16_ra1u = HexDigit2515_18_ra4u;
      goto HexDigit2515_16;
    } else {
      HexDigit2515_18_ra3o.free();
      HexDigit2515_17_ra0o = HexDigit2515_18_ra2o;
      HexDigit2515_17_ra1o = HexDigit2515_18_ra1o;
      goto HexDigit2515_17;
    }
  }
  // NormalBlock
  HexDigit2515_19: {
    DDL::Bool r0 = DDL::Bool{HexDigit2515_19_ra0u <= DDL::UInt<8>{UINT8_C(102)}};
    HexDigit2515_18_ra2o = HexDigit2515_19_ra3o;
    HexDigit2515_18_ra0u = r0;
    HexDigit2515_18_ra1o = HexDigit2515_19_ra1o;
    HexDigit2515_18_ra3o = HexDigit2515_19_ra2o;
    HexDigit2515_18_ra4u = HexDigit2515_19_ra0u;
    goto HexDigit2515_18;
  }
  // NormalBlock
  HexDigit2515_20: {
    HexDigit2515_18_ra2o = HexDigit2515_20_ra3o;
    HexDigit2515_18_ra0u = DDL::Bool(false);
    HexDigit2515_18_ra1o = HexDigit2515_20_ra0o;
    HexDigit2515_18_ra3o = HexDigit2515_20_ra1o;
    HexDigit2515_18_ra4u = HexDigit2515_20_ra2u;
    goto HexDigit2515_18;
  }
  // NormalBlock
  HexDigit2515_21: {
    DDL::UInt<8> r0 = DDL::UInt<8>(HexDigit2515_21_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(97)} <= r0};
    if (r1.getValue()) {
      HexDigit2515_19_ra3o = HexDigit2515_21_ra2o;
      HexDigit2515_19_ra0u = r0;
      HexDigit2515_19_ra1o = HexDigit2515_21_ra1o;
      HexDigit2515_19_ra2o = HexDigit2515_21_ra0o;
      goto HexDigit2515_19;
    } else {
      HexDigit2515_20_ra3o = HexDigit2515_21_ra2o;
      HexDigit2515_20_ra0o = HexDigit2515_21_ra1o;
      HexDigit2515_20_ra1o = HexDigit2515_21_ra0o;
      HexDigit2515_20_ra2u = r0;
      goto HexDigit2515_20;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  HexDigit2515_22: {
    DDL::Bool r0 = HexDigit2515_22_ra0o.length() == 0;
    HexDigit2515_22_ra0o.copy();
    if (r0.getValue()) {
      HexDigit2515_22_ra0o.free();
      HexDigit2515_13_ra0o = HexDigit2515_22_ra0o;
      HexDigit2515_13_ra1o = HexDigit2515_22_ra1o;
      goto HexDigit2515_13;
    } else {
      HexDigit2515_21_ra2o = HexDigit2515_22_ra0o;
      HexDigit2515_21_ra0o = HexDigit2515_22_ra0o;
      HexDigit2515_21_ra1o = HexDigit2515_22_ra1o;
      goto HexDigit2515_21;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  HexDigit2515_23: {
    p.popDebug();
    *_result = HexDigit2515_23_ra0o;
    *_result_input = HexDigit2515_23_ra1o;
    return true;
  }
  // NormalBlock
  HexDigit2515_24: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:100:18--100:22:Digit",
                false);
    HexDigit2515_24_ra0o.copy();
    HexDigit2515_24_ra0o.copy();
    if (parser_Digit(p, &HexDigit2515_23_ra0o, &HexDigit2515_23_ra1o,
                     HexDigit2515_24_ra0o)) {
      HexDigit2515_24_ra0o.free();
      HexDigit2515_24_ra0o.free();
      goto HexDigit2515_23;
    } else {
      HexDigit2515_22_ra0o = HexDigit2515_24_ra0o;
      HexDigit2515_22_ra1o = HexDigit2515_24_ra0o;
      goto HexDigit2515_22;
    }
  }
}
bool parser_Guard_(DDL::ParserStateUser<ReferenceTable> &p,
                   DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1,
                   DDL::Bool a2) {
  
// Parameters for L_0_Guard_2516
  DDL::Input Guard_2516_0_ra0o;
  
// Parameters for L_1_Guard_2516
  DDL::Input Guard_2516_1_ra0o;
  
// Parameters for L_2_Guard_2516
  DDL::Input Guard_2516_2_ra0o;
  DDL::Bool Guard_2516_2_ra1u;
  Guard_2516_2_ra0o = a1;
  Guard_2516_2_ra1u = a2;
  goto Guard_2516_2;
  // NormalBlock
  Guard_2516_0: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Guard_2516_0_ra0o;
    return true;
  }
  // NormalBlock
  Guard_2516_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:64:21--64:29",
               Guard_2516_1_ra0o, r0);
    Guard_2516_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Guard_2516_2: {
    if (Guard_2516_2_ra1u.getValue()) {
      Guard_2516_0_ra0o = Guard_2516_2_ra0o;
      goto Guard_2516_0;
    } else {
      Guard_2516_1_ra0o = Guard_2516_2_ra0o;
      goto Guard_2516_1;
    }
  }
}
bool parser_NumberAsNat(DDL::ParserStateUser<ReferenceTable> &p,
                        DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                        User::Number a2) {
  
// Parameters for L_1_NumberAsNat2517
  DDL::Unit NumberAsNat2517_1_ra0u;
  DDL::Input NumberAsNat2517_1_ra1o;
  User::Number NumberAsNat2517_1_ra2o;
  
// Parameters for L_2_NumberAsNat2517
  DDL::Input NumberAsNat2517_2_ra2o;
  DDL::Bool NumberAsNat2517_2_ra0u;
  User::Number NumberAsNat2517_2_ra1o;
  
// Parameters for L_3_NumberAsNat2517
  DDL::Input NumberAsNat2517_3_ra1o;
  User::Number NumberAsNat2517_3_ra0o;
  
// Parameters for L_4_NumberAsNat2517
  DDL::Input NumberAsNat2517_4_ra1o;
  User::Number NumberAsNat2517_4_ra0o;
  
// Parameters for L_5_NumberAsNat2517
  DDL::Input NumberAsNat2517_5_ra0o;
  User::Number NumberAsNat2517_5_ra1o;
  NumberAsNat2517_5_ra0o = a1;
  NumberAsNat2517_5_ra1o = a2;
  goto NumberAsNat2517_5;
  // ReturnBlock (RetNo NoCapture)
  NumberAsNat2517_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  NumberAsNat2517_1: {
    DDL::Integer r0 = NumberAsNat2517_1_ra2o.get_num();
    NumberAsNat2517_1_ra2o.free();
    p.popDebug();
    *_result = r0;
    *_result_input = NumberAsNat2517_1_ra1o;
    return true;
  }
  // NormalBlock
  NumberAsNat2517_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:106:5--106:35:Guard_",
                false);
    if (parser_Guard_(p, &NumberAsNat2517_1_ra0u,
                      &NumberAsNat2517_1_ra1o, NumberAsNat2517_2_ra2o,
                      NumberAsNat2517_2_ra0u)) {
      NumberAsNat2517_1_ra2o = NumberAsNat2517_2_ra1o;
      goto NumberAsNat2517_1;
    } else {
      NumberAsNat2517_2_ra1o.free();
      goto NumberAsNat2517_0;
    }
  }
  // NormalBlock
  NumberAsNat2517_3: {
    DDL::Integer r0 = NumberAsNat2517_3_ra0o.get_exp();
    DDL::Integer r1 = DDL::Integer("0");
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    NumberAsNat2517_2_ra2o = NumberAsNat2517_3_ra1o;
    NumberAsNat2517_2_ra0u = r2;
    NumberAsNat2517_2_ra1o = NumberAsNat2517_3_ra0o;
    goto NumberAsNat2517_2;
  }
  // NormalBlock
  NumberAsNat2517_4: {
    NumberAsNat2517_2_ra2o = NumberAsNat2517_4_ra1o;
    NumberAsNat2517_2_ra0u = DDL::Bool(false);
    NumberAsNat2517_2_ra1o = NumberAsNat2517_4_ra0o;
    goto NumberAsNat2517_2;
  }
  // NormalBlock
  NumberAsNat2517_5: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Integer r1 = NumberAsNat2517_5_ra1o.get_num();
    DDL::Bool r2 = DDL::Bool{r0 <= r1};
    r0.free();
    r1.free();
    if (r2.getValue()) {
      NumberAsNat2517_3_ra1o = NumberAsNat2517_5_ra0o;
      NumberAsNat2517_3_ra0o = NumberAsNat2517_5_ra1o;
      goto NumberAsNat2517_3;
    } else {
      NumberAsNat2517_4_ra1o = NumberAsNat2517_5_ra0o;
      NumberAsNat2517_4_ra0o = NumberAsNat2517_5_ra1o;
      goto NumberAsNat2517_4;
    }
  }
}
bool parser_Many_2736(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::Integer>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::UInt<64> a2, DDL::Builder<DDL::Integer> a3) {
  
// Parameters for L_1_Many2736
  DDL::Input Many2736_1_ra0o;
  
// Parameters for L_2_Many2736
  DDL::Integer Many2736_2_ra0o;
  DDL::Input Many2736_2_ra1o;
  DDL::UInt<64> Many2736_2_ra2u;
  DDL::Builder<DDL::Integer> Many2736_2_ra3o;
  
// Parameters for L_3_Many2736
  DDL::Input Many2736_3_ra0o;
  DDL::UInt<64> Many2736_3_ra1u;
  DDL::Builder<DDL::Integer> Many2736_3_ra2o;
  
// Parameters for L_4_Many2736
  DDL::Input Many2736_4_ra1o;
  DDL::Builder<DDL::Integer> Many2736_4_ra0o;
  
// Parameters for L_5_Many2736
  DDL::Input Many2736_5_ra0o;
  DDL::UInt<64> Many2736_5_ra1u;
  DDL::Builder<DDL::Integer> Many2736_5_ra2o;
  Many2736_5_ra0o = a1;
  Many2736_5_ra1u = a2;
  Many2736_5_ra2o = a3;
  goto Many2736_5;
  // ReturnBlock (RetNo NoCapture)
  Many2736_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many2736_1_ra0o, r0);
    Many2736_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2736_2: {
    DDL::UInt<64> r0 = Many2736_2_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<DDL::Integer> r1 = DDL::Builder<DDL::Integer>(Many2736_2_ra3o,
                                                               Many2736_2_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:146:33--146:52:Many_2736",
                true);
    Many2736_5_ra0o = Many2736_2_ra1o;
    Many2736_5_ra1u = r0;
    Many2736_5_ra2o = r1;
    goto Many2736_5;
  }
  // NormalBlock
  Many2736_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:146:45--146:52:OctDigit",
                false);
    Many2736_3_ra0o.copy();
    if (parser_OctDigit(p, &Many2736_2_ra0o, &Many2736_2_ra1o,
                        Many2736_3_ra0o)) {
      Many2736_3_ra0o.free();
      Many2736_2_ra2u = Many2736_3_ra1u;
      Many2736_2_ra3o = Many2736_3_ra2o;
      goto Many2736_2;
    } else {
      Many2736_3_ra2o.free();
      Many2736_1_ra0o = Many2736_3_ra0o;
      goto Many2736_1;
    }
  }
  // NormalBlock
  Many2736_4: {
    p.popDebug();
    *_result = Many2736_4_ra0o;
    *_result_input = Many2736_4_ra1o;
    return true;
  }
  // NormalBlock
  Many2736_5: {
    DDL::Bool r0 = DDL::Bool{Many2736_5_ra1u < DDL::UInt<64>{UINT64_C(1)}};
    if (r0.getValue()) {
      Many2736_3_ra0o = Many2736_5_ra0o;
      Many2736_3_ra1u = Many2736_5_ra1u;
      Many2736_3_ra2o = Many2736_5_ra2o;
      goto Many2736_3;
    } else {
      Many2736_4_ra1o = Many2736_5_ra0o;
      Many2736_4_ra0o = Many2736_5_ra2o;
      goto Many2736_4;
    }
  }
}
bool parser_Many_2741(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::Integer>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::UInt<64> a2, DDL::Builder<DDL::Integer> a3) {
  
// Parameters for L_0_Many2741
  DDL::Input Many2741_0_ra3o;
  DDL::UInt<64> Many2741_0_ra0u;
  DDL::Builder<DDL::Integer> Many2741_0_ra1o;
  DDL::Maybe<DDL::Integer> Many2741_0_ra2o;
  
// Parameters for L_1_Many2741
  DDL::Input Many2741_1_ra1o;
  DDL::Builder<DDL::Integer> Many2741_1_ra0o;
  
// Parameters for L_2_Many2741
  DDL::Maybe<DDL::Integer> Many2741_2_ra0o;
  DDL::Input Many2741_2_ra2o;
  DDL::Builder<DDL::Integer> Many2741_2_ra1o;
  DDL::UInt<64> Many2741_2_ra3u;
  
// Parameters for L_4_Many2741
  DDL::Input Many2741_4_ra0o;
  DDL::Builder<DDL::Integer> Many2741_4_ra1o;
  DDL::UInt<64> Many2741_4_ra2u;
  
// Parameters for L_5_Many2741
  DDL::Integer Many2741_5_ra0o;
  DDL::Input Many2741_5_ra1o;
  DDL::Builder<DDL::Integer> Many2741_5_ra2o;
  DDL::UInt<64> Many2741_5_ra3u;
  
// Parameters for L_6_Many2741
  DDL::Input Many2741_6_ra0o;
  DDL::Builder<DDL::Integer> Many2741_6_ra1o;
  DDL::UInt<64> Many2741_6_ra2u;
  
// Parameters for L_7_Many2741
  DDL::Input Many2741_7_ra1o;
  DDL::Builder<DDL::Integer> Many2741_7_ra0o;
  
// Parameters for L_8_Many2741
  DDL::Input Many2741_8_ra0o;
  DDL::UInt<64> Many2741_8_ra1u;
  DDL::Builder<DDL::Integer> Many2741_8_ra2o;
  Many2741_8_ra0o = a1;
  Many2741_8_ra1u = a2;
  Many2741_8_ra2o = a3;
  goto Many2741_8;
  // NormalBlock
  Many2741_0: {
    DDL::UInt<64> r0 = Many2741_0_ra0u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Integer r1 = Many2741_0_ra2o.getValue();
    Many2741_0_ra2o.free();
    DDL::Builder<DDL::Integer> r2 = DDL::Builder<DDL::Integer>(Many2741_0_ra1o,
                                                               r1);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:146:33--146:52:Many_2741",
                true);
    Many2741_8_ra0o = Many2741_0_ra3o;
    Many2741_8_ra1u = r0;
    Many2741_8_ra2o = r2;
    goto Many2741_8;
  }
  // NormalBlock
  Many2741_1: {
    p.popDebug();
    *_result = Many2741_1_ra0o;
    *_result_input = Many2741_1_ra1o;
    return true;
  }
  // NormalBlock
  Many2741_2: {
    if (Many2741_2_ra0o.isJust()) {
      Many2741_0_ra3o = Many2741_2_ra2o;
      Many2741_0_ra0u = Many2741_2_ra3u;
      Many2741_0_ra1o = Many2741_2_ra1o;
      Many2741_0_ra2o = Many2741_2_ra0o;
      goto Many2741_0;
    } else {
      Many2741_2_ra0o.free();
      Many2741_1_ra1o = Many2741_2_ra2o;
      Many2741_1_ra0o = Many2741_2_ra1o;
      goto Many2741_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2741_4: {
    Many2741_2_ra0o = (DDL::Maybe<DDL::Integer>());
    Many2741_2_ra2o = Many2741_4_ra0o;
    Many2741_2_ra1o = Many2741_4_ra1o;
    Many2741_2_ra3u = Many2741_4_ra2u;
    goto Many2741_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2741_5: {
    DDL::Maybe<DDL::Integer> r0 = DDL::Maybe<DDL::Integer>(Many2741_5_ra0o);
    Many2741_2_ra0o = r0;
    Many2741_2_ra2o = Many2741_5_ra1o;
    Many2741_2_ra1o = Many2741_5_ra2o;
    Many2741_2_ra3u = Many2741_5_ra3u;
    goto Many2741_2;
  }
  // NormalBlock
  Many2741_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:146:45--146:52:OctDigit",
                false);
    Many2741_6_ra0o.copy();
    Many2741_6_ra1o.copy();
    if (parser_OctDigit(p, &Many2741_5_ra0o, &Many2741_5_ra1o,
                        Many2741_6_ra0o)) {
      Many2741_6_ra0o.free();
      Many2741_6_ra1o.free();
      Many2741_5_ra2o = Many2741_6_ra1o;
      Many2741_5_ra3u = Many2741_6_ra2u;
      goto Many2741_5;
    } else {
      Many2741_6_ra1o.free();
      Many2741_4_ra0o = Many2741_6_ra0o;
      Many2741_4_ra1o = Many2741_6_ra1o;
      Many2741_4_ra2u = Many2741_6_ra2u;
      goto Many2741_4;
    }
  }
  // NormalBlock
  Many2741_7: {
    p.popDebug();
    *_result = Many2741_7_ra0o;
    *_result_input = Many2741_7_ra1o;
    return true;
  }
  // NormalBlock
  Many2741_8: {
    DDL::UInt<64> r0 = DDL::UInt<64>{UINT64_C(3)} - DDL::UInt<64>{UINT64_C(1)};
    DDL::Bool r1 = DDL::Bool{Many2741_8_ra1u < r0};
    if (r1.getValue()) {
      Many2741_6_ra0o = Many2741_8_ra0o;
      Many2741_6_ra1o = Many2741_8_ra2o;
      Many2741_6_ra2u = Many2741_8_ra1u;
      goto Many2741_6;
    } else {
      Many2741_7_ra1o = Many2741_8_ra0o;
      Many2741_7_ra0o = Many2741_8_ra2o;
      goto Many2741_7;
    }
  }
}
bool parser_StringNumEsc(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                         DDL::Input a1) {
  
// Parameters for L_0_StringNumEsc2518
  DDL::Integer StringNumEsc2518_0_ra0o;
  DDL::Input StringNumEsc2518_0_ra1o;
  
// Parameters for L_2_StringNumEsc2518
  DDL::Input StringNumEsc2518_2_ra0o;
  
// Parameters for L_4_StringNumEsc2518
  DDL::Builder<DDL::Integer> StringNumEsc2518_4_ra0o;
  DDL::Input StringNumEsc2518_4_ra1o;
  
// Parameters for L_6_StringNumEsc2518
  DDL::Builder<DDL::Integer> StringNumEsc2518_6_ra0o;
  DDL::Input StringNumEsc2518_6_ra1o;
  
// Parameters for L_7_StringNumEsc2518
  DDL::Input StringNumEsc2518_7_ra0o;
  
// Parameters for L_8_StringNumEsc2518
  DDL::Input StringNumEsc2518_8_ra0o;
  StringNumEsc2518_8_ra0o = a1;
  goto StringNumEsc2518_8;
  // ReturnBlock RetPure
  StringNumEsc2518_0: {
    DDL::UInt<8> r0 = DDL::integer_to_uint<8>(StringNumEsc2518_0_ra0o);
    StringNumEsc2518_0_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{r0};
    p.popDebug();
    *_result = r1;
    *_result_input = StringNumEsc2518_0_ra1o;
    return true;
  }
  // NormalBlock
  StringNumEsc2518_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(109UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(98UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:146:33--146:52",
               StringNumEsc2518_2_ra0o, r0);
    StringNumEsc2518_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  StringNumEsc2518_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  StringNumEsc2518_4: {
    DDL::Array<DDL::Integer> r0 = DDL::Array<DDL::Integer>(StringNumEsc2518_4_ra0o);
    DDL::Integer r1 = DDL::Integer("8");
    StringNumEsc2518_0_ra0o = parser_numBase_2507(r1, r0);
    StringNumEsc2518_0_ra1o = StringNumEsc2518_4_ra1o;
    goto StringNumEsc2518_0;
  }
  // ReturnBlock (RetNo NoCapture)
  StringNumEsc2518_5: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  StringNumEsc2518_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:146:33--146:52:Many_2741",
                false);
    if (parser_Many_2741(p, &StringNumEsc2518_4_ra0o,
                         &StringNumEsc2518_4_ra1o, StringNumEsc2518_6_ra1o,
                         DDL::UInt<64>{UINT64_C(0)}, StringNumEsc2518_6_ra0o)) {
      goto StringNumEsc2518_4;
    } else {
      goto StringNumEsc2518_3;
    }
  }
  // NormalBlock
  StringNumEsc2518_7: {
    DDL::Builder<DDL::Integer> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:146:33--146:52:Many_2736",
                false);
    if (parser_Many_2736(p, &StringNumEsc2518_6_ra0o,
                         &StringNumEsc2518_6_ra1o, StringNumEsc2518_7_ra0o,
                         DDL::UInt<64>{UINT64_C(0)}, r0)) {
      goto StringNumEsc2518_6;
    } else {
      goto StringNumEsc2518_5;
    }
  }
  // NormalBlock
  StringNumEsc2518_8: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<64>{UINT64_C(3)} < DDL::UInt<64>{UINT64_C(1)}};
    if (r0.getValue()) {
      StringNumEsc2518_2_ra0o = StringNumEsc2518_8_ra0o;
      goto StringNumEsc2518_2;
    } else {
      StringNumEsc2518_7_ra0o = StringNumEsc2518_8_ra0o;
      goto StringNumEsc2518_7;
    }
  }
}
bool parser_When_2519(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Array<DDL::UInt<8>> a2) {
  
// Parameters for L_1_When2519
  DDL::Input When2519_1_ra0o;
  
// Parameters for L_3_When2519
  DDL::Input When2519_3_ra0o;
  DDL::UInt<8> When2519_3_ra1u;
  DDL::Array<DDL::UInt<8>> When2519_3_ra2o;
  
// Parameters for L_4_When2519
  DDL::Input When2519_4_ra0o;
  
// Parameters for L_5_When2519
  DDL::Input When2519_5_ra1o;
  DDL::Input When2519_5_ra0o;
  DDL::Array<DDL::UInt<8>> When2519_5_ra2o;
  
// Parameters for L_6_When2519
  DDL::Input When2519_6_ra0o;
  DDL::Array<DDL::UInt<8>> When2519_6_ra1o;
  When2519_6_ra0o = a1;
  When2519_6_ra1o = a2;
  goto When2519_6;
  // NormalBlock
  When2519_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27",
               When2519_1_ra0o, r0);
    When2519_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  When2519_3: {
    DDL::Input r0 = When2519_3_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = When2519_3_ra2o;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  When2519_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27",
               When2519_4_ra0o, r0);
    When2519_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  When2519_5: {
    DDL::UInt<8> r0 = DDL::UInt<8>(When2519_5_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(110)} == r0};
    if (r1.getValue()) {
      When2519_5_ra1o.free();
      When2519_3_ra0o = When2519_5_ra0o;
      When2519_3_ra1u = r0;
      When2519_3_ra2o = When2519_5_ra2o;
      goto When2519_3;
    } else {
      When2519_5_ra0o.free();
      When2519_5_ra2o.free();
      When2519_4_ra0o = When2519_5_ra1o;
      goto When2519_4;
    }
  }
  // NormalBlock
  When2519_6: {
    DDL::Bool r0 = When2519_6_ra0o.length() == 0;
    When2519_6_ra0o.copy();
    if (r0.getValue()) {
      When2519_6_ra1o.free();
      When2519_6_ra0o.free();
      When2519_1_ra0o = When2519_6_ra0o;
      goto When2519_1;
    } else {
      When2519_5_ra1o = When2519_6_ra0o;
      When2519_5_ra0o = When2519_6_ra0o;
      When2519_5_ra2o = When2519_6_ra1o;
      goto When2519_5;
    }
  }
}
bool parser_When_2520(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Array<DDL::UInt<8>> a2) {
  
// Parameters for L_1_When2520
  DDL::Input When2520_1_ra0o;
  
// Parameters for L_3_When2520
  DDL::Input When2520_3_ra0o;
  DDL::UInt<8> When2520_3_ra1u;
  DDL::Array<DDL::UInt<8>> When2520_3_ra2o;
  
// Parameters for L_4_When2520
  DDL::Input When2520_4_ra0o;
  
// Parameters for L_5_When2520
  DDL::Input When2520_5_ra1o;
  DDL::Input When2520_5_ra0o;
  DDL::Array<DDL::UInt<8>> When2520_5_ra2o;
  
// Parameters for L_6_When2520
  DDL::Input When2520_6_ra0o;
  DDL::Array<DDL::UInt<8>> When2520_6_ra1o;
  When2520_6_ra0o = a1;
  When2520_6_ra1o = a2;
  goto When2520_6;
  // NormalBlock
  When2520_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27",
               When2520_1_ra0o, r0);
    When2520_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  When2520_3: {
    DDL::Input r0 = When2520_3_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = When2520_3_ra2o;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  When2520_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27",
               When2520_4_ra0o, r0);
    When2520_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  When2520_5: {
    DDL::UInt<8> r0 = DDL::UInt<8>(When2520_5_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(114)} == r0};
    if (r1.getValue()) {
      When2520_5_ra1o.free();
      When2520_3_ra0o = When2520_5_ra0o;
      When2520_3_ra1u = r0;
      When2520_3_ra2o = When2520_5_ra2o;
      goto When2520_3;
    } else {
      When2520_5_ra0o.free();
      When2520_5_ra2o.free();
      When2520_4_ra0o = When2520_5_ra1o;
      goto When2520_4;
    }
  }
  // NormalBlock
  When2520_6: {
    DDL::Bool r0 = When2520_6_ra0o.length() == 0;
    When2520_6_ra0o.copy();
    if (r0.getValue()) {
      When2520_6_ra1o.free();
      When2520_6_ra0o.free();
      When2520_1_ra0o = When2520_6_ra0o;
      goto When2520_1;
    } else {
      When2520_5_ra1o = When2520_6_ra0o;
      When2520_5_ra0o = When2520_6_ra0o;
      When2520_5_ra2o = When2520_6_ra1o;
      goto When2520_5;
    }
  }
}
bool parser_When_2521(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Array<DDL::UInt<8>> a2) {
  
// Parameters for L_1_When2521
  DDL::Input When2521_1_ra0o;
  
// Parameters for L_3_When2521
  DDL::Input When2521_3_ra0o;
  DDL::UInt<8> When2521_3_ra1u;
  DDL::Array<DDL::UInt<8>> When2521_3_ra2o;
  
// Parameters for L_4_When2521
  DDL::Input When2521_4_ra0o;
  
// Parameters for L_5_When2521
  DDL::Input When2521_5_ra1o;
  DDL::Input When2521_5_ra0o;
  DDL::Array<DDL::UInt<8>> When2521_5_ra2o;
  
// Parameters for L_6_When2521
  DDL::Input When2521_6_ra0o;
  DDL::Array<DDL::UInt<8>> When2521_6_ra1o;
  When2521_6_ra0o = a1;
  When2521_6_ra1o = a2;
  goto When2521_6;
  // NormalBlock
  When2521_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27",
               When2521_1_ra0o, r0);
    When2521_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  When2521_3: {
    DDL::Input r0 = When2521_3_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = When2521_3_ra2o;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  When2521_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27",
               When2521_4_ra0o, r0);
    When2521_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  When2521_5: {
    DDL::UInt<8> r0 = DDL::UInt<8>(When2521_5_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(116)} == r0};
    if (r1.getValue()) {
      When2521_5_ra1o.free();
      When2521_3_ra0o = When2521_5_ra0o;
      When2521_3_ra1u = r0;
      When2521_3_ra2o = When2521_5_ra2o;
      goto When2521_3;
    } else {
      When2521_5_ra0o.free();
      When2521_5_ra2o.free();
      When2521_4_ra0o = When2521_5_ra1o;
      goto When2521_4;
    }
  }
  // NormalBlock
  When2521_6: {
    DDL::Bool r0 = When2521_6_ra0o.length() == 0;
    When2521_6_ra0o.copy();
    if (r0.getValue()) {
      When2521_6_ra1o.free();
      When2521_6_ra0o.free();
      When2521_1_ra0o = When2521_6_ra0o;
      goto When2521_1;
    } else {
      When2521_5_ra1o = When2521_6_ra0o;
      When2521_5_ra0o = When2521_6_ra0o;
      When2521_5_ra2o = When2521_6_ra1o;
      goto When2521_5;
    }
  }
}
bool parser_When_2522(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Array<DDL::UInt<8>> a2) {
  
// Parameters for L_1_When2522
  DDL::Input When2522_1_ra0o;
  
// Parameters for L_3_When2522
  DDL::Input When2522_3_ra0o;
  DDL::UInt<8> When2522_3_ra1u;
  DDL::Array<DDL::UInt<8>> When2522_3_ra2o;
  
// Parameters for L_4_When2522
  DDL::Input When2522_4_ra0o;
  
// Parameters for L_5_When2522
  DDL::Input When2522_5_ra1o;
  DDL::Input When2522_5_ra0o;
  DDL::Array<DDL::UInt<8>> When2522_5_ra2o;
  
// Parameters for L_6_When2522
  DDL::Input When2522_6_ra0o;
  DDL::Array<DDL::UInt<8>> When2522_6_ra1o;
  When2522_6_ra0o = a1;
  When2522_6_ra1o = a2;
  goto When2522_6;
  // NormalBlock
  When2522_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27",
               When2522_1_ra0o, r0);
    When2522_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  When2522_3: {
    DDL::Input r0 = When2522_3_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = When2522_3_ra2o;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  When2522_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27",
               When2522_4_ra0o, r0);
    When2522_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  When2522_5: {
    DDL::UInt<8> r0 = DDL::UInt<8>(When2522_5_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(98)} == r0};
    if (r1.getValue()) {
      When2522_5_ra1o.free();
      When2522_3_ra0o = When2522_5_ra0o;
      When2522_3_ra1u = r0;
      When2522_3_ra2o = When2522_5_ra2o;
      goto When2522_3;
    } else {
      When2522_5_ra0o.free();
      When2522_5_ra2o.free();
      When2522_4_ra0o = When2522_5_ra1o;
      goto When2522_4;
    }
  }
  // NormalBlock
  When2522_6: {
    DDL::Bool r0 = When2522_6_ra0o.length() == 0;
    When2522_6_ra0o.copy();
    if (r0.getValue()) {
      When2522_6_ra1o.free();
      When2522_6_ra0o.free();
      When2522_1_ra0o = When2522_6_ra0o;
      goto When2522_1;
    } else {
      When2522_5_ra1o = When2522_6_ra0o;
      When2522_5_ra0o = When2522_6_ra0o;
      When2522_5_ra2o = When2522_6_ra1o;
      goto When2522_5;
    }
  }
}
bool parser_When_2523(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Array<DDL::UInt<8>> a2) {
  
// Parameters for L_1_When2523
  DDL::Input When2523_1_ra0o;
  
// Parameters for L_3_When2523
  DDL::Input When2523_3_ra0o;
  DDL::UInt<8> When2523_3_ra1u;
  DDL::Array<DDL::UInt<8>> When2523_3_ra2o;
  
// Parameters for L_4_When2523
  DDL::Input When2523_4_ra0o;
  
// Parameters for L_5_When2523
  DDL::Input When2523_5_ra1o;
  DDL::Input When2523_5_ra0o;
  DDL::Array<DDL::UInt<8>> When2523_5_ra2o;
  
// Parameters for L_6_When2523
  DDL::Input When2523_6_ra0o;
  DDL::Array<DDL::UInt<8>> When2523_6_ra1o;
  When2523_6_ra0o = a1;
  When2523_6_ra1o = a2;
  goto When2523_6;
  // NormalBlock
  When2523_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27",
               When2523_1_ra0o, r0);
    When2523_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  When2523_3: {
    DDL::Input r0 = When2523_3_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = When2523_3_ra2o;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  When2523_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27",
               When2523_4_ra0o, r0);
    When2523_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  When2523_5: {
    DDL::UInt<8> r0 = DDL::UInt<8>(When2523_5_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(102)} == r0};
    if (r1.getValue()) {
      When2523_5_ra1o.free();
      When2523_3_ra0o = When2523_5_ra0o;
      When2523_3_ra1u = r0;
      When2523_3_ra2o = When2523_5_ra2o;
      goto When2523_3;
    } else {
      When2523_5_ra0o.free();
      When2523_5_ra2o.free();
      When2523_4_ra0o = When2523_5_ra1o;
      goto When2523_4;
    }
  }
  // NormalBlock
  When2523_6: {
    DDL::Bool r0 = When2523_6_ra0o.length() == 0;
    When2523_6_ra0o.copy();
    if (r0.getValue()) {
      When2523_6_ra1o.free();
      When2523_6_ra0o.free();
      When2523_1_ra0o = When2523_6_ra0o;
      goto When2523_1;
    } else {
      When2523_5_ra1o = When2523_6_ra0o;
      When2523_5_ra0o = When2523_6_ra0o;
      When2523_5_ra2o = When2523_6_ra1o;
      goto When2523_5;
    }
  }
}
bool parser_When_2524(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Array<DDL::UInt<8>> a2) {
  
// Parameters for L_1_When2524
  DDL::Unit When2524_1_ra0u;
  DDL::Input When2524_1_ra1o;
  DDL::Array<DDL::UInt<8>> When2524_1_ra2o;
  
// Parameters for L_2_When2524
  DDL::Input When2524_2_ra0o;
  DDL::Array<DDL::UInt<8>> When2524_2_ra1o;
  When2524_2_ra0o = a1;
  When2524_2_ra1o = a2;
  goto When2524_2;
  // ReturnBlock (RetNo NoCapture)
  When2524_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  When2524_1: {
    p.popDebug();
    *_result = When2524_1_ra2o;
    *_result_input = When2524_1_ra1o;
    return true;
  }
  // NormalBlock
  When2524_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:70:27--70:27:EOL",
                false);
    if (parser_EOL(p, &When2524_1_ra0u, &When2524_1_ra1o,
                   When2524_2_ra0o)) {
      When2524_1_ra2o = When2524_2_ra1o;
      goto When2524_1;
    } else {
      When2524_2_ra1o.free();
      goto When2524_0;
    }
  }
}
bool parser_StringEsc(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1) {
  
// Parameters for L_0_StringEsc2525
  DDL::Input StringEsc2525_0_ra0o;
  
// Parameters for L_1_StringEsc2525
  DDL::Array<DDL::UInt<8>> StringEsc2525_1_ra0o;
  DDL::Input StringEsc2525_1_ra1o;
  
// Parameters for L_4_StringEsc2525
  DDL::Array<DDL::UInt<8>> StringEsc2525_4_ra0o;
  DDL::Input StringEsc2525_4_ra1o;
  
// Parameters for L_5_StringEsc2525
  DDL::Input StringEsc2525_5_ra0o;
  DDL::Input StringEsc2525_5_ra1o;
  
// Parameters for L_8_StringEsc2525
  DDL::Array<DDL::UInt<8>> StringEsc2525_8_ra0o;
  DDL::Input StringEsc2525_8_ra1o;
  
// Parameters for L_9_StringEsc2525
  DDL::Input StringEsc2525_9_ra0o;
  DDL::Input StringEsc2525_9_ra1o;
  
// Parameters for L_12_StringEsc2525
  DDL::Array<DDL::UInt<8>> StringEsc2525_12_ra0o;
  DDL::Input StringEsc2525_12_ra1o;
  
// Parameters for L_13_StringEsc2525
  DDL::Input StringEsc2525_13_ra0o;
  DDL::Input StringEsc2525_13_ra1o;
  
// Parameters for L_14_StringEsc2525
  DDL::Input StringEsc2525_14_ra0o;
  
// Parameters for L_15_StringEsc2525
  DDL::Array<DDL::UInt<8>> StringEsc2525_15_ra0o;
  DDL::Input StringEsc2525_15_ra1o;
  
// Parameters for L_16_StringEsc2525
  DDL::Input StringEsc2525_16_ra0o;
  
// Parameters for L_17_StringEsc2525
  DDL::Array<DDL::UInt<8>> StringEsc2525_17_ra0o;
  DDL::Input StringEsc2525_17_ra1o;
  
// Parameters for L_18_StringEsc2525
  DDL::Input StringEsc2525_18_ra0o;
  
// Parameters for L_19_StringEsc2525
  DDL::Array<DDL::UInt<8>> StringEsc2525_19_ra0o;
  DDL::Input StringEsc2525_19_ra1o;
  
// Parameters for L_20_StringEsc2525
  DDL::Input StringEsc2525_20_ra0o;
  
// Parameters for L_21_StringEsc2525
  DDL::Array<DDL::UInt<8>> StringEsc2525_21_ra0o;
  DDL::Input StringEsc2525_21_ra1o;
  
// Parameters for L_22_StringEsc2525
  DDL::Input StringEsc2525_22_ra0o;
  
// Parameters for L_23_StringEsc2525
  DDL::Array<DDL::UInt<8>> StringEsc2525_23_ra0o;
  DDL::Input StringEsc2525_23_ra1o;
  
// Parameters for L_25_StringEsc2525
  DDL::Input StringEsc2525_25_ra0o;
  
// Parameters for L_27_StringEsc2525
  DDL::Input StringEsc2525_27_ra0o;
  
// Parameters for L_28_StringEsc2525
  DDL::Input StringEsc2525_28_ra0o;
  
// Parameters for L_29_StringEsc2525
  DDL::Input StringEsc2525_29_ra1o;
  DDL::Input StringEsc2525_29_ra0o;
  
// Parameters for L_30_StringEsc2525
  DDL::Input StringEsc2525_30_ra0o;
  StringEsc2525_30_ra0o = a1;
  goto StringEsc2525_30;
  // ReturnBlock (RetNo NoCapture)
  StringEsc2525_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:144:7--144:18:StringNumEsc",
                true);
    return parser_StringNumEsc(p, _result, _result_input,
                               StringEsc2525_0_ra0o);
  }
  // ReturnBlock (RetYes NoCapture)
  StringEsc2525_1: {
    p.popDebug();
    *_result = StringEsc2525_1_ra0o;
    *_result_input = StringEsc2525_1_ra1o;
    return true;
  }
  // NormalBlock
  StringEsc2525_4: {
    DDL::UInt<64> r0 = DDL::UInt<64>{StringEsc2525_4_ra0o.size().rep()};
    DDL::Input r1 = StringEsc2525_4_ra1o.iDrop(DDL::Size::from(r0.rep()));
    p.popDebug();
    *_result = StringEsc2525_4_ra0o;
    *_result_input = r1;
    return true;
  }
  // NormalBlock
  StringEsc2525_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(92UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:142:7--142:16",
               StringEsc2525_5_ra0o, r3);
    StringEsc2525_5_ra0o.free();
    r3.free();
    DDL::Array<DDL::UInt<8>> r4 = DDL::Array<DDL::UInt<8>>{};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:143:7--143:22:When_2524",
                false);
    StringEsc2525_5_ra1o.copy();
    if (parser_When_2524(p, &StringEsc2525_1_ra0o,
                         &StringEsc2525_1_ra1o, StringEsc2525_5_ra1o, r4)) {
      StringEsc2525_5_ra1o.free();
      goto StringEsc2525_1;
    } else {
      StringEsc2525_0_ra0o = StringEsc2525_5_ra1o;
      goto StringEsc2525_0;
    }
  }
  // NormalBlock
  StringEsc2525_8: {
    DDL::UInt<64> r0 = DDL::UInt<64>{StringEsc2525_8_ra0o.size().rep()};
    DDL::Input r1 = StringEsc2525_8_ra1o.iDrop(DDL::Size::from(r0.rep()));
    p.popDebug();
    *_result = StringEsc2525_8_ra0o;
    *_result_input = r1;
    return true;
  }
  // NormalBlock
  StringEsc2525_9: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(41UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:141:7--141:15",
               StringEsc2525_9_ra0o, r3);
    StringEsc2525_9_ra0o.free();
    r3.free();
    DDL::Array<DDL::UInt<8>> r4 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(92UL)};
    DDL::Bool r5 = StringEsc2525_9_ra1o.hasPrefix(r4);
    StringEsc2525_9_ra1o.copy();
    if (r5.getValue()) {
      StringEsc2525_9_ra1o.free();
      StringEsc2525_4_ra0o = r4;
      StringEsc2525_4_ra1o = StringEsc2525_9_ra1o;
      goto StringEsc2525_4;
    } else {
      r4.free();
      StringEsc2525_5_ra0o = StringEsc2525_9_ra1o;
      StringEsc2525_5_ra1o = StringEsc2525_9_ra1o;
      goto StringEsc2525_5;
    }
  }
  // NormalBlock
  StringEsc2525_12: {
    DDL::UInt<64> r0 = DDL::UInt<64>{StringEsc2525_12_ra0o.size().rep()};
    DDL::Input r1 = StringEsc2525_12_ra1o.iDrop(DDL::Size::from(r0.rep()));
    p.popDebug();
    *_result = StringEsc2525_12_ra0o;
    *_result_input = r1;
    return true;
  }
  // NormalBlock
  StringEsc2525_13: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(40UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:140:7--140:15",
               StringEsc2525_13_ra0o, r3);
    StringEsc2525_13_ra0o.free();
    r3.free();
    DDL::Array<DDL::UInt<8>> r4 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(41UL)};
    DDL::Bool r5 = StringEsc2525_13_ra1o.hasPrefix(r4);
    StringEsc2525_13_ra1o.copy();
    if (r5.getValue()) {
      StringEsc2525_13_ra1o.free();
      StringEsc2525_8_ra0o = r4;
      StringEsc2525_8_ra1o = StringEsc2525_13_ra1o;
      goto StringEsc2525_8;
    } else {
      r4.free();
      StringEsc2525_9_ra0o = StringEsc2525_13_ra1o;
      StringEsc2525_9_ra1o = StringEsc2525_13_ra1o;
      goto StringEsc2525_9;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  StringEsc2525_14: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(40UL)};
    DDL::Bool r1 = StringEsc2525_14_ra0o.hasPrefix(r0);
    StringEsc2525_14_ra0o.copy();
    if (r1.getValue()) {
      StringEsc2525_14_ra0o.free();
      StringEsc2525_12_ra0o = r0;
      StringEsc2525_12_ra1o = StringEsc2525_14_ra0o;
      goto StringEsc2525_12;
    } else {
      r0.free();
      StringEsc2525_13_ra0o = StringEsc2525_14_ra0o;
      StringEsc2525_13_ra1o = StringEsc2525_14_ra0o;
      goto StringEsc2525_13;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  StringEsc2525_15: {
    p.popDebug();
    *_result = StringEsc2525_15_ra0o;
    *_result_input = StringEsc2525_15_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  StringEsc2525_16: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(12UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:139:7--139:25:When_2523",
                false);
    StringEsc2525_16_ra0o.copy();
    if (parser_When_2523(p, &StringEsc2525_15_ra0o,
                         &StringEsc2525_15_ra1o, StringEsc2525_16_ra0o, r0)) {
      StringEsc2525_16_ra0o.free();
      goto StringEsc2525_15;
    } else {
      StringEsc2525_14_ra0o = StringEsc2525_16_ra0o;
      goto StringEsc2525_14;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  StringEsc2525_17: {
    p.popDebug();
    *_result = StringEsc2525_17_ra0o;
    *_result_input = StringEsc2525_17_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  StringEsc2525_18: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(8UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:138:7--138:24:When_2522",
                false);
    StringEsc2525_18_ra0o.copy();
    if (parser_When_2522(p, &StringEsc2525_17_ra0o,
                         &StringEsc2525_17_ra1o, StringEsc2525_18_ra0o, r0)) {
      StringEsc2525_18_ra0o.free();
      goto StringEsc2525_17;
    } else {
      StringEsc2525_16_ra0o = StringEsc2525_18_ra0o;
      goto StringEsc2525_16;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  StringEsc2525_19: {
    p.popDebug();
    *_result = StringEsc2525_19_ra0o;
    *_result_input = StringEsc2525_19_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  StringEsc2525_20: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(9UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:137:7--137:24:When_2521",
                false);
    StringEsc2525_20_ra0o.copy();
    if (parser_When_2521(p, &StringEsc2525_19_ra0o,
                         &StringEsc2525_19_ra1o, StringEsc2525_20_ra0o, r0)) {
      StringEsc2525_20_ra0o.free();
      goto StringEsc2525_19;
    } else {
      StringEsc2525_18_ra0o = StringEsc2525_20_ra0o;
      goto StringEsc2525_18;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  StringEsc2525_21: {
    p.popDebug();
    *_result = StringEsc2525_21_ra0o;
    *_result_input = StringEsc2525_21_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  StringEsc2525_22: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(13UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:136:7--136:24:When_2520",
                false);
    StringEsc2525_22_ra0o.copy();
    if (parser_When_2520(p, &StringEsc2525_21_ra0o,
                         &StringEsc2525_21_ra1o, StringEsc2525_22_ra0o, r0)) {
      StringEsc2525_22_ra0o.free();
      goto StringEsc2525_21;
    } else {
      StringEsc2525_20_ra0o = StringEsc2525_22_ra0o;
      goto StringEsc2525_20;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  StringEsc2525_23: {
    p.popDebug();
    *_result = StringEsc2525_23_ra0o;
    *_result_input = StringEsc2525_23_ra1o;
    return true;
  }
  // NormalBlock
  StringEsc2525_25: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:133:5--133:11",
               StringEsc2525_25_ra0o, r0);
    StringEsc2525_25_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  StringEsc2525_27: {
    DDL::Input r0 = StringEsc2525_27_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(10UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:135:7--135:24:When_2519",
                false);
    r0.copy();
    if (parser_When_2519(p, &StringEsc2525_23_ra0o,
                         &StringEsc2525_23_ra1o, r0, r1)) {
      r0.free();
      goto StringEsc2525_23;
    } else {
      StringEsc2525_22_ra0o = r0;
      goto StringEsc2525_22;
    }
  }
  // NormalBlock
  StringEsc2525_28: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:133:5--133:11",
               StringEsc2525_28_ra0o, r0);
    StringEsc2525_28_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  StringEsc2525_29: {
    DDL::UInt<8> r0 = DDL::UInt<8>(StringEsc2525_29_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(92)} == r0};
    if (r1.getValue()) {
      StringEsc2525_29_ra1o.free();
      StringEsc2525_27_ra0o = StringEsc2525_29_ra0o;
      goto StringEsc2525_27;
    } else {
      StringEsc2525_29_ra0o.free();
      StringEsc2525_28_ra0o = StringEsc2525_29_ra1o;
      goto StringEsc2525_28;
    }
  }
  // NormalBlock
  StringEsc2525_30: {
    DDL::Bool r0 = StringEsc2525_30_ra0o.length() == 0;
    StringEsc2525_30_ra0o.copy();
    if (r0.getValue()) {
      StringEsc2525_30_ra0o.free();
      StringEsc2525_25_ra0o = StringEsc2525_30_ra0o;
      goto StringEsc2525_25;
    } else {
      StringEsc2525_29_ra1o = StringEsc2525_30_ra0o;
      StringEsc2525_29_ra0o = StringEsc2525_30_ra0o;
      goto StringEsc2525_29;
    }
  }
}
bool parser_Many_2773(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::UInt<64> a2, DDL::Builder<DDL::UInt<8>> a3) {
  
// Parameters for L_2_Many2773
  DDL::Input Many2773_2_ra0o;
  
// Parameters for L_4_Many2773
  DDL::Input Many2773_4_ra0o;
  DDL::Input Many2773_4_ra1o;
  
// Parameters for L_7_Many2773
  DDL::Input Many2773_7_ra0o;
  DDL::UInt<8> Many2773_7_ra1u;
  DDL::UInt<64> Many2773_7_ra2u;
  DDL::Builder<DDL::UInt<8>> Many2773_7_ra3o;
  
// Parameters for L_8_Many2773
  DDL::Input Many2773_8_ra0o;
  DDL::Input Many2773_8_ra1o;
  
// Parameters for L_9_Many2773
  DDL::Input Many2773_9_ra2o;
  DDL::Bool Many2773_9_ra0u;
  DDL::Input Many2773_9_ra1o;
  DDL::Input Many2773_9_ra3o;
  DDL::UInt<8> Many2773_9_ra4u;
  DDL::UInt<64> Many2773_9_ra5u;
  DDL::Builder<DDL::UInt<8>> Many2773_9_ra6o;
  
// Parameters for L_10_Many2773
  DDL::Input Many2773_10_ra5o;
  DDL::Input Many2773_10_ra0o;
  DDL::Input Many2773_10_ra1o;
  DDL::UInt<8> Many2773_10_ra2u;
  DDL::UInt<64> Many2773_10_ra3u;
  DDL::Builder<DDL::UInt<8>> Many2773_10_ra4o;
  
// Parameters for L_11_Many2773
  DDL::Input Many2773_11_ra6o;
  DDL::Bool Many2773_11_ra0u;
  DDL::Input Many2773_11_ra1o;
  DDL::Input Many2773_11_ra2o;
  DDL::UInt<8> Many2773_11_ra3u;
  DDL::UInt<64> Many2773_11_ra4u;
  DDL::Builder<DDL::UInt<8>> Many2773_11_ra5o;
  
// Parameters for L_12_Many2773
  DDL::Input Many2773_12_ra5o;
  DDL::Input Many2773_12_ra0o;
  DDL::Input Many2773_12_ra1o;
  DDL::UInt<8> Many2773_12_ra2u;
  DDL::UInt<64> Many2773_12_ra3u;
  DDL::Builder<DDL::UInt<8>> Many2773_12_ra4o;
  
// Parameters for L_13_Many2773
  DDL::Input Many2773_13_ra5o;
  DDL::UInt<8> Many2773_13_ra0u;
  DDL::Input Many2773_13_ra1o;
  DDL::Input Many2773_13_ra2o;
  DDL::UInt<64> Many2773_13_ra3u;
  DDL::Builder<DDL::UInt<8>> Many2773_13_ra4o;
  
// Parameters for L_14_Many2773
  DDL::Input Many2773_14_ra5o;
  DDL::UInt<8> Many2773_14_ra0u;
  DDL::Input Many2773_14_ra1o;
  DDL::Input Many2773_14_ra2o;
  DDL::UInt<64> Many2773_14_ra3u;
  DDL::Builder<DDL::UInt<8>> Many2773_14_ra4o;
  
// Parameters for L_15_Many2773
  DDL::Input Many2773_15_ra4o;
  DDL::Input Many2773_15_ra0o;
  DDL::Input Many2773_15_ra1o;
  DDL::UInt<64> Many2773_15_ra2u;
  DDL::Builder<DDL::UInt<8>> Many2773_15_ra3o;
  
// Parameters for L_16_Many2773
  DDL::Input Many2773_16_ra0o;
  DDL::UInt<64> Many2773_16_ra1u;
  DDL::Builder<DDL::UInt<8>> Many2773_16_ra2o;
  
// Parameters for L_17_Many2773
  DDL::Input Many2773_17_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2773_17_ra0o;
  
// Parameters for L_18_Many2773
  DDL::Input Many2773_18_ra0o;
  DDL::UInt<64> Many2773_18_ra1u;
  DDL::Builder<DDL::UInt<8>> Many2773_18_ra2o;
  Many2773_18_ra0o = a1;
  Many2773_18_ra1u = a2;
  Many2773_18_ra2o = a3;
  goto Many2773_18;
  // NormalBlock
  Many2773_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many2773_2_ra0o, r0);
    Many2773_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Many2773_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:127:16--127:26",
               Many2773_4_ra0o, r0);
    Many2773_4_ra0o.free();
    r0.free();
    Many2773_2_ra0o = Many2773_4_ra1o;
    goto Many2773_2;
  }
  // NormalBlock
  Many2773_7: {
    DDL::Input r0 = Many2773_7_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::UInt<64> r1 = Many2773_7_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<DDL::UInt<8>> r2 = DDL::Builder<DDL::UInt<8>>(Many2773_7_ra3o,
                                                               Many2773_7_ra1u);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:127:5--127:26:Many_2773",
                true);
    Many2773_18_ra0o = r0;
    Many2773_18_ra1u = r1;
    Many2773_18_ra2o = r2;
    goto Many2773_18;
  }
  // NormalBlock
  Many2773_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:127:16--127:26",
               Many2773_8_ra0o, r0);
    Many2773_8_ra0o.free();
    r0.free();
    Many2773_2_ra0o = Many2773_8_ra1o;
    goto Many2773_2;
  }
  // NormalBlock
  Many2773_9: {
    DDL::Bool r0 = !Many2773_9_ra0u;
    if (r0.getValue()) {
      Many2773_9_ra1o.free();
      Many2773_9_ra2o.free();
      Many2773_7_ra0o = Many2773_9_ra3o;
      Many2773_7_ra1u = Many2773_9_ra4u;
      Many2773_7_ra2u = Many2773_9_ra5u;
      Many2773_7_ra3o = Many2773_9_ra6o;
      goto Many2773_7;
    } else {
      Many2773_9_ra3o.free();
      Many2773_9_ra6o.free();
      Many2773_8_ra0o = Many2773_9_ra2o;
      Many2773_8_ra1o = Many2773_9_ra1o;
      goto Many2773_8;
    }
  }
  // NormalBlock
  Many2773_10: {
    Many2773_9_ra2o = Many2773_10_ra5o;
    Many2773_9_ra0u = DDL::Bool(true);
    Many2773_9_ra1o = Many2773_10_ra0o;
    Many2773_9_ra3o = Many2773_10_ra1o;
    Many2773_9_ra4u = Many2773_10_ra2u;
    Many2773_9_ra5u = Many2773_10_ra3u;
    Many2773_9_ra6o = Many2773_10_ra4o;
    goto Many2773_9;
  }
  // NormalBlock
  Many2773_11: {
    Many2773_9_ra2o = Many2773_11_ra6o;
    Many2773_9_ra0u = Many2773_11_ra0u;
    Many2773_9_ra1o = Many2773_11_ra1o;
    Many2773_9_ra3o = Many2773_11_ra2o;
    Many2773_9_ra4u = Many2773_11_ra3u;
    Many2773_9_ra5u = Many2773_11_ra4u;
    Many2773_9_ra6o = Many2773_11_ra5o;
    goto Many2773_9;
  }
  // NormalBlock
  Many2773_12: {
    Many2773_11_ra6o = Many2773_12_ra5o;
    Many2773_11_ra0u = DDL::Bool(true);
    Many2773_11_ra1o = Many2773_12_ra0o;
    Many2773_11_ra2o = Many2773_12_ra1o;
    Many2773_11_ra3u = Many2773_12_ra2u;
    Many2773_11_ra4u = Many2773_12_ra3u;
    Many2773_11_ra5o = Many2773_12_ra4o;
    goto Many2773_11;
  }
  // NormalBlock
  Many2773_13: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(41)} == Many2773_13_ra0u};
    Many2773_11_ra6o = Many2773_13_ra5o;
    Many2773_11_ra0u = r0;
    Many2773_11_ra1o = Many2773_13_ra1o;
    Many2773_11_ra2o = Many2773_13_ra2o;
    Many2773_11_ra3u = Many2773_13_ra0u;
    Many2773_11_ra4u = Many2773_13_ra3u;
    Many2773_11_ra5o = Many2773_13_ra4o;
    goto Many2773_11;
  }
  // NormalBlock
  Many2773_14: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(40)} == Many2773_14_ra0u};
    if (r0.getValue()) {
      Many2773_12_ra5o = Many2773_14_ra5o;
      Many2773_12_ra0o = Many2773_14_ra1o;
      Many2773_12_ra1o = Many2773_14_ra2o;
      Many2773_12_ra2u = Many2773_14_ra0u;
      Many2773_12_ra3u = Many2773_14_ra3u;
      Many2773_12_ra4o = Many2773_14_ra4o;
      goto Many2773_12;
    } else {
      Many2773_13_ra5o = Many2773_14_ra5o;
      Many2773_13_ra0u = Many2773_14_ra0u;
      Many2773_13_ra1o = Many2773_14_ra1o;
      Many2773_13_ra2o = Many2773_14_ra2o;
      Many2773_13_ra3u = Many2773_14_ra3u;
      Many2773_13_ra4o = Many2773_14_ra4o;
      goto Many2773_13;
    }
  }
  // NormalBlock
  Many2773_15: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Many2773_15_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(92)} == r0};
    if (r1.getValue()) {
      Many2773_10_ra5o = Many2773_15_ra4o;
      Many2773_10_ra0o = Many2773_15_ra1o;
      Many2773_10_ra1o = Many2773_15_ra0o;
      Many2773_10_ra2u = r0;
      Many2773_10_ra3u = Many2773_15_ra2u;
      Many2773_10_ra4o = Many2773_15_ra3o;
      goto Many2773_10;
    } else {
      Many2773_14_ra5o = Many2773_15_ra4o;
      Many2773_14_ra0u = r0;
      Many2773_14_ra1o = Many2773_15_ra1o;
      Many2773_14_ra2o = Many2773_15_ra0o;
      Many2773_14_ra3u = Many2773_15_ra2u;
      Many2773_14_ra4o = Many2773_15_ra3o;
      goto Many2773_14;
    }
  }
  // NormalBlock
  Many2773_16: {
    DDL::Bool r0 = Many2773_16_ra0o.length() == 0;
    Many2773_16_ra0o.copy();
    Many2773_16_ra0o.copy();
    Many2773_16_ra0o.copy();
    if (r0.getValue()) {
      Many2773_16_ra2o.free();
      Many2773_16_ra0o.free();
      Many2773_16_ra0o.free();
      Many2773_4_ra0o = Many2773_16_ra0o;
      Many2773_4_ra1o = Many2773_16_ra0o;
      goto Many2773_4;
    } else {
      Many2773_16_ra0o.free();
      Many2773_15_ra4o = Many2773_16_ra0o;
      Many2773_15_ra0o = Many2773_16_ra0o;
      Many2773_15_ra1o = Many2773_16_ra0o;
      Many2773_15_ra2u = Many2773_16_ra1u;
      Many2773_15_ra3o = Many2773_16_ra2o;
      goto Many2773_15;
    }
  }
  // NormalBlock
  Many2773_17: {
    p.popDebug();
    *_result = Many2773_17_ra0o;
    *_result_input = Many2773_17_ra1o;
    return true;
  }
  // NormalBlock
  Many2773_18: {
    DDL::Bool r0 = DDL::Bool{Many2773_18_ra1u < DDL::UInt<64>{UINT64_C(1)}};
    if (r0.getValue()) {
      Many2773_16_ra0o = Many2773_18_ra0o;
      Many2773_16_ra1u = Many2773_18_ra1u;
      Many2773_16_ra2o = Many2773_18_ra2o;
      goto Many2773_16;
    } else {
      Many2773_17_ra1o = Many2773_18_ra0o;
      Many2773_17_ra0o = Many2773_18_ra2o;
      goto Many2773_17;
    }
  }
}
bool parser_Many_2778(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Builder<DDL::UInt<8>> a2) {
  
// Parameters for L_0_Many2778
  DDL::Input Many2778_0_ra2o;
  DDL::Builder<DDL::UInt<8>> Many2778_0_ra0o;
  DDL::Maybe<DDL::UInt<8>> Many2778_0_ra1u;
  
// Parameters for L_1_Many2778
  DDL::Input Many2778_1_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2778_1_ra0o;
  
// Parameters for L_2_Many2778
  DDL::Maybe<DDL::UInt<8>> Many2778_2_ra0u;
  DDL::Input Many2778_2_ra2o;
  DDL::Builder<DDL::UInt<8>> Many2778_2_ra1o;
  
// Parameters for L_5_Many2778
  DDL::Input Many2778_5_ra0o;
  DDL::Builder<DDL::UInt<8>> Many2778_5_ra1o;
  
// Parameters for L_7_Many2778
  DDL::Input Many2778_7_ra0o;
  DDL::Input Many2778_7_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2778_7_ra2o;
  
// Parameters for L_10_Many2778
  DDL::Input Many2778_10_ra0o;
  DDL::UInt<8> Many2778_10_ra1u;
  DDL::Builder<DDL::UInt<8>> Many2778_10_ra2o;
  
// Parameters for L_11_Many2778
  DDL::Input Many2778_11_ra0o;
  DDL::Input Many2778_11_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2778_11_ra2o;
  
// Parameters for L_12_Many2778
  DDL::Input Many2778_12_ra3o;
  DDL::Bool Many2778_12_ra0u;
  DDL::Input Many2778_12_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2778_12_ra2o;
  DDL::Input Many2778_12_ra4o;
  DDL::UInt<8> Many2778_12_ra5u;
  
// Parameters for L_13_Many2778
  DDL::Input Many2778_13_ra4o;
  DDL::Input Many2778_13_ra0o;
  DDL::Builder<DDL::UInt<8>> Many2778_13_ra1o;
  DDL::Input Many2778_13_ra2o;
  DDL::UInt<8> Many2778_13_ra3u;
  
// Parameters for L_14_Many2778
  DDL::Input Many2778_14_ra5o;
  DDL::Bool Many2778_14_ra0u;
  DDL::Input Many2778_14_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2778_14_ra2o;
  DDL::Input Many2778_14_ra3o;
  DDL::UInt<8> Many2778_14_ra4u;
  
// Parameters for L_15_Many2778
  DDL::Input Many2778_15_ra4o;
  DDL::Input Many2778_15_ra0o;
  DDL::Builder<DDL::UInt<8>> Many2778_15_ra1o;
  DDL::Input Many2778_15_ra2o;
  DDL::UInt<8> Many2778_15_ra3u;
  
// Parameters for L_16_Many2778
  DDL::Input Many2778_16_ra4o;
  DDL::UInt<8> Many2778_16_ra0u;
  DDL::Input Many2778_16_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2778_16_ra2o;
  DDL::Input Many2778_16_ra3o;
  
// Parameters for L_17_Many2778
  DDL::Input Many2778_17_ra4o;
  DDL::UInt<8> Many2778_17_ra0u;
  DDL::Input Many2778_17_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2778_17_ra2o;
  DDL::Input Many2778_17_ra3o;
  
// Parameters for L_18_Many2778
  DDL::Input Many2778_18_ra3o;
  DDL::Input Many2778_18_ra0o;
  DDL::Input Many2778_18_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2778_18_ra2o;
  
// Parameters for L_19_Many2778
  DDL::Input Many2778_19_ra0o;
  DDL::Builder<DDL::UInt<8>> Many2778_19_ra1o;
  Many2778_19_ra0o = a1;
  Many2778_19_ra1o = a2;
  goto Many2778_19;
  // NormalBlock
  Many2778_0: {
    DDL::UInt<8> r0 = Many2778_0_ra1u.getValue();
    DDL::Builder<DDL::UInt<8>> r1 = DDL::Builder<DDL::UInt<8>>(Many2778_0_ra0o,
                                                               r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:127:5--127:26:Many_2778",
                true);
    Many2778_19_ra0o = Many2778_0_ra2o;
    Many2778_19_ra1o = r1;
    goto Many2778_19;
  }
  // NormalBlock
  Many2778_1: {
    p.popDebug();
    *_result = Many2778_1_ra0o;
    *_result_input = Many2778_1_ra1o;
    return true;
  }
  // NormalBlock
  Many2778_2: {
    if (Many2778_2_ra0u.isJust()) {
      Many2778_0_ra2o = Many2778_2_ra2o;
      Many2778_0_ra0o = Many2778_2_ra1o;
      Many2778_0_ra1u = Many2778_2_ra0u;
      goto Many2778_0;
    } else {
      Many2778_1_ra1o = Many2778_2_ra2o;
      Many2778_1_ra0o = Many2778_2_ra1o;
      goto Many2778_1;
    }
  }
  // NormalBlock
  Many2778_5: {
    Many2778_2_ra0u = (DDL::Maybe<DDL::UInt<8>>());
    Many2778_2_ra2o = Many2778_5_ra0o;
    Many2778_2_ra1o = Many2778_5_ra1o;
    goto Many2778_2;
  }
  // NormalBlock
  Many2778_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:127:16--127:26",
               Many2778_7_ra0o, r0);
    Many2778_7_ra0o.free();
    r0.free();
    Many2778_5_ra0o = Many2778_7_ra1o;
    Many2778_5_ra1o = Many2778_7_ra2o;
    goto Many2778_5;
  }
  // NormalBlock
  Many2778_10: {
    DDL::Input r0 = Many2778_10_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Maybe<DDL::UInt<8>> r1 = DDL::Maybe<DDL::UInt<8>>(Many2778_10_ra1u);
    Many2778_2_ra0u = r1;
    Many2778_2_ra2o = r0;
    Many2778_2_ra1o = Many2778_10_ra2o;
    goto Many2778_2;
  }
  // NormalBlock
  Many2778_11: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:127:16--127:26",
               Many2778_11_ra0o, r0);
    Many2778_11_ra0o.free();
    r0.free();
    Many2778_5_ra0o = Many2778_11_ra1o;
    Many2778_5_ra1o = Many2778_11_ra2o;
    goto Many2778_5;
  }
  // NormalBlock
  Many2778_12: {
    DDL::Bool r0 = !Many2778_12_ra0u;
    if (r0.getValue()) {
      Many2778_12_ra1o.free();
      Many2778_12_ra3o.free();
      Many2778_10_ra0o = Many2778_12_ra4o;
      Many2778_10_ra1u = Many2778_12_ra5u;
      Many2778_10_ra2o = Many2778_12_ra2o;
      goto Many2778_10;
    } else {
      Many2778_12_ra4o.free();
      Many2778_11_ra0o = Many2778_12_ra3o;
      Many2778_11_ra1o = Many2778_12_ra1o;
      Many2778_11_ra2o = Many2778_12_ra2o;
      goto Many2778_11;
    }
  }
  // NormalBlock
  Many2778_13: {
    Many2778_12_ra3o = Many2778_13_ra4o;
    Many2778_12_ra0u = DDL::Bool(true);
    Many2778_12_ra1o = Many2778_13_ra0o;
    Many2778_12_ra2o = Many2778_13_ra1o;
    Many2778_12_ra4o = Many2778_13_ra2o;
    Many2778_12_ra5u = Many2778_13_ra3u;
    goto Many2778_12;
  }
  // NormalBlock
  Many2778_14: {
    Many2778_12_ra3o = Many2778_14_ra5o;
    Many2778_12_ra0u = Many2778_14_ra0u;
    Many2778_12_ra1o = Many2778_14_ra1o;
    Many2778_12_ra2o = Many2778_14_ra2o;
    Many2778_12_ra4o = Many2778_14_ra3o;
    Many2778_12_ra5u = Many2778_14_ra4u;
    goto Many2778_12;
  }
  // NormalBlock
  Many2778_15: {
    Many2778_14_ra5o = Many2778_15_ra4o;
    Many2778_14_ra0u = DDL::Bool(true);
    Many2778_14_ra1o = Many2778_15_ra0o;
    Many2778_14_ra2o = Many2778_15_ra1o;
    Many2778_14_ra3o = Many2778_15_ra2o;
    Many2778_14_ra4u = Many2778_15_ra3u;
    goto Many2778_14;
  }
  // NormalBlock
  Many2778_16: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(41)} == Many2778_16_ra0u};
    Many2778_14_ra5o = Many2778_16_ra4o;
    Many2778_14_ra0u = r0;
    Many2778_14_ra1o = Many2778_16_ra1o;
    Many2778_14_ra2o = Many2778_16_ra2o;
    Many2778_14_ra3o = Many2778_16_ra3o;
    Many2778_14_ra4u = Many2778_16_ra0u;
    goto Many2778_14;
  }
  // NormalBlock
  Many2778_17: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(40)} == Many2778_17_ra0u};
    if (r0.getValue()) {
      Many2778_15_ra4o = Many2778_17_ra4o;
      Many2778_15_ra0o = Many2778_17_ra1o;
      Many2778_15_ra1o = Many2778_17_ra2o;
      Many2778_15_ra2o = Many2778_17_ra3o;
      Many2778_15_ra3u = Many2778_17_ra0u;
      goto Many2778_15;
    } else {
      Many2778_16_ra4o = Many2778_17_ra4o;
      Many2778_16_ra0u = Many2778_17_ra0u;
      Many2778_16_ra1o = Many2778_17_ra1o;
      Many2778_16_ra2o = Many2778_17_ra2o;
      Many2778_16_ra3o = Many2778_17_ra3o;
      goto Many2778_16;
    }
  }
  // NormalBlock
  Many2778_18: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Many2778_18_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(92)} == r0};
    if (r1.getValue()) {
      Many2778_13_ra4o = Many2778_18_ra3o;
      Many2778_13_ra0o = Many2778_18_ra1o;
      Many2778_13_ra1o = Many2778_18_ra2o;
      Many2778_13_ra2o = Many2778_18_ra0o;
      Many2778_13_ra3u = r0;
      goto Many2778_13;
    } else {
      Many2778_17_ra4o = Many2778_18_ra3o;
      Many2778_17_ra0u = r0;
      Many2778_17_ra1o = Many2778_18_ra1o;
      Many2778_17_ra2o = Many2778_18_ra2o;
      Many2778_17_ra3o = Many2778_18_ra0o;
      goto Many2778_17;
    }
  }
  // NormalBlock
  Many2778_19: {
    DDL::Bool r0 = Many2778_19_ra0o.length() == 0;
    Many2778_19_ra0o.copy();
    Many2778_19_ra0o.copy();
    Many2778_19_ra0o.copy();
    if (r0.getValue()) {
      Many2778_19_ra0o.free();
      Many2778_19_ra0o.free();
      Many2778_7_ra0o = Many2778_19_ra0o;
      Many2778_7_ra1o = Many2778_19_ra0o;
      Many2778_7_ra2o = Many2778_19_ra1o;
      goto Many2778_7;
    } else {
      Many2778_19_ra0o.free();
      Many2778_18_ra3o = Many2778_19_ra0o;
      Many2778_18_ra0o = Many2778_19_ra0o;
      Many2778_18_ra1o = Many2778_19_ra0o;
      Many2778_18_ra2o = Many2778_19_ra1o;
      goto Many2778_18;
    }
  }
}
bool parser_StringChars(DDL::ParserStateUser<ReferenceTable> &p,
                        DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                        DDL::Input a1) {
  
// Parameters for L_1_StringChars2526
  DDL::Builder<DDL::Array<DDL::UInt<8>>> StringChars2526_1_ra0o;
  DDL::Input StringChars2526_1_ra1o;
  
// Parameters for L_2_StringChars2526
  DDL::Input StringChars2526_2_ra0o;
  StringChars2526_2_ra0o = a1;
  goto StringChars2526_2;
  // ReturnBlock (RetNo NoCapture)
  StringChars2526_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  StringChars2526_1: {
    DDL::Array<DDL::Array<DDL::UInt<8>>> r0 = DDL::Array<DDL::Array<DDL::UInt<8>>>(StringChars2526_1_ra0o);
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>(r0);
    r0.free();
    p.popDebug();
    *_result = r1;
    *_result_input = StringChars2526_1_ra1o;
    return true;
  }
  // NormalBlock
  StringChars2526_2: {
    DDL::Builder<DDL::Array<DDL::UInt<8>>> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:121:27--121:42:Many_2763",
                false);
    if (parser_Many_2763(p, &StringChars2526_1_ra0o,
                         &StringChars2526_1_ra1o, StringChars2526_2_ra0o, r0)) {
      goto StringChars2526_1;
    } else {
      goto StringChars2526_0;
    }
  }
}
bool parser_StringInParens(DDL::ParserStateUser<ReferenceTable> &p,
                           DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                           DDL::Input a1) {
  
// Parameters for L_1_StringInParens2527
  DDL::Array<DDL::UInt<8>> StringInParens2527_1_ra0o;
  DDL::Input StringInParens2527_1_ra1o;
  DDL::Array<DDL::UInt<8>> StringInParens2527_1_ra2o;
  DDL::Array<DDL::UInt<8>> StringInParens2527_1_ra3o;
  
// Parameters for L_2_StringInParens2527
  DDL::Input StringInParens2527_2_ra0o;
  
// Parameters for L_4_StringInParens2527
  DDL::Array<DDL::UInt<8>> StringInParens2527_4_ra0o;
  DDL::Input StringInParens2527_4_ra1o;
  DDL::Array<DDL::UInt<8>> StringInParens2527_4_ra2o;
  
// Parameters for L_6_StringInParens2527
  DDL::Array<DDL::UInt<8>> StringInParens2527_6_ra0o;
  DDL::Input StringInParens2527_6_ra1o;
  
// Parameters for L_7_StringInParens2527
  DDL::Input StringInParens2527_7_ra0o;
  
// Parameters for L_8_StringInParens2527
  DDL::Input StringInParens2527_8_ra0o;
  StringInParens2527_8_ra0o = a1;
  goto StringInParens2527_8;
  // NormalBlock
  StringInParens2527_1: {
    DDL::UInt<64> r0 = DDL::UInt<64>{StringInParens2527_1_ra0o.size().rep()};
    DDL::Input r1 = StringInParens2527_1_ra1o.iDrop(DDL::Size::from(r0.rep()));
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{StringInParens2527_1_ra2o,
                                                                                   StringInParens2527_1_ra3o,
                                                                                   StringInParens2527_1_ra0o};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.popDebug();
    *_result = r3;
    *_result_input = r1;
    return true;
  }
  // NormalBlock
  StringInParens2527_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(41UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:129:55--129:63",
               StringInParens2527_2_ra0o, r3);
    StringInParens2527_2_ra0o.free();
    r3.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  StringInParens2527_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  StringInParens2527_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(41UL)};
    DDL::Bool r1 = StringInParens2527_4_ra1o.hasPrefix(r0);
    if (r1.getValue()) {
      StringInParens2527_1_ra0o = r0;
      StringInParens2527_1_ra1o = StringInParens2527_4_ra1o;
      StringInParens2527_1_ra2o = StringInParens2527_4_ra2o;
      StringInParens2527_1_ra3o = StringInParens2527_4_ra0o;
      goto StringInParens2527_1;
    } else {
      StringInParens2527_4_ra0o.free();
      StringInParens2527_4_ra2o.free();
      r0.free();
      StringInParens2527_2_ra0o = StringInParens2527_4_ra1o;
      goto StringInParens2527_2;
    }
  }
  // NormalBlock
  StringInParens2527_6: {
    DDL::UInt<64> r0 = DDL::UInt<64>{StringInParens2527_6_ra0o.size().rep()};
    DDL::Input r1 = StringInParens2527_6_ra1o.iDrop(DDL::Size::from(r0.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:129:42--129:52:StringChars",
                false);
    if (parser_StringChars(p, &StringInParens2527_4_ra0o,
                           &StringInParens2527_4_ra1o, r1)) {
      StringInParens2527_4_ra2o = StringInParens2527_6_ra0o;
      goto StringInParens2527_4;
    } else {
      StringInParens2527_6_ra0o.free();
      goto StringInParens2527_3;
    }
  }
  // NormalBlock
  StringInParens2527_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(40UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:129:31--129:39",
               StringInParens2527_7_ra0o, r3);
    StringInParens2527_7_ra0o.free();
    r3.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  StringInParens2527_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(40UL)};
    DDL::Bool r1 = StringInParens2527_8_ra0o.hasPrefix(r0);
    if (r1.getValue()) {
      StringInParens2527_6_ra0o = r0;
      StringInParens2527_6_ra1o = StringInParens2527_8_ra0o;
      goto StringInParens2527_6;
    } else {
      r0.free();
      StringInParens2527_7_ra0o = StringInParens2527_8_ra0o;
      goto StringInParens2527_7;
    }
  }
}
bool parser_StringChunk(DDL::ParserStateUser<ReferenceTable> &p,
                        DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                        DDL::Input a1) {
  
// Parameters for L_1_StringChunk2528
  DDL::Builder<DDL::UInt<8>> StringChunk2528_1_ra0o;
  DDL::Input StringChunk2528_1_ra1o;
  
// Parameters for L_3_StringChunk2528
  DDL::Builder<DDL::UInt<8>> StringChunk2528_3_ra0o;
  DDL::Input StringChunk2528_3_ra1o;
  
// Parameters for L_4_StringChunk2528
  DDL::Input StringChunk2528_4_ra0o;
  
// Parameters for L_5_StringChunk2528
  DDL::Array<DDL::UInt<8>> StringChunk2528_5_ra0o;
  DDL::Input StringChunk2528_5_ra1o;
  
// Parameters for L_6_StringChunk2528
  DDL::Input StringChunk2528_6_ra0o;
  
// Parameters for L_7_StringChunk2528
  DDL::Array<DDL::UInt<8>> StringChunk2528_7_ra0o;
  DDL::Input StringChunk2528_7_ra1o;
  
// Parameters for L_8_StringChunk2528
  DDL::Input StringChunk2528_8_ra0o;
  StringChunk2528_8_ra0o = a1;
  goto StringChunk2528_8;
  // ReturnBlock (RetNo NoCapture)
  StringChunk2528_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  StringChunk2528_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>(StringChunk2528_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = StringChunk2528_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  StringChunk2528_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  StringChunk2528_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:127:5--127:26:Many_2778",
                false);
    if (parser_Many_2778(p, &StringChunk2528_1_ra0o,
                         &StringChunk2528_1_ra1o, StringChunk2528_3_ra1o,
                         StringChunk2528_3_ra0o)) {
      goto StringChunk2528_1;
    } else {
      goto StringChunk2528_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  StringChunk2528_4: {
    DDL::Builder<DDL::UInt<8>> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:127:5--127:26:Many_2773",
                false);
    if (parser_Many_2773(p, &StringChunk2528_3_ra0o,
                         &StringChunk2528_3_ra1o, StringChunk2528_4_ra0o,
                         DDL::UInt<64>{UINT64_C(0)}, r0)) {
      goto StringChunk2528_3;
    } else {
      goto StringChunk2528_2;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  StringChunk2528_5: {
    p.popDebug();
    *_result = StringChunk2528_5_ra0o;
    *_result_input = StringChunk2528_5_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  StringChunk2528_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:126:5--126:13:StringEsc",
                false);
    StringChunk2528_6_ra0o.copy();
    if (parser_StringEsc(p, &StringChunk2528_5_ra0o,
                         &StringChunk2528_5_ra1o, StringChunk2528_6_ra0o)) {
      StringChunk2528_6_ra0o.free();
      goto StringChunk2528_5;
    } else {
      StringChunk2528_4_ra0o = StringChunk2528_6_ra0o;
      goto StringChunk2528_4;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  StringChunk2528_7: {
    p.popDebug();
    *_result = StringChunk2528_7_ra0o;
    *_result_input = StringChunk2528_7_ra1o;
    return true;
  }
  // NormalBlock
  StringChunk2528_8: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:125:5--125:18:StringInParens",
                false);
    StringChunk2528_8_ra0o.copy();
    if (parser_StringInParens(p, &StringChunk2528_7_ra0o,
                              &StringChunk2528_7_ra1o, StringChunk2528_8_ra0o)) {
      StringChunk2528_8_ra0o.free();
      goto StringChunk2528_7;
    } else {
      StringChunk2528_6_ra0o = StringChunk2528_8_ra0o;
      goto StringChunk2528_6;
    }
  }
}
bool parser_Many_2763(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::Array<DDL::UInt<8>>>* _result,
                      DDL::Input* _result_input, DDL::Input a1,
                      DDL::Builder<DDL::Array<DDL::UInt<8>>> a2) {
  
// Parameters for L_0_Many2763
  DDL::Input Many2763_0_ra2o;
  DDL::Builder<DDL::Array<DDL::UInt<8>>> Many2763_0_ra0o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> Many2763_0_ra1o;
  
// Parameters for L_1_Many2763
  DDL::Input Many2763_1_ra1o;
  DDL::Builder<DDL::Array<DDL::UInt<8>>> Many2763_1_ra0o;
  
// Parameters for L_2_Many2763
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> Many2763_2_ra0o;
  DDL::Input Many2763_2_ra2o;
  DDL::Builder<DDL::Array<DDL::UInt<8>>> Many2763_2_ra1o;
  
// Parameters for L_4_Many2763
  DDL::Input Many2763_4_ra0o;
  DDL::Builder<DDL::Array<DDL::UInt<8>>> Many2763_4_ra1o;
  
// Parameters for L_5_Many2763
  DDL::Array<DDL::UInt<8>> Many2763_5_ra0o;
  DDL::Input Many2763_5_ra1o;
  DDL::Builder<DDL::Array<DDL::UInt<8>>> Many2763_5_ra2o;
  
// Parameters for L_6_Many2763
  DDL::Input Many2763_6_ra0o;
  DDL::Builder<DDL::Array<DDL::UInt<8>>> Many2763_6_ra1o;
  Many2763_6_ra0o = a1;
  Many2763_6_ra1o = a2;
  goto Many2763_6;
  // NormalBlock
  Many2763_0: {
    DDL::Array<DDL::UInt<8>> r0 = Many2763_0_ra1o.getValue();
    Many2763_0_ra1o.free();
    DDL::Builder<DDL::Array<DDL::UInt<8>>> r1 = DDL::Builder<DDL::Array<DDL::UInt<8>>>(Many2763_0_ra0o,
                                                                                       r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:121:27--121:42:Many_2763",
                true);
    Many2763_6_ra0o = Many2763_0_ra2o;
    Many2763_6_ra1o = r1;
    goto Many2763_6;
  }
  // NormalBlock
  Many2763_1: {
    p.popDebug();
    *_result = Many2763_1_ra0o;
    *_result_input = Many2763_1_ra1o;
    return true;
  }
  // NormalBlock
  Many2763_2: {
    if (Many2763_2_ra0o.isJust()) {
      Many2763_0_ra2o = Many2763_2_ra2o;
      Many2763_0_ra0o = Many2763_2_ra1o;
      Many2763_0_ra1o = Many2763_2_ra0o;
      goto Many2763_0;
    } else {
      Many2763_2_ra0o.free();
      Many2763_1_ra1o = Many2763_2_ra2o;
      Many2763_1_ra0o = Many2763_2_ra1o;
      goto Many2763_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2763_4: {
    Many2763_2_ra0o = (DDL::Maybe<DDL::Array<DDL::UInt<8>>>());
    Many2763_2_ra2o = Many2763_4_ra0o;
    Many2763_2_ra1o = Many2763_4_ra1o;
    goto Many2763_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2763_5: {
    DDL::Maybe<DDL::Array<DDL::UInt<8>>> r0 = DDL::Maybe<DDL::Array<DDL::UInt<8>>>(Many2763_5_ra0o);
    Many2763_2_ra0o = r0;
    Many2763_2_ra2o = Many2763_5_ra1o;
    Many2763_2_ra1o = Many2763_5_ra2o;
    goto Many2763_2;
  }
  // NormalBlock
  Many2763_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:121:32--121:42:StringChunk",
                false);
    Many2763_6_ra0o.copy();
    Many2763_6_ra1o.copy();
    if (parser_StringChunk(p, &Many2763_5_ra0o, &Many2763_5_ra1o,
                           Many2763_6_ra0o)) {
      Many2763_6_ra0o.free();
      Many2763_6_ra1o.free();
      Many2763_5_ra2o = Many2763_6_ra1o;
      goto Many2763_5;
    } else {
      Many2763_6_ra1o.free();
      Many2763_4_ra0o = Many2763_6_ra0o;
      Many2763_4_ra1o = Many2763_6_ra1o;
      goto Many2763_4;
    }
  }
}
bool parser_Many_2783(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many2783
  DDL::Input Many2783_0_ra0o;
  
// Parameters for L_1_Many2783
  DDL::Input Many2783_1_ra0o;
  
// Parameters for L_2_Many2783
  DDL::Bool Many2783_2_ra0u;
  DDL::Input Many2783_2_ra1o;
  
// Parameters for L_4_Many2783
  DDL::Input Many2783_4_ra0o;
  
// Parameters for L_5_Many2783
  DDL::Unit Many2783_5_ra0u;
  DDL::Input Many2783_5_ra1o;
  
// Parameters for L_6_Many2783
  DDL::Input Many2783_6_ra0o;
  Many2783_6_ra0o = a1;
  goto Many2783_6;
  // NormalBlock
  Many2783_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2783",
                true);
    Many2783_6_ra0o = Many2783_0_ra0o;
    goto Many2783_6;
  }
  // NormalBlock
  Many2783_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many2783_1_ra0o;
    return true;
  }
  // NormalBlock
  Many2783_2: {
    if (Many2783_2_ra0u.getValue()) {
      Many2783_0_ra0o = Many2783_2_ra1o;
      goto Many2783_0;
    } else {
      Many2783_1_ra0o = Many2783_2_ra1o;
      goto Many2783_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2783_4: {
    Many2783_2_ra0u = DDL::Bool(false);
    Many2783_2_ra1o = Many2783_4_ra0o;
    goto Many2783_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2783_5: {
    Many2783_2_ra0u = DDL::Bool(true);
    Many2783_2_ra1o = Many2783_5_ra1o;
    goto Many2783_2;
  }
  // NormalBlock
  Many2783_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:48--228:52:AnyWS_",
                false);
    Many2783_6_ra0o.copy();
    if (parser_AnyWS_(p, &Many2783_5_ra0u, &Many2783_5_ra1o,
                      Many2783_6_ra0o)) {
      Many2783_6_ra0o.free();
      goto Many2783_5;
    } else {
      Many2783_4_ra0o = Many2783_6_ra0o;
      goto Many2783_4;
    }
  }
}
bool parser_Token__2529(DDL::ParserStateUser<ReferenceTable> &p,
                        DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_Token_2529
  DDL::Input Token_2529_1_ra0o;
  
// Parameters for L_3_Token_2529
  DDL::Input Token_2529_3_ra0o;
  
// Parameters for L_4_Token_2529
  DDL::Input Token_2529_4_ra0o;
  
// Parameters for L_5_Token_2529
  DDL::Input Token_2529_5_ra1o;
  DDL::Input Token_2529_5_ra0o;
  
// Parameters for L_6_Token_2529
  DDL::Input Token_2529_6_ra0o;
  Token_2529_6_ra0o = a1;
  goto Token_2529_6;
  // NormalBlock
  Token_2529_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:40--228:40",
               Token_2529_1_ra0o, r0);
    Token_2529_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Token_2529_3: {
    DDL::Input r0 = Token_2529_3_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2783",
                true);
    return parser_Many_2783(p, _result, _result_input, r0);
  }
  // NormalBlock
  Token_2529_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:40--228:40",
               Token_2529_4_ra0o, r0);
    Token_2529_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Token_2529_5: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Token_2529_5_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(41)} == r0};
    if (r1.getValue()) {
      Token_2529_5_ra1o.free();
      Token_2529_3_ra0o = Token_2529_5_ra0o;
      goto Token_2529_3;
    } else {
      Token_2529_5_ra0o.free();
      Token_2529_4_ra0o = Token_2529_5_ra1o;
      goto Token_2529_4;
    }
  }
  // NormalBlock
  Token_2529_6: {
    DDL::Bool r0 = Token_2529_6_ra0o.length() == 0;
    Token_2529_6_ra0o.copy();
    if (r0.getValue()) {
      Token_2529_6_ra0o.free();
      Token_2529_1_ra0o = Token_2529_6_ra0o;
      goto Token_2529_1;
    } else {
      Token_2529_5_ra1o = Token_2529_6_ra0o;
      Token_2529_5_ra0o = Token_2529_6_ra0o;
      goto Token_2529_5;
    }
  }
}
bool parser_String(DDL::ParserStateUser<ReferenceTable> &p,
                   DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                   DDL::Input a1) {
  
// Parameters for L_1_String2530
  DDL::Unit String2530_1_ra0u;
  DDL::Input String2530_1_ra1o;
  DDL::Array<DDL::UInt<8>> String2530_1_ra2o;
  
// Parameters for L_3_String2530
  DDL::Array<DDL::UInt<8>> String2530_3_ra0o;
  DDL::Input String2530_3_ra1o;
  
// Parameters for L_5_String2530
  DDL::Input String2530_5_ra0o;
  
// Parameters for L_7_String2530
  DDL::Input String2530_7_ra0o;
  
// Parameters for L_8_String2530
  DDL::Input String2530_8_ra0o;
  
// Parameters for L_9_String2530
  DDL::Input String2530_9_ra1o;
  DDL::Input String2530_9_ra0o;
  
// Parameters for L_10_String2530
  DDL::Input String2530_10_ra0o;
  String2530_10_ra0o = a1;
  goto String2530_10;
  // ReturnBlock (RetNo NoCapture)
  String2530_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  String2530_1: {
    p.popDebug();
    *_result = String2530_1_ra2o;
    *_result_input = String2530_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  String2530_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  String2530_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:119:5--119:16:Token__2529",
                false);
    if (parser_Token__2529(p, &String2530_1_ra0u, &String2530_1_ra1o,
                           String2530_3_ra1o)) {
      String2530_1_ra2o = String2530_3_ra0o;
      goto String2530_1;
    } else {
      String2530_3_ra0o.free();
      goto String2530_0;
    }
  }
  // NormalBlock
  String2530_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:117:5--117:10",
               String2530_5_ra0o, r0);
    String2530_5_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  String2530_7: {
    DDL::Input r0 = String2530_7_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:118:10--118:20:StringChars",
                false);
    if (parser_StringChars(p, &String2530_3_ra0o, &String2530_3_ra1o,
                           r0)) {
      goto String2530_3;
    } else {
      goto String2530_2;
    }
  }
  // NormalBlock
  String2530_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:117:5--117:10",
               String2530_8_ra0o, r0);
    String2530_8_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  String2530_9: {
    DDL::UInt<8> r0 = DDL::UInt<8>(String2530_9_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(40)} == r0};
    if (r1.getValue()) {
      String2530_9_ra1o.free();
      String2530_7_ra0o = String2530_9_ra0o;
      goto String2530_7;
    } else {
      String2530_9_ra0o.free();
      String2530_8_ra0o = String2530_9_ra1o;
      goto String2530_8;
    }
  }
  // NormalBlock
  String2530_10: {
    DDL::Bool r0 = String2530_10_ra0o.length() == 0;
    String2530_10_ra0o.copy();
    if (r0.getValue()) {
      String2530_10_ra0o.free();
      String2530_5_ra0o = String2530_10_ra0o;
      goto String2530_5;
    } else {
      String2530_9_ra1o = String2530_10_ra0o;
      String2530_9_ra0o = String2530_10_ra0o;
      goto String2530_9;
    }
  }
}
bool parser_Many_2787(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many2787
  DDL::Input Many2787_0_ra0o;
  
// Parameters for L_1_Many2787
  DDL::Input Many2787_1_ra0o;
  
// Parameters for L_2_Many2787
  DDL::Bool Many2787_2_ra0u;
  DDL::Input Many2787_2_ra1o;
  
// Parameters for L_4_Many2787
  DDL::Input Many2787_4_ra0o;
  
// Parameters for L_5_Many2787
  DDL::Unit Many2787_5_ra0u;
  DDL::Input Many2787_5_ra1o;
  
// Parameters for L_6_Many2787
  DDL::Input Many2787_6_ra0o;
  Many2787_6_ra0o = a1;
  goto Many2787_6;
  // NormalBlock
  Many2787_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2787",
                true);
    Many2787_6_ra0o = Many2787_0_ra0o;
    goto Many2787_6;
  }
  // NormalBlock
  Many2787_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many2787_1_ra0o;
    return true;
  }
  // NormalBlock
  Many2787_2: {
    if (Many2787_2_ra0u.getValue()) {
      Many2787_0_ra0o = Many2787_2_ra1o;
      goto Many2787_0;
    } else {
      Many2787_1_ra0o = Many2787_2_ra1o;
      goto Many2787_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2787_4: {
    Many2787_2_ra0u = DDL::Bool(false);
    Many2787_2_ra1o = Many2787_4_ra0o;
    goto Many2787_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2787_5: {
    Many2787_2_ra0u = DDL::Bool(true);
    Many2787_2_ra1o = Many2787_5_ra1o;
    goto Many2787_2;
  }
  // NormalBlock
  Many2787_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:48--228:52:AnyWS_",
                false);
    Many2787_6_ra0o.copy();
    if (parser_AnyWS_(p, &Many2787_5_ra0u, &Many2787_5_ra1o,
                      Many2787_6_ra0o)) {
      Many2787_6_ra0o.free();
      goto Many2787_5;
    } else {
      Many2787_4_ra0o = Many2787_6_ra0o;
      goto Many2787_4;
    }
  }
}
bool parser_Token_2531(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_Token2531
  DDL::Unit Token2531_1_ra0u;
  DDL::Input Token2531_1_ra1o;
  DDL::Integer Token2531_1_ra2o;
  
// Parameters for L_3_Token2531
  DDL::Integer Token2531_3_ra0o;
  DDL::Input Token2531_3_ra1o;
  
// Parameters for L_4_Token2531
  DDL::Input Token2531_4_ra0o;
  Token2531_4_ra0o = a1;
  goto Token2531_4;
  // ReturnBlock (RetNo NoCapture)
  Token2531_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2531_1: {
    p.popDebug();
    *_result = Token2531_1_ra2o;
    *_result_input = Token2531_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Token2531_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2531_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2787",
                false);
    if (parser_Many_2787(p, &Token2531_1_ra0u, &Token2531_1_ra1o,
                         Token2531_3_ra1o)) {
      Token2531_1_ra2o = Token2531_3_ra0o;
      goto Token2531_1;
    } else {
      Token2531_3_ra0o.free();
      goto Token2531_0;
    }
  }
  // NormalBlock
  Token2531_4: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:40--228:40:HexDigit",
                false);
    if (parser_HexDigit(p, &Token2531_3_ra0o, &Token2531_3_ra1o,
                        Token2531_4_ra0o)) {
      goto Token2531_3;
    } else {
      goto Token2531_2;
    }
  }
}
bool parser_Many_2791(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::Integer>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::UInt<64> a2, DDL::Builder<DDL::Integer> a3) {
  
// Parameters for L_1_Many2791
  DDL::Input Many2791_1_ra0o;
  
// Parameters for L_2_Many2791
  DDL::Integer Many2791_2_ra0o;
  DDL::Input Many2791_2_ra1o;
  DDL::UInt<64> Many2791_2_ra2u;
  DDL::Builder<DDL::Integer> Many2791_2_ra3o;
  
// Parameters for L_3_Many2791
  DDL::Input Many2791_3_ra0o;
  DDL::UInt<64> Many2791_3_ra1u;
  DDL::Builder<DDL::Integer> Many2791_3_ra2o;
  
// Parameters for L_4_Many2791
  DDL::Input Many2791_4_ra1o;
  DDL::Builder<DDL::Integer> Many2791_4_ra0o;
  
// Parameters for L_5_Many2791
  DDL::Input Many2791_5_ra0o;
  DDL::UInt<64> Many2791_5_ra1u;
  DDL::Builder<DDL::Integer> Many2791_5_ra2o;
  Many2791_5_ra0o = a1;
  Many2791_5_ra1u = a2;
  Many2791_5_ra2o = a3;
  goto Many2791_5;
  // ReturnBlock (RetNo NoCapture)
  Many2791_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many2791_1_ra0o, r0);
    Many2791_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2791_2: {
    DDL::UInt<64> r0 = Many2791_2_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<DDL::Integer> r1 = DDL::Builder<DDL::Integer>(Many2791_2_ra3o,
                                                               Many2791_2_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:158:33--158:54:Many_2791",
                true);
    Many2791_5_ra0o = Many2791_2_ra1o;
    Many2791_5_ra1u = r0;
    Many2791_5_ra2o = r1;
    goto Many2791_5;
  }
  // NormalBlock
  Many2791_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:158:41--158:54:Token_2531",
                false);
    Many2791_3_ra0o.copy();
    if (parser_Token_2531(p, &Many2791_2_ra0o, &Many2791_2_ra1o,
                          Many2791_3_ra0o)) {
      Many2791_3_ra0o.free();
      Many2791_2_ra2u = Many2791_3_ra1u;
      Many2791_2_ra3o = Many2791_3_ra2o;
      goto Many2791_2;
    } else {
      Many2791_3_ra2o.free();
      Many2791_1_ra0o = Many2791_3_ra0o;
      goto Many2791_1;
    }
  }
  // NormalBlock
  Many2791_4: {
    p.popDebug();
    *_result = Many2791_4_ra0o;
    *_result_input = Many2791_4_ra1o;
    return true;
  }
  // NormalBlock
  Many2791_5: {
    DDL::Bool r0 = DDL::Bool{Many2791_5_ra1u < DDL::UInt<64>{UINT64_C(2)}};
    if (r0.getValue()) {
      Many2791_3_ra0o = Many2791_5_ra0o;
      Many2791_3_ra1u = Many2791_5_ra1u;
      Many2791_3_ra2o = Many2791_5_ra2o;
      goto Many2791_3;
    } else {
      Many2791_4_ra1o = Many2791_5_ra0o;
      Many2791_4_ra0o = Many2791_5_ra2o;
      goto Many2791_4;
    }
  }
}
bool parser_HexStringNum2(DDL::ParserStateUser<ReferenceTable> &p,
                          DDL::UInt<8>* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_HexStringNum22532
  DDL::Integer HexStringNum22532_0_ra0o;
  DDL::Input HexStringNum22532_0_ra1o;
  
// Parameters for L_2_HexStringNum22532
  DDL::Builder<DDL::Integer> HexStringNum22532_2_ra0o;
  DDL::Input HexStringNum22532_2_ra1o;
  
// Parameters for L_3_HexStringNum22532
  DDL::Input HexStringNum22532_3_ra0o;
  HexStringNum22532_3_ra0o = a1;
  goto HexStringNum22532_3;
  // ReturnBlock RetPure
  HexStringNum22532_0: {
    DDL::UInt<8> r0 = DDL::integer_to_uint<8>(HexStringNum22532_0_ra0o);
    HexStringNum22532_0_ra0o.free();
    p.popDebug();
    *_result = r0;
    *_result_input = HexStringNum22532_0_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  HexStringNum22532_1: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  HexStringNum22532_2: {
    DDL::Array<DDL::Integer> r0 = DDL::Array<DDL::Integer>(HexStringNum22532_2_ra0o);
    DDL::Integer r1 = DDL::Integer("16");
    HexStringNum22532_0_ra0o = parser_numBase_2507(r1, r0);
    HexStringNum22532_0_ra1o = HexStringNum22532_2_ra1o;
    goto HexStringNum22532_0;
  }
  // NormalBlock
  HexStringNum22532_3: {
    DDL::Builder<DDL::Integer> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:158:33--158:54:Many_2791",
                false);
    if (parser_Many_2791(p, &HexStringNum22532_2_ra0o,
                         &HexStringNum22532_2_ra1o, HexStringNum22532_3_ra0o,
                         DDL::UInt<64>{UINT64_C(0)}, r0)) {
      goto HexStringNum22532_2;
    } else {
      goto HexStringNum22532_1;
    }
  }
}
bool parser_HexStringNum1(DDL::ParserStateUser<ReferenceTable> &p,
                          DDL::UInt<8>* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_HexStringNum12533
  DDL::Integer HexStringNum12533_1_ra0o;
  DDL::Input HexStringNum12533_1_ra1o;
  
// Parameters for L_2_HexStringNum12533
  DDL::Input HexStringNum12533_2_ra0o;
  HexStringNum12533_2_ra0o = a1;
  goto HexStringNum12533_2;
  // ReturnBlock (RetNo NoCapture)
  HexStringNum12533_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  HexStringNum12533_1: {
    DDL::Integer r0 = DDL::Integer("16");
    DDL::Integer r1 = r0 * HexStringNum12533_1_ra0o;
    DDL::UInt<8> r2 = DDL::integer_to_uint<8>(r1);
    r1.free();
    p.popDebug();
    *_result = r2;
    *_result_input = HexStringNum12533_1_ra1o;
    return true;
  }
  // NormalBlock
  HexStringNum12533_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:159:26--159:39:Token_2531",
                false);
    if (parser_Token_2531(p, &HexStringNum12533_1_ra0o,
                          &HexStringNum12533_1_ra1o, HexStringNum12533_2_ra0o)) {
      goto HexStringNum12533_1;
    } else {
      goto HexStringNum12533_0;
    }
  }
}
bool parser_Many_2800(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many2800
  DDL::Input Many2800_0_ra0o;
  
// Parameters for L_1_Many2800
  DDL::Input Many2800_1_ra0o;
  
// Parameters for L_2_Many2800
  DDL::Bool Many2800_2_ra0u;
  DDL::Input Many2800_2_ra1o;
  
// Parameters for L_4_Many2800
  DDL::Input Many2800_4_ra0o;
  
// Parameters for L_5_Many2800
  DDL::Unit Many2800_5_ra0u;
  DDL::Input Many2800_5_ra1o;
  
// Parameters for L_6_Many2800
  DDL::Input Many2800_6_ra0o;
  Many2800_6_ra0o = a1;
  goto Many2800_6;
  // NormalBlock
  Many2800_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2800",
                true);
    Many2800_6_ra0o = Many2800_0_ra0o;
    goto Many2800_6;
  }
  // NormalBlock
  Many2800_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many2800_1_ra0o;
    return true;
  }
  // NormalBlock
  Many2800_2: {
    if (Many2800_2_ra0u.getValue()) {
      Many2800_0_ra0o = Many2800_2_ra1o;
      goto Many2800_0;
    } else {
      Many2800_1_ra0o = Many2800_2_ra1o;
      goto Many2800_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2800_4: {
    Many2800_2_ra0u = DDL::Bool(false);
    Many2800_2_ra1o = Many2800_4_ra0o;
    goto Many2800_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2800_5: {
    Many2800_2_ra0u = DDL::Bool(true);
    Many2800_2_ra1o = Many2800_5_ra1o;
    goto Many2800_2;
  }
  // NormalBlock
  Many2800_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:48--228:52:AnyWS_",
                false);
    Many2800_6_ra0o.copy();
    if (parser_AnyWS_(p, &Many2800_5_ra0u, &Many2800_5_ra1o,
                      Many2800_6_ra0o)) {
      Many2800_6_ra0o.free();
      goto Many2800_5;
    } else {
      Many2800_4_ra0o = Many2800_6_ra0o;
      goto Many2800_4;
    }
  }
}
bool parser_Token__2534(DDL::ParserStateUser<ReferenceTable> &p,
                        DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1,
                        DDL::Array<DDL::UInt<8>> a2) {
  
// Parameters for L_1_Token_2534
  DDL::Array<DDL::UInt<8>> Token_2534_1_ra0o;
  DDL::Input Token_2534_1_ra1o;
  
// Parameters for L_2_Token_2534
  DDL::Input Token_2534_2_ra1o;
  DDL::Array<DDL::UInt<8>> Token_2534_2_ra0o;
  
// Parameters for L_3_Token_2534
  DDL::Input Token_2534_3_ra0o;
  DDL::Array<DDL::UInt<8>> Token_2534_3_ra1o;
  Token_2534_3_ra0o = a1;
  Token_2534_3_ra1o = a2;
  goto Token_2534_3;
  // NormalBlock
  Token_2534_1: {
    DDL::UInt<64> r0 = DDL::UInt<64>{Token_2534_1_ra0o.size().rep()};
    Token_2534_1_ra0o.free();
    DDL::Input r1 = Token_2534_1_ra1o.iDrop(DDL::Size::from(r0.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2800",
                true);
    return parser_Many_2800(p, _result, _result_input, r1);
  }
  // NormalBlock
  Token_2534_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r1 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   Token_2534_2_ra0o};
    DDL::Array<DDL::UInt<8>> r2 = DDL::Array<DDL::UInt<8>>(r1);
    r1.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:40--228:40",
               Token_2534_2_ra1o, r2);
    Token_2534_2_ra1o.free();
    r2.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Token_2534_3: {
    DDL::Bool r0 = Token_2534_3_ra0o.hasPrefix(Token_2534_3_ra1o);
    if (r0.getValue()) {
      Token_2534_1_ra0o = Token_2534_3_ra1o;
      Token_2534_1_ra1o = Token_2534_3_ra0o;
      goto Token_2534_1;
    } else {
      Token_2534_2_ra1o = Token_2534_3_ra0o;
      Token_2534_2_ra0o = Token_2534_3_ra1o;
      goto Token_2534_2;
    }
  }
}
bool parser_KW_(DDL::ParserStateUser<ReferenceTable> &p,
                DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1,
                DDL::Array<DDL::UInt<8>> a2) {
  
// Parameters for L_0_KW_2535
  DDL::Input KW_2535_0_ra0o;
  DDL::Array<DDL::UInt<8>> KW_2535_0_ra1o;
  KW_2535_0_ra0o = a1;
  KW_2535_0_ra1o = a2;
  goto KW_2535_0;
  // NormalBlock
  KW_2535_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:229:29--229:43:Token__2534",
                true);
    return parser_Token__2534(p, _result, _result_input,
                              KW_2535_0_ra0o, KW_2535_0_ra1o);
  }
}
bool parser_Many_2807(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Builder<DDL::UInt<8>> a2) {
  
// Parameters for L_0_Many2807
  DDL::Input Many2807_0_ra2o;
  DDL::Builder<DDL::UInt<8>> Many2807_0_ra0o;
  DDL::Maybe<DDL::UInt<8>> Many2807_0_ra1u;
  
// Parameters for L_1_Many2807
  DDL::Input Many2807_1_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2807_1_ra0o;
  
// Parameters for L_2_Many2807
  DDL::Maybe<DDL::UInt<8>> Many2807_2_ra0u;
  DDL::Input Many2807_2_ra2o;
  DDL::Builder<DDL::UInt<8>> Many2807_2_ra1o;
  
// Parameters for L_4_Many2807
  DDL::Input Many2807_4_ra0o;
  DDL::Builder<DDL::UInt<8>> Many2807_4_ra1o;
  
// Parameters for L_5_Many2807
  DDL::UInt<8> Many2807_5_ra0u;
  DDL::Input Many2807_5_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2807_5_ra2o;
  
// Parameters for L_6_Many2807
  DDL::Input Many2807_6_ra0o;
  DDL::Builder<DDL::UInt<8>> Many2807_6_ra1o;
  Many2807_6_ra0o = a1;
  Many2807_6_ra1o = a2;
  goto Many2807_6;
  // NormalBlock
  Many2807_0: {
    DDL::UInt<8> r0 = Many2807_0_ra1u.getValue();
    DDL::Builder<DDL::UInt<8>> r1 = DDL::Builder<DDL::UInt<8>>(Many2807_0_ra0o,
                                                               r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:155:17--155:34:Many_2807",
                true);
    Many2807_6_ra0o = Many2807_0_ra2o;
    Many2807_6_ra1o = r1;
    goto Many2807_6;
  }
  // NormalBlock
  Many2807_1: {
    p.popDebug();
    *_result = Many2807_1_ra0o;
    *_result_input = Many2807_1_ra1o;
    return true;
  }
  // NormalBlock
  Many2807_2: {
    if (Many2807_2_ra0u.isJust()) {
      Many2807_0_ra2o = Many2807_2_ra2o;
      Many2807_0_ra0o = Many2807_2_ra1o;
      Many2807_0_ra1u = Many2807_2_ra0u;
      goto Many2807_0;
    } else {
      Many2807_1_ra1o = Many2807_2_ra2o;
      Many2807_1_ra0o = Many2807_2_ra1o;
      goto Many2807_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2807_4: {
    Many2807_2_ra0u = (DDL::Maybe<DDL::UInt<8>>());
    Many2807_2_ra2o = Many2807_4_ra0o;
    Many2807_2_ra1o = Many2807_4_ra1o;
    goto Many2807_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2807_5: {
    DDL::Maybe<DDL::UInt<8>> r0 = DDL::Maybe<DDL::UInt<8>>(Many2807_5_ra0u);
    Many2807_2_ra0u = r0;
    Many2807_2_ra2o = Many2807_5_ra1o;
    Many2807_2_ra1o = Many2807_5_ra2o;
    goto Many2807_2;
  }
  // NormalBlock
  Many2807_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:155:22--155:34:HexStringNum2",
                false);
    Many2807_6_ra0o.copy();
    Many2807_6_ra1o.copy();
    if (parser_HexStringNum2(p, &Many2807_5_ra0u, &Many2807_5_ra1o,
                             Many2807_6_ra0o)) {
      Many2807_6_ra0o.free();
      Many2807_6_ra1o.free();
      Many2807_5_ra2o = Many2807_6_ra1o;
      goto Many2807_5;
    } else {
      Many2807_6_ra1o.free();
      Many2807_4_ra0o = Many2807_6_ra0o;
      Many2807_4_ra1o = Many2807_6_ra1o;
      goto Many2807_4;
    }
  }
}
bool parser_Between_2536(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                         DDL::Input a1, DDL::Array<DDL::UInt<8>> a2,
                         DDL::Array<DDL::UInt<8>> a3) {
  
// Parameters for L_1_Between2536
  DDL::Unit Between2536_1_ra0u;
  DDL::Input Between2536_1_ra1o;
  DDL::Array<DDL::UInt<8>> Between2536_1_ra2o;
  
// Parameters for L_2_Between2536
  DDL::Array<DDL::UInt<8>> Between2536_2_ra0o;
  DDL::Input Between2536_2_ra2o;
  DDL::Array<DDL::UInt<8>> Between2536_2_ra1o;
  
// Parameters for L_4_Between2536
  DDL::Input Between2536_4_ra0o;
  DDL::Array<DDL::UInt<8>> Between2536_4_ra1o;
  DDL::Array<DDL::UInt<8>> Between2536_4_ra2o;
  
// Parameters for L_5_Between2536
  DDL::UInt<8> Between2536_5_ra0u;
  DDL::Input Between2536_5_ra1o;
  DDL::Array<DDL::UInt<8>> Between2536_5_ra2o;
  DDL::Array<DDL::UInt<8>> Between2536_5_ra3o;
  
// Parameters for L_7_Between2536
  DDL::Builder<DDL::UInt<8>> Between2536_7_ra0o;
  DDL::Input Between2536_7_ra1o;
  DDL::Array<DDL::UInt<8>> Between2536_7_ra2o;
  
// Parameters for L_9_Between2536
  DDL::Unit Between2536_9_ra0u;
  DDL::Input Between2536_9_ra1o;
  DDL::Array<DDL::UInt<8>> Between2536_9_ra2o;
  
// Parameters for L_10_Between2536
  DDL::Input Between2536_10_ra0o;
  DDL::Array<DDL::UInt<8>> Between2536_10_ra1o;
  DDL::Array<DDL::UInt<8>> Between2536_10_ra2o;
  Between2536_10_ra0o = a1;
  Between2536_10_ra1o = a2;
  Between2536_10_ra2o = a3;
  goto Between2536_10;
  // ReturnBlock (RetNo NoCapture)
  Between2536_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Between2536_1: {
    p.popDebug();
    *_result = Between2536_1_ra2o;
    *_result_input = Between2536_1_ra1o;
    return true;
  }
  // NormalBlock
  Between2536_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:230:52--230:59:KW_",
                false);
    if (parser_KW_(p, &Between2536_1_ra0u, &Between2536_1_ra1o,
                   Between2536_2_ra2o, Between2536_2_ra1o)) {
      Between2536_1_ra2o = Between2536_2_ra0o;
      goto Between2536_1;
    } else {
      Between2536_2_ra0o.free();
      goto Between2536_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Between2536_4: {
    Between2536_2_ra0o = Between2536_4_ra1o;
    Between2536_2_ra2o = Between2536_4_ra0o;
    Between2536_2_ra1o = Between2536_4_ra2o;
    goto Between2536_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Between2536_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{Between2536_5_ra0u};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r1 = DDL::Array<DDL::Array<DDL::UInt<8>>>{Between2536_5_ra2o,
                                                                                   r0};
    DDL::Array<DDL::UInt<8>> r2 = DDL::Array<DDL::UInt<8>>(r1);
    r1.free();
    Between2536_2_ra0o = r2;
    Between2536_2_ra2o = Between2536_5_ra1o;
    Between2536_2_ra1o = Between2536_5_ra3o;
    goto Between2536_2;
  }
  // ReturnBlock (RetNo NoCapture)
  Between2536_6: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Between2536_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>(Between2536_7_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:156:22--156:34:HexStringNum1",
                false);
    Between2536_7_ra1o.copy();
    r0.copy();
    Between2536_7_ra2o.copy();
    if (parser_HexStringNum1(p, &Between2536_5_ra0u,
                             &Between2536_5_ra1o, Between2536_7_ra1o)) {
      Between2536_7_ra1o.free();
      r0.free();
      Between2536_7_ra2o.free();
      Between2536_5_ra2o = r0;
      Between2536_5_ra3o = Between2536_7_ra2o;
      goto Between2536_5;
    } else {
      r0.free();
      Between2536_7_ra2o.free();
      Between2536_4_ra0o = Between2536_7_ra1o;
      Between2536_4_ra1o = r0;
      Between2536_4_ra2o = Between2536_7_ra2o;
      goto Between2536_4;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Between2536_8: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Between2536_9: {
    DDL::Builder<DDL::UInt<8>> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:230:49--230:49:Many_2807",
                false);
    if (parser_Many_2807(p, &Between2536_7_ra0o, &Between2536_7_ra1o,
                         Between2536_9_ra1o, r0)) {
      Between2536_7_ra2o = Between2536_9_ra2o;
      goto Between2536_7;
    } else {
      Between2536_9_ra2o.free();
      goto Between2536_6;
    }
  }
  // NormalBlock
  Between2536_10: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:230:35--230:41:KW_",
                false);
    if (parser_KW_(p, &Between2536_9_ra0u, &Between2536_9_ra1o,
                   Between2536_10_ra0o, Between2536_10_ra1o)) {
      Between2536_9_ra2o = Between2536_10_ra2o;
      goto Between2536_9;
    } else {
      Between2536_10_ra2o.free();
      goto Between2536_8;
    }
  }
}
bool parser_HexString(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1) {
  
// Parameters for L_0_HexString2537
  DDL::Input HexString2537_0_ra0o;
  HexString2537_0_ra0o = a1;
  goto HexString2537_0;
  // NormalBlock
  HexString2537_0: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(60UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(62UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:153:17--158:3:Between_2536",
                true);
    return parser_Between_2536(p, _result, _result_input,
                               HexString2537_0_ra0o, r0, r1);
  }
}
bool parser_Many_2819(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::Integer>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::UInt<64> a2, DDL::Builder<DDL::Integer> a3) {
  
// Parameters for L_1_Many2819
  DDL::Input Many2819_1_ra0o;
  
// Parameters for L_2_Many2819
  DDL::Integer Many2819_2_ra0o;
  DDL::Input Many2819_2_ra1o;
  DDL::UInt<64> Many2819_2_ra2u;
  DDL::Builder<DDL::Integer> Many2819_2_ra3o;
  
// Parameters for L_3_Many2819
  DDL::Input Many2819_3_ra0o;
  DDL::UInt<64> Many2819_3_ra1u;
  DDL::Builder<DDL::Integer> Many2819_3_ra2o;
  
// Parameters for L_4_Many2819
  DDL::Input Many2819_4_ra1o;
  DDL::Builder<DDL::Integer> Many2819_4_ra0o;
  
// Parameters for L_5_Many2819
  DDL::Input Many2819_5_ra0o;
  DDL::UInt<64> Many2819_5_ra1u;
  DDL::Builder<DDL::Integer> Many2819_5_ra2o;
  Many2819_5_ra0o = a1;
  Many2819_5_ra1u = a2;
  Many2819_5_ra2o = a3;
  goto Many2819_5;
  // ReturnBlock (RetNo NoCapture)
  Many2819_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many2819_1_ra0o, r0);
    Many2819_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2819_2: {
    DDL::UInt<64> r0 = Many2819_2_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<DDL::Integer> r1 = DDL::Builder<DDL::Integer>(Many2819_2_ra3o,
                                                               Many2819_2_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:177:22--177:36:Many_2819",
                true);
    Many2819_5_ra0o = Many2819_2_ra1o;
    Many2819_5_ra1u = r0;
    Many2819_5_ra2o = r1;
    goto Many2819_5;
  }
  // NormalBlock
  Many2819_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:177:29--177:36:HexDigit",
                false);
    Many2819_3_ra0o.copy();
    if (parser_HexDigit(p, &Many2819_2_ra0o, &Many2819_2_ra1o,
                        Many2819_3_ra0o)) {
      Many2819_3_ra0o.free();
      Many2819_2_ra2u = Many2819_3_ra1u;
      Many2819_2_ra3o = Many2819_3_ra2o;
      goto Many2819_2;
    } else {
      Many2819_3_ra2o.free();
      Many2819_1_ra0o = Many2819_3_ra0o;
      goto Many2819_1;
    }
  }
  // NormalBlock
  Many2819_4: {
    p.popDebug();
    *_result = Many2819_4_ra0o;
    *_result_input = Many2819_4_ra1o;
    return true;
  }
  // NormalBlock
  Many2819_5: {
    DDL::Bool r0 = DDL::Bool{Many2819_5_ra1u < DDL::UInt<64>{UINT64_C(2)}};
    if (r0.getValue()) {
      Many2819_3_ra0o = Many2819_5_ra0o;
      Many2819_3_ra1u = Many2819_5_ra1u;
      Many2819_3_ra2o = Many2819_5_ra2o;
      goto Many2819_3;
    } else {
      Many2819_4_ra1o = Many2819_5_ra0o;
      Many2819_4_ra0o = Many2819_5_ra2o;
      goto Many2819_4;
    }
  }
}
bool parser_NameEsc(DDL::ParserStateUser<ReferenceTable> &p,
                    DDL::UInt<8>* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_NameEsc2538
  DDL::Input NameEsc2538_1_ra1o;
  DDL::UInt<8> NameEsc2538_1_ra0u;
  
// Parameters for L_2_NameEsc2538
  DDL::Input NameEsc2538_2_ra0o;
  
// Parameters for L_3_NameEsc2538
  DDL::Integer NameEsc2538_3_ra0o;
  DDL::Input NameEsc2538_3_ra1o;
  
// Parameters for L_5_NameEsc2538
  DDL::Builder<DDL::Integer> NameEsc2538_5_ra0o;
  DDL::Input NameEsc2538_5_ra1o;
  
// Parameters for L_7_NameEsc2538
  DDL::Input NameEsc2538_7_ra0o;
  
// Parameters for L_9_NameEsc2538
  DDL::Input NameEsc2538_9_ra0o;
  
// Parameters for L_10_NameEsc2538
  DDL::Input NameEsc2538_10_ra0o;
  
// Parameters for L_11_NameEsc2538
  DDL::Input NameEsc2538_11_ra1o;
  DDL::Input NameEsc2538_11_ra0o;
  
// Parameters for L_12_NameEsc2538
  DDL::Input NameEsc2538_12_ra0o;
  NameEsc2538_12_ra0o = a1;
  goto NameEsc2538_12;
  // NormalBlock
  NameEsc2538_1: {
    p.popDebug();
    *_result = NameEsc2538_1_ra0u;
    *_result_input = NameEsc2538_1_ra1o;
    return true;
  }
  // NormalBlock
  NameEsc2538_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:178:5--178:18",
               NameEsc2538_2_ra0o, r0);
    NameEsc2538_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock RetPure
  NameEsc2538_3: {
    DDL::UInt<8> r0 = DDL::integer_to_uint<8>(NameEsc2538_3_ra0o);
    NameEsc2538_3_ra0o.free();
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(0)} < r0};
    if (r1.getValue()) {
      NameEsc2538_1_ra1o = NameEsc2538_3_ra1o;
      NameEsc2538_1_ra0u = r0;
      goto NameEsc2538_1;
    } else {
      NameEsc2538_2_ra0o = NameEsc2538_3_ra1o;
      goto NameEsc2538_2;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  NameEsc2538_4: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  NameEsc2538_5: {
    DDL::Array<DDL::Integer> r0 = DDL::Array<DDL::Integer>(NameEsc2538_5_ra0o);
    DDL::Integer r1 = DDL::Integer("16");
    NameEsc2538_3_ra0o = parser_numBase_2507(r1, r0);
    NameEsc2538_3_ra1o = NameEsc2538_5_ra1o;
    goto NameEsc2538_3;
  }
  // NormalBlock
  NameEsc2538_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:176:5--176:10",
               NameEsc2538_7_ra0o, r0);
    NameEsc2538_7_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  NameEsc2538_9: {
    DDL::Input r0 = NameEsc2538_9_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Builder<DDL::Integer> r1;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:177:22--177:36:Many_2819",
                false);
    if (parser_Many_2819(p, &NameEsc2538_5_ra0o, &NameEsc2538_5_ra1o,
                         r0, DDL::UInt<64>{UINT64_C(0)}, r1)) {
      goto NameEsc2538_5;
    } else {
      goto NameEsc2538_4;
    }
  }
  // NormalBlock
  NameEsc2538_10: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:176:5--176:10",
               NameEsc2538_10_ra0o, r0);
    NameEsc2538_10_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  NameEsc2538_11: {
    DDL::UInt<8> r0 = DDL::UInt<8>(NameEsc2538_11_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(35)} == r0};
    if (r1.getValue()) {
      NameEsc2538_11_ra1o.free();
      NameEsc2538_9_ra0o = NameEsc2538_11_ra0o;
      goto NameEsc2538_9;
    } else {
      NameEsc2538_11_ra0o.free();
      NameEsc2538_10_ra0o = NameEsc2538_11_ra1o;
      goto NameEsc2538_10;
    }
  }
  // NormalBlock
  NameEsc2538_12: {
    DDL::Bool r0 = NameEsc2538_12_ra0o.length() == 0;
    NameEsc2538_12_ra0o.copy();
    if (r0.getValue()) {
      NameEsc2538_12_ra0o.free();
      NameEsc2538_7_ra0o = NameEsc2538_12_ra0o;
      goto NameEsc2538_7;
    } else {
      NameEsc2538_11_ra1o = NameEsc2538_12_ra0o;
      NameEsc2538_11_ra0o = NameEsc2538_12_ra0o;
      goto NameEsc2538_11;
    }
  }
}
bool parser_NameChar(DDL::ParserStateUser<ReferenceTable> &p,
                     DDL::UInt<8>* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_NameChar2539
  DDL::Input NameChar2539_1_ra0o;
  
// Parameters for L_2_NameChar2539
  DDL::Input NameChar2539_2_ra0o;
  DDL::Input NameChar2539_2_ra1o;
  
// Parameters for L_4_NameChar2539
  DDL::Input NameChar2539_4_ra0o;
  DDL::UInt<8> NameChar2539_4_ra1u;
  
// Parameters for L_5_NameChar2539
  DDL::Input NameChar2539_5_ra0o;
  DDL::Input NameChar2539_5_ra1o;
  
// Parameters for L_6_NameChar2539
  DDL::Input NameChar2539_6_ra2o;
  DDL::Bool NameChar2539_6_ra0u;
  DDL::Input NameChar2539_6_ra1o;
  DDL::Input NameChar2539_6_ra3o;
  DDL::UInt<8> NameChar2539_6_ra4u;
  
// Parameters for L_7_NameChar2539
  DDL::Input NameChar2539_7_ra3o;
  DDL::Input NameChar2539_7_ra0o;
  DDL::Input NameChar2539_7_ra1o;
  DDL::UInt<8> NameChar2539_7_ra2u;
  
// Parameters for L_8_NameChar2539
  DDL::Input NameChar2539_8_ra4o;
  DDL::Bool NameChar2539_8_ra0u;
  DDL::Input NameChar2539_8_ra1o;
  DDL::Input NameChar2539_8_ra2o;
  DDL::UInt<8> NameChar2539_8_ra3u;
  
// Parameters for L_9_NameChar2539
  DDL::Input NameChar2539_9_ra3o;
  DDL::Input NameChar2539_9_ra0o;
  DDL::Input NameChar2539_9_ra1o;
  DDL::UInt<8> NameChar2539_9_ra2u;
  
// Parameters for L_10_NameChar2539
  DDL::Input NameChar2539_10_ra4o;
  DDL::Bool NameChar2539_10_ra0u;
  DDL::Input NameChar2539_10_ra1o;
  DDL::Input NameChar2539_10_ra2o;
  DDL::UInt<8> NameChar2539_10_ra3u;
  
// Parameters for L_11_NameChar2539
  DDL::Input NameChar2539_11_ra3o;
  DDL::Input NameChar2539_11_ra0o;
  DDL::Input NameChar2539_11_ra1o;
  DDL::UInt<8> NameChar2539_11_ra2u;
  
// Parameters for L_12_NameChar2539
  DDL::Input NameChar2539_12_ra4o;
  DDL::Bool NameChar2539_12_ra0u;
  DDL::Input NameChar2539_12_ra1o;
  DDL::Input NameChar2539_12_ra2o;
  DDL::UInt<8> NameChar2539_12_ra3u;
  
// Parameters for L_13_NameChar2539
  DDL::Input NameChar2539_13_ra3o;
  DDL::Input NameChar2539_13_ra0o;
  DDL::Input NameChar2539_13_ra1o;
  DDL::UInt<8> NameChar2539_13_ra2u;
  
// Parameters for L_14_NameChar2539
  DDL::Input NameChar2539_14_ra4o;
  DDL::Bool NameChar2539_14_ra0u;
  DDL::Input NameChar2539_14_ra1o;
  DDL::Input NameChar2539_14_ra2o;
  DDL::UInt<8> NameChar2539_14_ra3u;
  
// Parameters for L_15_NameChar2539
  DDL::Input NameChar2539_15_ra3o;
  DDL::Input NameChar2539_15_ra0o;
  DDL::Input NameChar2539_15_ra1o;
  DDL::UInt<8> NameChar2539_15_ra2u;
  
// Parameters for L_16_NameChar2539
  DDL::Input NameChar2539_16_ra4o;
  DDL::Bool NameChar2539_16_ra0u;
  DDL::Input NameChar2539_16_ra1o;
  DDL::Input NameChar2539_16_ra2o;
  DDL::UInt<8> NameChar2539_16_ra3u;
  
// Parameters for L_17_NameChar2539
  DDL::Input NameChar2539_17_ra3o;
  DDL::Input NameChar2539_17_ra0o;
  DDL::Input NameChar2539_17_ra1o;
  DDL::UInt<8> NameChar2539_17_ra2u;
  
// Parameters for L_18_NameChar2539
  DDL::Input NameChar2539_18_ra4o;
  DDL::Bool NameChar2539_18_ra0u;
  DDL::Input NameChar2539_18_ra1o;
  DDL::Input NameChar2539_18_ra2o;
  DDL::UInt<8> NameChar2539_18_ra3u;
  
// Parameters for L_19_NameChar2539
  DDL::Input NameChar2539_19_ra3o;
  DDL::Input NameChar2539_19_ra0o;
  DDL::Input NameChar2539_19_ra1o;
  DDL::UInt<8> NameChar2539_19_ra2u;
  
// Parameters for L_20_NameChar2539
  DDL::Input NameChar2539_20_ra4o;
  DDL::Bool NameChar2539_20_ra0u;
  DDL::Input NameChar2539_20_ra1o;
  DDL::Input NameChar2539_20_ra2o;
  DDL::UInt<8> NameChar2539_20_ra3u;
  
// Parameters for L_21_NameChar2539
  DDL::Input NameChar2539_21_ra3o;
  DDL::Input NameChar2539_21_ra0o;
  DDL::Input NameChar2539_21_ra1o;
  DDL::UInt<8> NameChar2539_21_ra2u;
  
// Parameters for L_22_NameChar2539
  DDL::Input NameChar2539_22_ra4o;
  DDL::Bool NameChar2539_22_ra0u;
  DDL::Input NameChar2539_22_ra1o;
  DDL::Input NameChar2539_22_ra2o;
  DDL::UInt<8> NameChar2539_22_ra3u;
  
// Parameters for L_23_NameChar2539
  DDL::Input NameChar2539_23_ra3o;
  DDL::Input NameChar2539_23_ra0o;
  DDL::Input NameChar2539_23_ra1o;
  DDL::UInt<8> NameChar2539_23_ra2u;
  
// Parameters for L_24_NameChar2539
  DDL::Input NameChar2539_24_ra4o;
  DDL::Bool NameChar2539_24_ra0u;
  DDL::Input NameChar2539_24_ra1o;
  DDL::Input NameChar2539_24_ra2o;
  DDL::UInt<8> NameChar2539_24_ra3u;
  
// Parameters for L_25_NameChar2539
  DDL::Input NameChar2539_25_ra3o;
  DDL::Input NameChar2539_25_ra0o;
  DDL::Input NameChar2539_25_ra1o;
  DDL::UInt<8> NameChar2539_25_ra2u;
  
// Parameters for L_26_NameChar2539
  DDL::Input NameChar2539_26_ra4o;
  DDL::Bool NameChar2539_26_ra0u;
  DDL::Input NameChar2539_26_ra1o;
  DDL::Input NameChar2539_26_ra2o;
  DDL::UInt<8> NameChar2539_26_ra3u;
  
// Parameters for L_27_NameChar2539
  DDL::Input NameChar2539_27_ra3o;
  DDL::Input NameChar2539_27_ra0o;
  DDL::Input NameChar2539_27_ra1o;
  DDL::UInt<8> NameChar2539_27_ra2u;
  
// Parameters for L_28_NameChar2539
  DDL::Input NameChar2539_28_ra4o;
  DDL::Bool NameChar2539_28_ra0u;
  DDL::Input NameChar2539_28_ra1o;
  DDL::Input NameChar2539_28_ra2o;
  DDL::UInt<8> NameChar2539_28_ra3u;
  
// Parameters for L_29_NameChar2539
  DDL::Input NameChar2539_29_ra3o;
  DDL::Input NameChar2539_29_ra0o;
  DDL::Input NameChar2539_29_ra1o;
  DDL::UInt<8> NameChar2539_29_ra2u;
  
// Parameters for L_30_NameChar2539
  DDL::Input NameChar2539_30_ra4o;
  DDL::Bool NameChar2539_30_ra0u;
  DDL::Input NameChar2539_30_ra1o;
  DDL::Input NameChar2539_30_ra2o;
  DDL::UInt<8> NameChar2539_30_ra3u;
  
// Parameters for L_31_NameChar2539
  DDL::Input NameChar2539_31_ra3o;
  DDL::Input NameChar2539_31_ra0o;
  DDL::Input NameChar2539_31_ra1o;
  DDL::UInt<8> NameChar2539_31_ra2u;
  
// Parameters for L_32_NameChar2539
  DDL::Input NameChar2539_32_ra4o;
  DDL::Bool NameChar2539_32_ra0u;
  DDL::Input NameChar2539_32_ra1o;
  DDL::Input NameChar2539_32_ra2o;
  DDL::UInt<8> NameChar2539_32_ra3u;
  
// Parameters for L_33_NameChar2539
  DDL::Input NameChar2539_33_ra3o;
  DDL::Input NameChar2539_33_ra0o;
  DDL::Input NameChar2539_33_ra1o;
  DDL::UInt<8> NameChar2539_33_ra2u;
  
// Parameters for L_34_NameChar2539
  DDL::Input NameChar2539_34_ra4o;
  DDL::Bool NameChar2539_34_ra0u;
  DDL::Input NameChar2539_34_ra1o;
  DDL::Input NameChar2539_34_ra2o;
  DDL::UInt<8> NameChar2539_34_ra3u;
  
// Parameters for L_35_NameChar2539
  DDL::Input NameChar2539_35_ra3o;
  DDL::Input NameChar2539_35_ra0o;
  DDL::Input NameChar2539_35_ra1o;
  DDL::UInt<8> NameChar2539_35_ra2u;
  
// Parameters for L_36_NameChar2539
  DDL::Input NameChar2539_36_ra4o;
  DDL::Bool NameChar2539_36_ra0u;
  DDL::Input NameChar2539_36_ra1o;
  DDL::Input NameChar2539_36_ra2o;
  DDL::UInt<8> NameChar2539_36_ra3u;
  
// Parameters for L_37_NameChar2539
  DDL::Input NameChar2539_37_ra3o;
  DDL::Input NameChar2539_37_ra0o;
  DDL::Input NameChar2539_37_ra1o;
  DDL::UInt<8> NameChar2539_37_ra2u;
  
// Parameters for L_38_NameChar2539
  DDL::Input NameChar2539_38_ra3o;
  DDL::UInt<8> NameChar2539_38_ra0u;
  DDL::Input NameChar2539_38_ra1o;
  DDL::Input NameChar2539_38_ra2o;
  
// Parameters for L_39_NameChar2539
  DDL::Input NameChar2539_39_ra3o;
  DDL::UInt<8> NameChar2539_39_ra0u;
  DDL::Input NameChar2539_39_ra1o;
  DDL::Input NameChar2539_39_ra2o;
  
// Parameters for L_40_NameChar2539
  DDL::Input NameChar2539_40_ra3o;
  DDL::UInt<8> NameChar2539_40_ra0u;
  DDL::Input NameChar2539_40_ra1o;
  DDL::Input NameChar2539_40_ra2o;
  
// Parameters for L_41_NameChar2539
  DDL::Input NameChar2539_41_ra3o;
  DDL::UInt<8> NameChar2539_41_ra0u;
  DDL::Input NameChar2539_41_ra1o;
  DDL::Input NameChar2539_41_ra2o;
  
// Parameters for L_42_NameChar2539
  DDL::Input NameChar2539_42_ra3o;
  DDL::UInt<8> NameChar2539_42_ra0u;
  DDL::Input NameChar2539_42_ra1o;
  DDL::Input NameChar2539_42_ra2o;
  
// Parameters for L_43_NameChar2539
  DDL::Input NameChar2539_43_ra3o;
  DDL::UInt<8> NameChar2539_43_ra0u;
  DDL::Input NameChar2539_43_ra1o;
  DDL::Input NameChar2539_43_ra2o;
  
// Parameters for L_44_NameChar2539
  DDL::Input NameChar2539_44_ra3o;
  DDL::UInt<8> NameChar2539_44_ra0u;
  DDL::Input NameChar2539_44_ra1o;
  DDL::Input NameChar2539_44_ra2o;
  
// Parameters for L_45_NameChar2539
  DDL::Input NameChar2539_45_ra3o;
  DDL::UInt<8> NameChar2539_45_ra0u;
  DDL::Input NameChar2539_45_ra1o;
  DDL::Input NameChar2539_45_ra2o;
  
// Parameters for L_46_NameChar2539
  DDL::Input NameChar2539_46_ra3o;
  DDL::UInt<8> NameChar2539_46_ra0u;
  DDL::Input NameChar2539_46_ra1o;
  DDL::Input NameChar2539_46_ra2o;
  
// Parameters for L_47_NameChar2539
  DDL::Input NameChar2539_47_ra3o;
  DDL::UInt<8> NameChar2539_47_ra0u;
  DDL::Input NameChar2539_47_ra1o;
  DDL::Input NameChar2539_47_ra2o;
  
// Parameters for L_48_NameChar2539
  DDL::Input NameChar2539_48_ra3o;
  DDL::UInt<8> NameChar2539_48_ra0u;
  DDL::Input NameChar2539_48_ra1o;
  DDL::Input NameChar2539_48_ra2o;
  
// Parameters for L_49_NameChar2539
  DDL::Input NameChar2539_49_ra3o;
  DDL::UInt<8> NameChar2539_49_ra0u;
  DDL::Input NameChar2539_49_ra1o;
  DDL::Input NameChar2539_49_ra2o;
  
// Parameters for L_50_NameChar2539
  DDL::Input NameChar2539_50_ra3o;
  DDL::UInt<8> NameChar2539_50_ra0u;
  DDL::Input NameChar2539_50_ra1o;
  DDL::Input NameChar2539_50_ra2o;
  
// Parameters for L_51_NameChar2539
  DDL::Input NameChar2539_51_ra3o;
  DDL::UInt<8> NameChar2539_51_ra0u;
  DDL::Input NameChar2539_51_ra1o;
  DDL::Input NameChar2539_51_ra2o;
  
// Parameters for L_52_NameChar2539
  DDL::Input NameChar2539_52_ra3o;
  DDL::UInt<8> NameChar2539_52_ra0u;
  DDL::Input NameChar2539_52_ra1o;
  DDL::Input NameChar2539_52_ra2o;
  
// Parameters for L_53_NameChar2539
  DDL::Input NameChar2539_53_ra3o;
  DDL::UInt<8> NameChar2539_53_ra0u;
  DDL::Input NameChar2539_53_ra1o;
  DDL::Input NameChar2539_53_ra2o;
  
// Parameters for L_54_NameChar2539
  DDL::Input NameChar2539_54_ra2o;
  DDL::Input NameChar2539_54_ra0o;
  DDL::Input NameChar2539_54_ra1o;
  
// Parameters for L_55_NameChar2539
  DDL::Input NameChar2539_55_ra0o;
  NameChar2539_55_ra0o = a1;
  goto NameChar2539_55;
  // NormalBlock
  NameChar2539_1: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:172:18--172:24:NameEsc",
                true);
    return parser_NameEsc(p, _result, _result_input,
                          NameChar2539_1_ra0o);
  }
  // NormalBlock
  NameChar2539_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:171:18--171:50",
               NameChar2539_2_ra0o, r0);
    NameChar2539_2_ra0o.free();
    r0.free();
    NameChar2539_1_ra0o = NameChar2539_2_ra1o;
    goto NameChar2539_1;
  }
  // NormalBlock
  NameChar2539_4: {
    DDL::Input r0 = NameChar2539_4_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = NameChar2539_4_ra1u;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  NameChar2539_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:171:18--171:50",
               NameChar2539_5_ra0o, r0);
    NameChar2539_5_ra0o.free();
    r0.free();
    NameChar2539_1_ra0o = NameChar2539_5_ra1o;
    goto NameChar2539_1;
  }
  // NormalBlock
  NameChar2539_6: {
    DDL::Bool r0 = !NameChar2539_6_ra0u;
    if (r0.getValue()) {
      NameChar2539_6_ra1o.free();
      NameChar2539_6_ra2o.free();
      NameChar2539_4_ra0o = NameChar2539_6_ra3o;
      NameChar2539_4_ra1u = NameChar2539_6_ra4u;
      goto NameChar2539_4;
    } else {
      NameChar2539_6_ra3o.free();
      NameChar2539_5_ra0o = NameChar2539_6_ra2o;
      NameChar2539_5_ra1o = NameChar2539_6_ra1o;
      goto NameChar2539_5;
    }
  }
  // NormalBlock
  NameChar2539_7: {
    NameChar2539_6_ra2o = NameChar2539_7_ra3o;
    NameChar2539_6_ra0u = DDL::Bool(true);
    NameChar2539_6_ra1o = NameChar2539_7_ra0o;
    NameChar2539_6_ra3o = NameChar2539_7_ra1o;
    NameChar2539_6_ra4u = NameChar2539_7_ra2u;
    goto NameChar2539_6;
  }
  // NormalBlock
  NameChar2539_8: {
    NameChar2539_6_ra2o = NameChar2539_8_ra4o;
    NameChar2539_6_ra0u = NameChar2539_8_ra0u;
    NameChar2539_6_ra1o = NameChar2539_8_ra1o;
    NameChar2539_6_ra3o = NameChar2539_8_ra2o;
    NameChar2539_6_ra4u = NameChar2539_8_ra3u;
    goto NameChar2539_6;
  }
  // NormalBlock
  NameChar2539_9: {
    NameChar2539_8_ra4o = NameChar2539_9_ra3o;
    NameChar2539_8_ra0u = DDL::Bool(true);
    NameChar2539_8_ra1o = NameChar2539_9_ra0o;
    NameChar2539_8_ra2o = NameChar2539_9_ra1o;
    NameChar2539_8_ra3u = NameChar2539_9_ra2u;
    goto NameChar2539_8;
  }
  // NormalBlock
  NameChar2539_10: {
    NameChar2539_8_ra4o = NameChar2539_10_ra4o;
    NameChar2539_8_ra0u = NameChar2539_10_ra0u;
    NameChar2539_8_ra1o = NameChar2539_10_ra1o;
    NameChar2539_8_ra2o = NameChar2539_10_ra2o;
    NameChar2539_8_ra3u = NameChar2539_10_ra3u;
    goto NameChar2539_8;
  }
  // NormalBlock
  NameChar2539_11: {
    NameChar2539_10_ra4o = NameChar2539_11_ra3o;
    NameChar2539_10_ra0u = DDL::Bool(true);
    NameChar2539_10_ra1o = NameChar2539_11_ra0o;
    NameChar2539_10_ra2o = NameChar2539_11_ra1o;
    NameChar2539_10_ra3u = NameChar2539_11_ra2u;
    goto NameChar2539_10;
  }
  // NormalBlock
  NameChar2539_12: {
    NameChar2539_10_ra4o = NameChar2539_12_ra4o;
    NameChar2539_10_ra0u = NameChar2539_12_ra0u;
    NameChar2539_10_ra1o = NameChar2539_12_ra1o;
    NameChar2539_10_ra2o = NameChar2539_12_ra2o;
    NameChar2539_10_ra3u = NameChar2539_12_ra3u;
    goto NameChar2539_10;
  }
  // NormalBlock
  NameChar2539_13: {
    NameChar2539_12_ra4o = NameChar2539_13_ra3o;
    NameChar2539_12_ra0u = DDL::Bool(true);
    NameChar2539_12_ra1o = NameChar2539_13_ra0o;
    NameChar2539_12_ra2o = NameChar2539_13_ra1o;
    NameChar2539_12_ra3u = NameChar2539_13_ra2u;
    goto NameChar2539_12;
  }
  // NormalBlock
  NameChar2539_14: {
    NameChar2539_12_ra4o = NameChar2539_14_ra4o;
    NameChar2539_12_ra0u = NameChar2539_14_ra0u;
    NameChar2539_12_ra1o = NameChar2539_14_ra1o;
    NameChar2539_12_ra2o = NameChar2539_14_ra2o;
    NameChar2539_12_ra3u = NameChar2539_14_ra3u;
    goto NameChar2539_12;
  }
  // NormalBlock
  NameChar2539_15: {
    NameChar2539_14_ra4o = NameChar2539_15_ra3o;
    NameChar2539_14_ra0u = DDL::Bool(true);
    NameChar2539_14_ra1o = NameChar2539_15_ra0o;
    NameChar2539_14_ra2o = NameChar2539_15_ra1o;
    NameChar2539_14_ra3u = NameChar2539_15_ra2u;
    goto NameChar2539_14;
  }
  // NormalBlock
  NameChar2539_16: {
    NameChar2539_14_ra4o = NameChar2539_16_ra4o;
    NameChar2539_14_ra0u = NameChar2539_16_ra0u;
    NameChar2539_14_ra1o = NameChar2539_16_ra1o;
    NameChar2539_14_ra2o = NameChar2539_16_ra2o;
    NameChar2539_14_ra3u = NameChar2539_16_ra3u;
    goto NameChar2539_14;
  }
  // NormalBlock
  NameChar2539_17: {
    NameChar2539_16_ra4o = NameChar2539_17_ra3o;
    NameChar2539_16_ra0u = DDL::Bool(true);
    NameChar2539_16_ra1o = NameChar2539_17_ra0o;
    NameChar2539_16_ra2o = NameChar2539_17_ra1o;
    NameChar2539_16_ra3u = NameChar2539_17_ra2u;
    goto NameChar2539_16;
  }
  // NormalBlock
  NameChar2539_18: {
    NameChar2539_16_ra4o = NameChar2539_18_ra4o;
    NameChar2539_16_ra0u = NameChar2539_18_ra0u;
    NameChar2539_16_ra1o = NameChar2539_18_ra1o;
    NameChar2539_16_ra2o = NameChar2539_18_ra2o;
    NameChar2539_16_ra3u = NameChar2539_18_ra3u;
    goto NameChar2539_16;
  }
  // NormalBlock
  NameChar2539_19: {
    NameChar2539_18_ra4o = NameChar2539_19_ra3o;
    NameChar2539_18_ra0u = DDL::Bool(true);
    NameChar2539_18_ra1o = NameChar2539_19_ra0o;
    NameChar2539_18_ra2o = NameChar2539_19_ra1o;
    NameChar2539_18_ra3u = NameChar2539_19_ra2u;
    goto NameChar2539_18;
  }
  // NormalBlock
  NameChar2539_20: {
    NameChar2539_18_ra4o = NameChar2539_20_ra4o;
    NameChar2539_18_ra0u = NameChar2539_20_ra0u;
    NameChar2539_18_ra1o = NameChar2539_20_ra1o;
    NameChar2539_18_ra2o = NameChar2539_20_ra2o;
    NameChar2539_18_ra3u = NameChar2539_20_ra3u;
    goto NameChar2539_18;
  }
  // NormalBlock
  NameChar2539_21: {
    NameChar2539_20_ra4o = NameChar2539_21_ra3o;
    NameChar2539_20_ra0u = DDL::Bool(true);
    NameChar2539_20_ra1o = NameChar2539_21_ra0o;
    NameChar2539_20_ra2o = NameChar2539_21_ra1o;
    NameChar2539_20_ra3u = NameChar2539_21_ra2u;
    goto NameChar2539_20;
  }
  // NormalBlock
  NameChar2539_22: {
    NameChar2539_20_ra4o = NameChar2539_22_ra4o;
    NameChar2539_20_ra0u = NameChar2539_22_ra0u;
    NameChar2539_20_ra1o = NameChar2539_22_ra1o;
    NameChar2539_20_ra2o = NameChar2539_22_ra2o;
    NameChar2539_20_ra3u = NameChar2539_22_ra3u;
    goto NameChar2539_20;
  }
  // NormalBlock
  NameChar2539_23: {
    NameChar2539_22_ra4o = NameChar2539_23_ra3o;
    NameChar2539_22_ra0u = DDL::Bool(true);
    NameChar2539_22_ra1o = NameChar2539_23_ra0o;
    NameChar2539_22_ra2o = NameChar2539_23_ra1o;
    NameChar2539_22_ra3u = NameChar2539_23_ra2u;
    goto NameChar2539_22;
  }
  // NormalBlock
  NameChar2539_24: {
    NameChar2539_22_ra4o = NameChar2539_24_ra4o;
    NameChar2539_22_ra0u = NameChar2539_24_ra0u;
    NameChar2539_22_ra1o = NameChar2539_24_ra1o;
    NameChar2539_22_ra2o = NameChar2539_24_ra2o;
    NameChar2539_22_ra3u = NameChar2539_24_ra3u;
    goto NameChar2539_22;
  }
  // NormalBlock
  NameChar2539_25: {
    NameChar2539_24_ra4o = NameChar2539_25_ra3o;
    NameChar2539_24_ra0u = DDL::Bool(true);
    NameChar2539_24_ra1o = NameChar2539_25_ra0o;
    NameChar2539_24_ra2o = NameChar2539_25_ra1o;
    NameChar2539_24_ra3u = NameChar2539_25_ra2u;
    goto NameChar2539_24;
  }
  // NormalBlock
  NameChar2539_26: {
    NameChar2539_24_ra4o = NameChar2539_26_ra4o;
    NameChar2539_24_ra0u = NameChar2539_26_ra0u;
    NameChar2539_24_ra1o = NameChar2539_26_ra1o;
    NameChar2539_24_ra2o = NameChar2539_26_ra2o;
    NameChar2539_24_ra3u = NameChar2539_26_ra3u;
    goto NameChar2539_24;
  }
  // NormalBlock
  NameChar2539_27: {
    NameChar2539_26_ra4o = NameChar2539_27_ra3o;
    NameChar2539_26_ra0u = DDL::Bool(true);
    NameChar2539_26_ra1o = NameChar2539_27_ra0o;
    NameChar2539_26_ra2o = NameChar2539_27_ra1o;
    NameChar2539_26_ra3u = NameChar2539_27_ra2u;
    goto NameChar2539_26;
  }
  // NormalBlock
  NameChar2539_28: {
    NameChar2539_26_ra4o = NameChar2539_28_ra4o;
    NameChar2539_26_ra0u = NameChar2539_28_ra0u;
    NameChar2539_26_ra1o = NameChar2539_28_ra1o;
    NameChar2539_26_ra2o = NameChar2539_28_ra2o;
    NameChar2539_26_ra3u = NameChar2539_28_ra3u;
    goto NameChar2539_26;
  }
  // NormalBlock
  NameChar2539_29: {
    NameChar2539_28_ra4o = NameChar2539_29_ra3o;
    NameChar2539_28_ra0u = DDL::Bool(true);
    NameChar2539_28_ra1o = NameChar2539_29_ra0o;
    NameChar2539_28_ra2o = NameChar2539_29_ra1o;
    NameChar2539_28_ra3u = NameChar2539_29_ra2u;
    goto NameChar2539_28;
  }
  // NormalBlock
  NameChar2539_30: {
    NameChar2539_28_ra4o = NameChar2539_30_ra4o;
    NameChar2539_28_ra0u = NameChar2539_30_ra0u;
    NameChar2539_28_ra1o = NameChar2539_30_ra1o;
    NameChar2539_28_ra2o = NameChar2539_30_ra2o;
    NameChar2539_28_ra3u = NameChar2539_30_ra3u;
    goto NameChar2539_28;
  }
  // NormalBlock
  NameChar2539_31: {
    NameChar2539_30_ra4o = NameChar2539_31_ra3o;
    NameChar2539_30_ra0u = DDL::Bool(true);
    NameChar2539_30_ra1o = NameChar2539_31_ra0o;
    NameChar2539_30_ra2o = NameChar2539_31_ra1o;
    NameChar2539_30_ra3u = NameChar2539_31_ra2u;
    goto NameChar2539_30;
  }
  // NormalBlock
  NameChar2539_32: {
    NameChar2539_30_ra4o = NameChar2539_32_ra4o;
    NameChar2539_30_ra0u = NameChar2539_32_ra0u;
    NameChar2539_30_ra1o = NameChar2539_32_ra1o;
    NameChar2539_30_ra2o = NameChar2539_32_ra2o;
    NameChar2539_30_ra3u = NameChar2539_32_ra3u;
    goto NameChar2539_30;
  }
  // NormalBlock
  NameChar2539_33: {
    NameChar2539_32_ra4o = NameChar2539_33_ra3o;
    NameChar2539_32_ra0u = DDL::Bool(true);
    NameChar2539_32_ra1o = NameChar2539_33_ra0o;
    NameChar2539_32_ra2o = NameChar2539_33_ra1o;
    NameChar2539_32_ra3u = NameChar2539_33_ra2u;
    goto NameChar2539_32;
  }
  // NormalBlock
  NameChar2539_34: {
    NameChar2539_32_ra4o = NameChar2539_34_ra4o;
    NameChar2539_32_ra0u = NameChar2539_34_ra0u;
    NameChar2539_32_ra1o = NameChar2539_34_ra1o;
    NameChar2539_32_ra2o = NameChar2539_34_ra2o;
    NameChar2539_32_ra3u = NameChar2539_34_ra3u;
    goto NameChar2539_32;
  }
  // NormalBlock
  NameChar2539_35: {
    NameChar2539_34_ra4o = NameChar2539_35_ra3o;
    NameChar2539_34_ra0u = DDL::Bool(true);
    NameChar2539_34_ra1o = NameChar2539_35_ra0o;
    NameChar2539_34_ra2o = NameChar2539_35_ra1o;
    NameChar2539_34_ra3u = NameChar2539_35_ra2u;
    goto NameChar2539_34;
  }
  // NormalBlock
  NameChar2539_36: {
    NameChar2539_34_ra4o = NameChar2539_36_ra4o;
    NameChar2539_34_ra0u = NameChar2539_36_ra0u;
    NameChar2539_34_ra1o = NameChar2539_36_ra1o;
    NameChar2539_34_ra2o = NameChar2539_36_ra2o;
    NameChar2539_34_ra3u = NameChar2539_36_ra3u;
    goto NameChar2539_34;
  }
  // NormalBlock
  NameChar2539_37: {
    NameChar2539_36_ra4o = NameChar2539_37_ra3o;
    NameChar2539_36_ra0u = DDL::Bool(true);
    NameChar2539_36_ra1o = NameChar2539_37_ra0o;
    NameChar2539_36_ra2o = NameChar2539_37_ra1o;
    NameChar2539_36_ra3u = NameChar2539_37_ra2u;
    goto NameChar2539_36;
  }
  // NormalBlock
  NameChar2539_38: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(35)} == NameChar2539_38_ra0u};
    NameChar2539_36_ra4o = NameChar2539_38_ra3o;
    NameChar2539_36_ra0u = r0;
    NameChar2539_36_ra1o = NameChar2539_38_ra1o;
    NameChar2539_36_ra2o = NameChar2539_38_ra2o;
    NameChar2539_36_ra3u = NameChar2539_38_ra0u;
    goto NameChar2539_36;
  }
  // NormalBlock
  NameChar2539_39: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(37)} == NameChar2539_39_ra0u};
    if (r0.getValue()) {
      NameChar2539_37_ra3o = NameChar2539_39_ra3o;
      NameChar2539_37_ra0o = NameChar2539_39_ra1o;
      NameChar2539_37_ra1o = NameChar2539_39_ra2o;
      NameChar2539_37_ra2u = NameChar2539_39_ra0u;
      goto NameChar2539_37;
    } else {
      NameChar2539_38_ra3o = NameChar2539_39_ra3o;
      NameChar2539_38_ra0u = NameChar2539_39_ra0u;
      NameChar2539_38_ra1o = NameChar2539_39_ra1o;
      NameChar2539_38_ra2o = NameChar2539_39_ra2o;
      goto NameChar2539_38;
    }
  }
  // NormalBlock
  NameChar2539_40: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(47)} == NameChar2539_40_ra0u};
    if (r0.getValue()) {
      NameChar2539_35_ra3o = NameChar2539_40_ra3o;
      NameChar2539_35_ra0o = NameChar2539_40_ra1o;
      NameChar2539_35_ra1o = NameChar2539_40_ra2o;
      NameChar2539_35_ra2u = NameChar2539_40_ra0u;
      goto NameChar2539_35;
    } else {
      NameChar2539_39_ra3o = NameChar2539_40_ra3o;
      NameChar2539_39_ra0u = NameChar2539_40_ra0u;
      NameChar2539_39_ra1o = NameChar2539_40_ra1o;
      NameChar2539_39_ra2o = NameChar2539_40_ra2o;
      goto NameChar2539_39;
    }
  }
  // NormalBlock
  NameChar2539_41: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(125)} == NameChar2539_41_ra0u};
    if (r0.getValue()) {
      NameChar2539_33_ra3o = NameChar2539_41_ra3o;
      NameChar2539_33_ra0o = NameChar2539_41_ra1o;
      NameChar2539_33_ra1o = NameChar2539_41_ra2o;
      NameChar2539_33_ra2u = NameChar2539_41_ra0u;
      goto NameChar2539_33;
    } else {
      NameChar2539_40_ra3o = NameChar2539_41_ra3o;
      NameChar2539_40_ra0u = NameChar2539_41_ra0u;
      NameChar2539_40_ra1o = NameChar2539_41_ra1o;
      NameChar2539_40_ra2o = NameChar2539_41_ra2o;
      goto NameChar2539_40;
    }
  }
  // NormalBlock
  NameChar2539_42: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(123)} == NameChar2539_42_ra0u};
    if (r0.getValue()) {
      NameChar2539_31_ra3o = NameChar2539_42_ra3o;
      NameChar2539_31_ra0o = NameChar2539_42_ra1o;
      NameChar2539_31_ra1o = NameChar2539_42_ra2o;
      NameChar2539_31_ra2u = NameChar2539_42_ra0u;
      goto NameChar2539_31;
    } else {
      NameChar2539_41_ra3o = NameChar2539_42_ra3o;
      NameChar2539_41_ra0u = NameChar2539_42_ra0u;
      NameChar2539_41_ra1o = NameChar2539_42_ra1o;
      NameChar2539_41_ra2o = NameChar2539_42_ra2o;
      goto NameChar2539_41;
    }
  }
  // NormalBlock
  NameChar2539_43: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(93)} == NameChar2539_43_ra0u};
    if (r0.getValue()) {
      NameChar2539_29_ra3o = NameChar2539_43_ra3o;
      NameChar2539_29_ra0o = NameChar2539_43_ra1o;
      NameChar2539_29_ra1o = NameChar2539_43_ra2o;
      NameChar2539_29_ra2u = NameChar2539_43_ra0u;
      goto NameChar2539_29;
    } else {
      NameChar2539_42_ra3o = NameChar2539_43_ra3o;
      NameChar2539_42_ra0u = NameChar2539_43_ra0u;
      NameChar2539_42_ra1o = NameChar2539_43_ra1o;
      NameChar2539_42_ra2o = NameChar2539_43_ra2o;
      goto NameChar2539_42;
    }
  }
  // NormalBlock
  NameChar2539_44: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(91)} == NameChar2539_44_ra0u};
    if (r0.getValue()) {
      NameChar2539_27_ra3o = NameChar2539_44_ra3o;
      NameChar2539_27_ra0o = NameChar2539_44_ra1o;
      NameChar2539_27_ra1o = NameChar2539_44_ra2o;
      NameChar2539_27_ra2u = NameChar2539_44_ra0u;
      goto NameChar2539_27;
    } else {
      NameChar2539_43_ra3o = NameChar2539_44_ra3o;
      NameChar2539_43_ra0u = NameChar2539_44_ra0u;
      NameChar2539_43_ra1o = NameChar2539_44_ra1o;
      NameChar2539_43_ra2o = NameChar2539_44_ra2o;
      goto NameChar2539_43;
    }
  }
  // NormalBlock
  NameChar2539_45: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(62)} == NameChar2539_45_ra0u};
    if (r0.getValue()) {
      NameChar2539_25_ra3o = NameChar2539_45_ra3o;
      NameChar2539_25_ra0o = NameChar2539_45_ra1o;
      NameChar2539_25_ra1o = NameChar2539_45_ra2o;
      NameChar2539_25_ra2u = NameChar2539_45_ra0u;
      goto NameChar2539_25;
    } else {
      NameChar2539_44_ra3o = NameChar2539_45_ra3o;
      NameChar2539_44_ra0u = NameChar2539_45_ra0u;
      NameChar2539_44_ra1o = NameChar2539_45_ra1o;
      NameChar2539_44_ra2o = NameChar2539_45_ra2o;
      goto NameChar2539_44;
    }
  }
  // NormalBlock
  NameChar2539_46: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(60)} == NameChar2539_46_ra0u};
    if (r0.getValue()) {
      NameChar2539_23_ra3o = NameChar2539_46_ra3o;
      NameChar2539_23_ra0o = NameChar2539_46_ra1o;
      NameChar2539_23_ra1o = NameChar2539_46_ra2o;
      NameChar2539_23_ra2u = NameChar2539_46_ra0u;
      goto NameChar2539_23;
    } else {
      NameChar2539_45_ra3o = NameChar2539_46_ra3o;
      NameChar2539_45_ra0u = NameChar2539_46_ra0u;
      NameChar2539_45_ra1o = NameChar2539_46_ra1o;
      NameChar2539_45_ra2o = NameChar2539_46_ra2o;
      goto NameChar2539_45;
    }
  }
  // NormalBlock
  NameChar2539_47: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(41)} == NameChar2539_47_ra0u};
    if (r0.getValue()) {
      NameChar2539_21_ra3o = NameChar2539_47_ra3o;
      NameChar2539_21_ra0o = NameChar2539_47_ra1o;
      NameChar2539_21_ra1o = NameChar2539_47_ra2o;
      NameChar2539_21_ra2u = NameChar2539_47_ra0u;
      goto NameChar2539_21;
    } else {
      NameChar2539_46_ra3o = NameChar2539_47_ra3o;
      NameChar2539_46_ra0u = NameChar2539_47_ra0u;
      NameChar2539_46_ra1o = NameChar2539_47_ra1o;
      NameChar2539_46_ra2o = NameChar2539_47_ra2o;
      goto NameChar2539_46;
    }
  }
  // NormalBlock
  NameChar2539_48: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(40)} == NameChar2539_48_ra0u};
    if (r0.getValue()) {
      NameChar2539_19_ra3o = NameChar2539_48_ra3o;
      NameChar2539_19_ra0o = NameChar2539_48_ra1o;
      NameChar2539_19_ra1o = NameChar2539_48_ra2o;
      NameChar2539_19_ra2u = NameChar2539_48_ra0u;
      goto NameChar2539_19;
    } else {
      NameChar2539_47_ra3o = NameChar2539_48_ra3o;
      NameChar2539_47_ra0u = NameChar2539_48_ra0u;
      NameChar2539_47_ra1o = NameChar2539_48_ra1o;
      NameChar2539_47_ra2o = NameChar2539_48_ra2o;
      goto NameChar2539_47;
    }
  }
  // NormalBlock
  NameChar2539_49: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(32)} == NameChar2539_49_ra0u};
    if (r0.getValue()) {
      NameChar2539_17_ra3o = NameChar2539_49_ra3o;
      NameChar2539_17_ra0o = NameChar2539_49_ra1o;
      NameChar2539_17_ra1o = NameChar2539_49_ra2o;
      NameChar2539_17_ra2u = NameChar2539_49_ra0u;
      goto NameChar2539_17;
    } else {
      NameChar2539_48_ra3o = NameChar2539_49_ra3o;
      NameChar2539_48_ra0u = NameChar2539_49_ra0u;
      NameChar2539_48_ra1o = NameChar2539_49_ra1o;
      NameChar2539_48_ra2o = NameChar2539_49_ra2o;
      goto NameChar2539_48;
    }
  }
  // NormalBlock
  NameChar2539_50: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(13)} == NameChar2539_50_ra0u};
    if (r0.getValue()) {
      NameChar2539_15_ra3o = NameChar2539_50_ra3o;
      NameChar2539_15_ra0o = NameChar2539_50_ra1o;
      NameChar2539_15_ra1o = NameChar2539_50_ra2o;
      NameChar2539_15_ra2u = NameChar2539_50_ra0u;
      goto NameChar2539_15;
    } else {
      NameChar2539_49_ra3o = NameChar2539_50_ra3o;
      NameChar2539_49_ra0u = NameChar2539_50_ra0u;
      NameChar2539_49_ra1o = NameChar2539_50_ra1o;
      NameChar2539_49_ra2o = NameChar2539_50_ra2o;
      goto NameChar2539_49;
    }
  }
  // NormalBlock
  NameChar2539_51: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(12)} == NameChar2539_51_ra0u};
    if (r0.getValue()) {
      NameChar2539_13_ra3o = NameChar2539_51_ra3o;
      NameChar2539_13_ra0o = NameChar2539_51_ra1o;
      NameChar2539_13_ra1o = NameChar2539_51_ra2o;
      NameChar2539_13_ra2u = NameChar2539_51_ra0u;
      goto NameChar2539_13;
    } else {
      NameChar2539_50_ra3o = NameChar2539_51_ra3o;
      NameChar2539_50_ra0u = NameChar2539_51_ra0u;
      NameChar2539_50_ra1o = NameChar2539_51_ra1o;
      NameChar2539_50_ra2o = NameChar2539_51_ra2o;
      goto NameChar2539_50;
    }
  }
  // NormalBlock
  NameChar2539_52: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(10)} == NameChar2539_52_ra0u};
    if (r0.getValue()) {
      NameChar2539_11_ra3o = NameChar2539_52_ra3o;
      NameChar2539_11_ra0o = NameChar2539_52_ra1o;
      NameChar2539_11_ra1o = NameChar2539_52_ra2o;
      NameChar2539_11_ra2u = NameChar2539_52_ra0u;
      goto NameChar2539_11;
    } else {
      NameChar2539_51_ra3o = NameChar2539_52_ra3o;
      NameChar2539_51_ra0u = NameChar2539_52_ra0u;
      NameChar2539_51_ra1o = NameChar2539_52_ra1o;
      NameChar2539_51_ra2o = NameChar2539_52_ra2o;
      goto NameChar2539_51;
    }
  }
  // NormalBlock
  NameChar2539_53: {
    DDL::Bool r0 = DDL::Bool{DDL::UInt<8>{UINT8_C(9)} == NameChar2539_53_ra0u};
    if (r0.getValue()) {
      NameChar2539_9_ra3o = NameChar2539_53_ra3o;
      NameChar2539_9_ra0o = NameChar2539_53_ra1o;
      NameChar2539_9_ra1o = NameChar2539_53_ra2o;
      NameChar2539_9_ra2u = NameChar2539_53_ra0u;
      goto NameChar2539_9;
    } else {
      NameChar2539_52_ra3o = NameChar2539_53_ra3o;
      NameChar2539_52_ra0u = NameChar2539_53_ra0u;
      NameChar2539_52_ra1o = NameChar2539_53_ra1o;
      NameChar2539_52_ra2o = NameChar2539_53_ra2o;
      goto NameChar2539_52;
    }
  }
  // NormalBlock
  NameChar2539_54: {
    DDL::UInt<8> r0 = DDL::UInt<8>(NameChar2539_54_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(0)} == r0};
    if (r1.getValue()) {
      NameChar2539_7_ra3o = NameChar2539_54_ra2o;
      NameChar2539_7_ra0o = NameChar2539_54_ra1o;
      NameChar2539_7_ra1o = NameChar2539_54_ra0o;
      NameChar2539_7_ra2u = r0;
      goto NameChar2539_7;
    } else {
      NameChar2539_53_ra3o = NameChar2539_54_ra2o;
      NameChar2539_53_ra0u = r0;
      NameChar2539_53_ra1o = NameChar2539_54_ra1o;
      NameChar2539_53_ra2o = NameChar2539_54_ra0o;
      goto NameChar2539_53;
    }
  }
  // NormalBlock
  NameChar2539_55: {
    DDL::Bool r0 = NameChar2539_55_ra0o.length() == 0;
    NameChar2539_55_ra0o.copy();
    NameChar2539_55_ra0o.copy();
    NameChar2539_55_ra0o.copy();
    if (r0.getValue()) {
      NameChar2539_55_ra0o.free();
      NameChar2539_55_ra0o.free();
      NameChar2539_2_ra0o = NameChar2539_55_ra0o;
      NameChar2539_2_ra1o = NameChar2539_55_ra0o;
      goto NameChar2539_2;
    } else {
      NameChar2539_55_ra0o.free();
      NameChar2539_54_ra2o = NameChar2539_55_ra0o;
      NameChar2539_54_ra0o = NameChar2539_55_ra0o;
      NameChar2539_54_ra1o = NameChar2539_55_ra0o;
      goto NameChar2539_54;
    }
  }
}
bool parser_Many_2828(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Builder<DDL::UInt<8>> a2) {
  
// Parameters for L_0_Many2828
  DDL::Input Many2828_0_ra2o;
  DDL::Builder<DDL::UInt<8>> Many2828_0_ra0o;
  DDL::Maybe<DDL::UInt<8>> Many2828_0_ra1u;
  
// Parameters for L_1_Many2828
  DDL::Input Many2828_1_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2828_1_ra0o;
  
// Parameters for L_2_Many2828
  DDL::Maybe<DDL::UInt<8>> Many2828_2_ra0u;
  DDL::Input Many2828_2_ra2o;
  DDL::Builder<DDL::UInt<8>> Many2828_2_ra1o;
  
// Parameters for L_4_Many2828
  DDL::Input Many2828_4_ra0o;
  DDL::Builder<DDL::UInt<8>> Many2828_4_ra1o;
  
// Parameters for L_5_Many2828
  DDL::UInt<8> Many2828_5_ra0u;
  DDL::Input Many2828_5_ra1o;
  DDL::Builder<DDL::UInt<8>> Many2828_5_ra2o;
  
// Parameters for L_6_Many2828
  DDL::Input Many2828_6_ra0o;
  DDL::Builder<DDL::UInt<8>> Many2828_6_ra1o;
  Many2828_6_ra0o = a1;
  Many2828_6_ra1o = a2;
  goto Many2828_6;
  // NormalBlock
  Many2828_0: {
    DDL::UInt<8> r0 = Many2828_0_ra1u.getValue();
    DDL::Builder<DDL::UInt<8>> r1 = DDL::Builder<DDL::UInt<8>>(Many2828_0_ra0o,
                                                               r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:169:7--169:19:Many_2828",
                true);
    Many2828_6_ra0o = Many2828_0_ra2o;
    Many2828_6_ra1o = r1;
    goto Many2828_6;
  }
  // NormalBlock
  Many2828_1: {
    p.popDebug();
    *_result = Many2828_1_ra0o;
    *_result_input = Many2828_1_ra1o;
    return true;
  }
  // NormalBlock
  Many2828_2: {
    if (Many2828_2_ra0u.isJust()) {
      Many2828_0_ra2o = Many2828_2_ra2o;
      Many2828_0_ra0o = Many2828_2_ra1o;
      Many2828_0_ra1u = Many2828_2_ra0u;
      goto Many2828_0;
    } else {
      Many2828_1_ra1o = Many2828_2_ra2o;
      Many2828_1_ra0o = Many2828_2_ra1o;
      goto Many2828_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2828_4: {
    Many2828_2_ra0u = (DDL::Maybe<DDL::UInt<8>>());
    Many2828_2_ra2o = Many2828_4_ra0o;
    Many2828_2_ra1o = Many2828_4_ra1o;
    goto Many2828_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2828_5: {
    DDL::Maybe<DDL::UInt<8>> r0 = DDL::Maybe<DDL::UInt<8>>(Many2828_5_ra0u);
    Many2828_2_ra0u = r0;
    Many2828_2_ra2o = Many2828_5_ra1o;
    Many2828_2_ra1o = Many2828_5_ra2o;
    goto Many2828_2;
  }
  // NormalBlock
  Many2828_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:169:12--169:19:NameChar",
                false);
    Many2828_6_ra0o.copy();
    Many2828_6_ra1o.copy();
    if (parser_NameChar(p, &Many2828_5_ra0u, &Many2828_5_ra1o,
                        Many2828_6_ra0o)) {
      Many2828_6_ra0o.free();
      Many2828_6_ra1o.free();
      Many2828_5_ra2o = Many2828_6_ra1o;
      goto Many2828_5;
    } else {
      Many2828_6_ra1o.free();
      Many2828_4_ra0o = Many2828_6_ra0o;
      Many2828_4_ra1o = Many2828_6_ra1o;
      goto Many2828_4;
    }
  }
}
bool parser_Many_2833(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many2833
  DDL::Input Many2833_0_ra0o;
  
// Parameters for L_1_Many2833
  DDL::Input Many2833_1_ra0o;
  
// Parameters for L_2_Many2833
  DDL::Bool Many2833_2_ra0u;
  DDL::Input Many2833_2_ra1o;
  
// Parameters for L_4_Many2833
  DDL::Input Many2833_4_ra0o;
  
// Parameters for L_5_Many2833
  DDL::Unit Many2833_5_ra0u;
  DDL::Input Many2833_5_ra1o;
  
// Parameters for L_6_Many2833
  DDL::Input Many2833_6_ra0o;
  Many2833_6_ra0o = a1;
  goto Many2833_6;
  // NormalBlock
  Many2833_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2833",
                true);
    Many2833_6_ra0o = Many2833_0_ra0o;
    goto Many2833_6;
  }
  // NormalBlock
  Many2833_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many2833_1_ra0o;
    return true;
  }
  // NormalBlock
  Many2833_2: {
    if (Many2833_2_ra0u.getValue()) {
      Many2833_0_ra0o = Many2833_2_ra1o;
      goto Many2833_0;
    } else {
      Many2833_1_ra0o = Many2833_2_ra1o;
      goto Many2833_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2833_4: {
    Many2833_2_ra0u = DDL::Bool(false);
    Many2833_2_ra1o = Many2833_4_ra0o;
    goto Many2833_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2833_5: {
    Many2833_2_ra0u = DDL::Bool(true);
    Many2833_2_ra1o = Many2833_5_ra1o;
    goto Many2833_2;
  }
  // NormalBlock
  Many2833_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:48--228:52:AnyWS_",
                false);
    Many2833_6_ra0o.copy();
    if (parser_AnyWS_(p, &Many2833_5_ra0u, &Many2833_5_ra1o,
                      Many2833_6_ra0o)) {
      Many2833_6_ra0o.free();
      goto Many2833_5;
    } else {
      Many2833_4_ra0o = Many2833_6_ra0o;
      goto Many2833_4;
    }
  }
}
bool parser_Token_2540(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                       DDL::Input a1) {
  
// Parameters for L_1_Token2540
  DDL::Unit Token2540_1_ra0u;
  DDL::Input Token2540_1_ra1o;
  DDL::Array<DDL::UInt<8>> Token2540_1_ra2o;
  
// Parameters for L_3_Token2540
  DDL::Builder<DDL::UInt<8>> Token2540_3_ra0o;
  DDL::Input Token2540_3_ra1o;
  
// Parameters for L_5_Token2540
  DDL::Input Token2540_5_ra0o;
  
// Parameters for L_7_Token2540
  DDL::Input Token2540_7_ra0o;
  
// Parameters for L_8_Token2540
  DDL::Input Token2540_8_ra0o;
  
// Parameters for L_9_Token2540
  DDL::Input Token2540_9_ra1o;
  DDL::Input Token2540_9_ra0o;
  
// Parameters for L_10_Token2540
  DDL::Input Token2540_10_ra0o;
  Token2540_10_ra0o = a1;
  goto Token2540_10;
  // ReturnBlock (RetNo NoCapture)
  Token2540_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2540_1: {
    p.popDebug();
    *_result = Token2540_1_ra2o;
    *_result_input = Token2540_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Token2540_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2540_3: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>(Token2540_3_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2833",
                false);
    if (parser_Many_2833(p, &Token2540_1_ra0u, &Token2540_1_ra1o,
                         Token2540_3_ra1o)) {
      Token2540_1_ra2o = r0;
      goto Token2540_1;
    } else {
      r0.free();
      goto Token2540_0;
    }
  }
  // NormalBlock
  Token2540_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:168:7--168:12",
               Token2540_5_ra0o, r0);
    Token2540_5_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Token2540_7: {
    DDL::Input r0 = Token2540_7_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Builder<DDL::UInt<8>> r1;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:40--228:40:Many_2828",
                false);
    if (parser_Many_2828(p, &Token2540_3_ra0o, &Token2540_3_ra1o, r0,
                         r1)) {
      goto Token2540_3;
    } else {
      goto Token2540_2;
    }
  }
  // NormalBlock
  Token2540_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:168:7--168:12",
               Token2540_8_ra0o, r0);
    Token2540_8_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Token2540_9: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Token2540_9_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(47)} == r0};
    if (r1.getValue()) {
      Token2540_9_ra1o.free();
      Token2540_7_ra0o = Token2540_9_ra0o;
      goto Token2540_7;
    } else {
      Token2540_9_ra0o.free();
      Token2540_8_ra0o = Token2540_9_ra1o;
      goto Token2540_8;
    }
  }
  // NormalBlock
  Token2540_10: {
    DDL::Bool r0 = Token2540_10_ra0o.length() == 0;
    Token2540_10_ra0o.copy();
    if (r0.getValue()) {
      Token2540_10_ra0o.free();
      Token2540_5_ra0o = Token2540_10_ra0o;
      goto Token2540_5;
    } else {
      Token2540_9_ra1o = Token2540_10_ra0o;
      Token2540_9_ra0o = Token2540_10_ra0o;
      goto Token2540_9;
    }
  }
}
bool parser_Name(DDL::ParserStateUser<ReferenceTable> &p,
                 DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                 DDL::Input a1) {
  
// Parameters for L_0_Name2541
  DDL::Input Name2541_0_ra0o;
  Name2541_0_ra0o = a1;
  goto Name2541_0;
  // NormalBlock
  Name2541_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:166:3--171:3:Token_2540",
                true);
    return parser_Token_2540(p, _result, _result_input,
                             Name2541_0_ra0o);
  }
}
bool parser_Null(DDL::ParserStateUser<ReferenceTable> &p,
                 DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Null2542
  DDL::Input Null2542_0_ra0o;
  Null2542_0_ra0o = a1;
  goto Null2542_0;
  // NormalBlock
  Null2542_0: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(108UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:197:13--197:21:KW",
                true);
    return parser_KW(p, _result, _result_input, Null2542_0_ra0o, r0);
  }
}
bool parser_Many_2836(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many2836
  DDL::Input Many2836_0_ra0o;
  
// Parameters for L_1_Many2836
  DDL::Input Many2836_1_ra0o;
  
// Parameters for L_2_Many2836
  DDL::Bool Many2836_2_ra0u;
  DDL::Input Many2836_2_ra1o;
  
// Parameters for L_4_Many2836
  DDL::Input Many2836_4_ra0o;
  
// Parameters for L_5_Many2836
  DDL::Unit Many2836_5_ra0u;
  DDL::Input Many2836_5_ra1o;
  
// Parameters for L_6_Many2836
  DDL::Input Many2836_6_ra0o;
  Many2836_6_ra0o = a1;
  goto Many2836_6;
  // NormalBlock
  Many2836_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2836",
                true);
    Many2836_6_ra0o = Many2836_0_ra0o;
    goto Many2836_6;
  }
  // NormalBlock
  Many2836_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many2836_1_ra0o;
    return true;
  }
  // NormalBlock
  Many2836_2: {
    if (Many2836_2_ra0u.getValue()) {
      Many2836_0_ra0o = Many2836_2_ra1o;
      goto Many2836_0;
    } else {
      Many2836_1_ra0o = Many2836_2_ra1o;
      goto Many2836_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2836_4: {
    Many2836_2_ra0u = DDL::Bool(false);
    Many2836_2_ra1o = Many2836_4_ra0o;
    goto Many2836_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2836_5: {
    Many2836_2_ra0u = DDL::Bool(true);
    Many2836_2_ra1o = Many2836_5_ra1o;
    goto Many2836_2;
  }
  // NormalBlock
  Many2836_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:48--228:52:AnyWS_",
                false);
    Many2836_6_ra0o.copy();
    if (parser_AnyWS_(p, &Many2836_5_ra0u, &Many2836_5_ra1o,
                      Many2836_6_ra0o)) {
      Many2836_6_ra0o.free();
      goto Many2836_5;
    } else {
      Many2836_4_ra0o = Many2836_6_ra0o;
      goto Many2836_4;
    }
  }
}
bool parser_Token_2543(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_Token2543
  DDL::Unit Token2543_1_ra0u;
  DDL::Input Token2543_1_ra1o;
  DDL::Integer Token2543_1_ra2o;
  
// Parameters for L_3_Token2543
  DDL::Integer Token2543_3_ra0o;
  DDL::Input Token2543_3_ra1o;
  
// Parameters for L_4_Token2543
  DDL::Input Token2543_4_ra0o;
  Token2543_4_ra0o = a1;
  goto Token2543_4;
  // ReturnBlock (RetNo NoCapture)
  Token2543_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2543_1: {
    p.popDebug();
    *_result = Token2543_1_ra2o;
    *_result_input = Token2543_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Token2543_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2543_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_2836",
                false);
    if (parser_Many_2836(p, &Token2543_1_ra0u, &Token2543_1_ra1o,
                         Token2543_3_ra1o)) {
      Token2543_1_ra2o = Token2543_3_ra0o;
      goto Token2543_1;
    } else {
      Token2543_3_ra0o.free();
      goto Token2543_0;
    }
  }
  // NormalBlock
  Token2543_4: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:40--228:40:Natural",
                false);
    if (parser_Natural(p, &Token2543_3_ra0o, &Token2543_3_ra1o,
                       Token2543_4_ra0o)) {
      goto Token2543_3;
    } else {
      goto Token2543_2;
    }
  }
}
bool parser_Ref(DDL::ParserStateUser<ReferenceTable> &p,
                User::Ref* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_Ref2544
  DDL::Unit Ref2544_1_ra0u;
  DDL::Input Ref2544_1_ra1o;
  DDL::Integer Ref2544_1_ra2o;
  DDL::Integer Ref2544_1_ra3o;
  
// Parameters for L_3_Ref2544
  DDL::Integer Ref2544_3_ra0o;
  DDL::Input Ref2544_3_ra1o;
  DDL::Integer Ref2544_3_ra2o;
  
// Parameters for L_5_Ref2544
  DDL::Integer Ref2544_5_ra0o;
  DDL::Input Ref2544_5_ra1o;
  
// Parameters for L_6_Ref2544
  DDL::Input Ref2544_6_ra0o;
  Ref2544_6_ra0o = a1;
  goto Ref2544_6;
  // ReturnBlock (RetNo NoCapture)
  Ref2544_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Ref2544_1: {
    User::Ref r0;
    r0.init(Ref2544_1_ra2o, Ref2544_1_ra3o);
    p.popDebug();
    *_result = r0;
    *_result_input = Ref2544_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Ref2544_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Ref2544_3: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(82UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:203:5--203:10:KW_",
                false);
    if (parser_KW_(p, &Ref2544_1_ra0u, &Ref2544_1_ra1o, Ref2544_3_ra1o,
                   r0)) {
      Ref2544_1_ra2o = Ref2544_3_ra2o;
      Ref2544_1_ra3o = Ref2544_3_ra0o;
      goto Ref2544_1;
    } else {
      Ref2544_3_ra2o.free();
      Ref2544_3_ra0o.free();
      goto Ref2544_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Ref2544_4: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Ref2544_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:202:11--202:23:Token_2543",
                false);
    if (parser_Token_2543(p, &Ref2544_3_ra0o, &Ref2544_3_ra1o,
                          Ref2544_5_ra1o)) {
      Ref2544_3_ra2o = Ref2544_5_ra0o;
      goto Ref2544_3;
    } else {
      Ref2544_5_ra0o.free();
      goto Ref2544_2;
    }
  }
  // NormalBlock
  Ref2544_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:201:11--201:23:Token_2543",
                false);
    if (parser_Token_2543(p, &Ref2544_5_ra0o, &Ref2544_5_ra1o,
                          Ref2544_6_ra0o)) {
      goto Ref2544_5;
    } else {
      goto Ref2544_4;
    }
  }
}
bool parser_for_2854(DDL::ParserStateUser<ReferenceTable> &p,
                     DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>* _result,
                     DDL::Input* _result_input, DDL::Input a1,
                     DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2,
                     DDL::Array<User::Dict0>::Iterator a3) {
  
// Parameters for L_0_for2854
  DDL::Input for2854_0_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> for2854_0_ra0o;
  
// Parameters for L_1_for2854
  DDL::Input for2854_1_ra2o;
  DDL::Array<User::Dict0>::Iterator for2854_1_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> for2854_1_ra1o;
  
// Parameters for L_2_for2854
  DDL::Input for2854_2_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> for2854_2_ra1o;
  DDL::Array<User::Dict0>::Iterator for2854_2_ra2o;
  for2854_2_ra0o = a1;
  for2854_2_ra1o = a2;
  for2854_2_ra2o = a3;
  goto for2854_2;
  // NormalBlock
  for2854_0: {
    p.popDebug();
    *_result = for2854_0_ra0o;
    *_result_input = for2854_0_ra1o;
    return true;
  }
  // NormalBlock
  for2854_1: {
    User::Dict0 r0 = for2854_1_ra0o.value();
    DDL::Array<DDL::UInt<8>> r1 = r0.get_key();
    User::Value r2 = r0.get_value();
    r0.free();
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r3 = for2854_1_ra1o.insert(r1, r2);
    DDL::Array<User::Dict0>::Iterator r4 = for2854_1_ra0o.next();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:194:33--194:54:for_2854",
                true);
    for2854_2_ra0o = for2854_1_ra2o;
    for2854_2_ra1o = r3;
    for2854_2_ra2o = r4;
    goto for2854_2;
  }
  // NormalBlock
  for2854_2: {
    DDL::Bool r0 = for2854_2_ra2o.done();
    if (r0.getValue()) {
      for2854_2_ra2o.free();
      for2854_0_ra1o = for2854_2_ra0o;
      for2854_0_ra0o = for2854_2_ra1o;
      goto for2854_0;
    } else {
      for2854_1_ra2o = for2854_2_ra0o;
      for2854_1_ra0o = for2854_2_ra2o;
      for2854_1_ra1o = for2854_2_ra1o;
      goto for2854_1;
    }
  }
}
bool parser_Array(DDL::ParserStateUser<ReferenceTable> &p,
                  DDL::Array<User::Value>* _result, DDL::Input* _result_input,
                  DDL::Input a1) {
  
// Parameters for L_0_Array2545
  DDL::Input Array2545_0_ra0o;
  Array2545_0_ra0o = a1;
  goto Array2545_0;
  // NormalBlock
  Array2545_0: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(91UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(93UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:184:13--184:39:Between_2549",
                true);
    return parser_Between_2549(p, _result, _result_input,
                               Array2545_0_ra0o, r0, r1);
  }
}
bool parser_Many_2845(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<User::Dict0>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Builder<User::Dict0> a2) {
  
// Parameters for L_0_Many2845
  DDL::Input Many2845_0_ra2o;
  DDL::Builder<User::Dict0> Many2845_0_ra0o;
  DDL::Maybe<User::Dict0> Many2845_0_ra1o;
  
// Parameters for L_1_Many2845
  DDL::Input Many2845_1_ra1o;
  DDL::Builder<User::Dict0> Many2845_1_ra0o;
  
// Parameters for L_2_Many2845
  DDL::Maybe<User::Dict0> Many2845_2_ra0o;
  DDL::Input Many2845_2_ra2o;
  DDL::Builder<User::Dict0> Many2845_2_ra1o;
  
// Parameters for L_3_Many2845
  DDL::Input Many2845_3_ra0o;
  DDL::Builder<User::Dict0> Many2845_3_ra1o;
  
// Parameters for L_5_Many2845
  DDL::Input Many2845_5_ra0o;
  DDL::Builder<User::Dict0> Many2845_5_ra1o;
  
// Parameters for L_6_Many2845
  User::Value Many2845_6_ra0o;
  DDL::Input Many2845_6_ra1o;
  DDL::Array<DDL::UInt<8>> Many2845_6_ra2o;
  DDL::Builder<User::Dict0> Many2845_6_ra3o;
  
// Parameters for L_7_Many2845
  DDL::Input Many2845_7_ra0o;
  DDL::Builder<User::Dict0> Many2845_7_ra1o;
  
// Parameters for L_8_Many2845
  DDL::Array<DDL::UInt<8>> Many2845_8_ra0o;
  DDL::Input Many2845_8_ra1o;
  DDL::Input Many2845_8_ra2o;
  DDL::Builder<User::Dict0> Many2845_8_ra3o;
  
// Parameters for L_9_Many2845
  DDL::Input Many2845_9_ra0o;
  DDL::Builder<User::Dict0> Many2845_9_ra1o;
  Many2845_9_ra0o = a1;
  Many2845_9_ra1o = a2;
  goto Many2845_9;
  // NormalBlock
  Many2845_0: {
    User::Dict0 r0 = Many2845_0_ra1o.getValue();
    Many2845_0_ra1o.free();
    DDL::Builder<User::Dict0> r1 = DDL::Builder<User::Dict0>(Many2845_0_ra0o,
                                                             r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:230:49--230:49:Many_2845",
                true);
    Many2845_9_ra0o = Many2845_0_ra2o;
    Many2845_9_ra1o = r1;
    goto Many2845_9;
  }
  // NormalBlock
  Many2845_1: {
    p.popDebug();
    *_result = Many2845_1_ra0o;
    *_result_input = Many2845_1_ra1o;
    return true;
  }
  // NormalBlock
  Many2845_2: {
    if (Many2845_2_ra0o.isJust()) {
      Many2845_0_ra2o = Many2845_2_ra2o;
      Many2845_0_ra0o = Many2845_2_ra1o;
      Many2845_0_ra1o = Many2845_2_ra0o;
      goto Many2845_0;
    } else {
      Many2845_2_ra0o.free();
      Many2845_1_ra1o = Many2845_2_ra2o;
      Many2845_1_ra0o = Many2845_2_ra1o;
      goto Many2845_1;
    }
  }
  // NormalBlock
  Many2845_3: {
    Many2845_2_ra0o = (DDL::Maybe<User::Dict0>());
    Many2845_2_ra2o = Many2845_3_ra0o;
    Many2845_2_ra1o = Many2845_3_ra1o;
    goto Many2845_2;
  }
  // ReturnBlock (RetNo NoCapture)
  Many2845_5: {
    Many2845_3_ra0o = Many2845_5_ra0o;
    Many2845_3_ra1o = Many2845_5_ra1o;
    goto Many2845_3;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2845_6: {
    User::Dict0 r0;
    r0.init(Many2845_6_ra2o, Many2845_6_ra0o);
    DDL::Maybe<User::Dict0> r1 = DDL::Maybe<User::Dict0>(r0);
    Many2845_2_ra0o = r1;
    Many2845_2_ra2o = Many2845_6_ra1o;
    Many2845_2_ra1o = Many2845_6_ra3o;
    goto Many2845_2;
  }
  // ReturnBlock (RetNo NoCapture)
  Many2845_7: {
    Many2845_3_ra0o = Many2845_7_ra0o;
    Many2845_3_ra1o = Many2845_7_ra1o;
    goto Many2845_3;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2845_8: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:193:62--193:66:Value",
                false);
    Many2845_8_ra3o.copy();
    if (parser_Value(p, &Many2845_6_ra0o, &Many2845_6_ra1o,
                     Many2845_8_ra1o)) {
      Many2845_8_ra2o.free();
      Many2845_8_ra3o.free();
      Many2845_6_ra2o = Many2845_8_ra0o;
      Many2845_6_ra3o = Many2845_8_ra3o;
      goto Many2845_6;
    } else {
      Many2845_8_ra0o.free();
      Many2845_8_ra3o.free();
      Many2845_5_ra0o = Many2845_8_ra2o;
      Many2845_5_ra1o = Many2845_8_ra3o;
      goto Many2845_5;
    }
  }
  // NormalBlock
  Many2845_9: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:193:48--193:51:Name",
                false);
    Many2845_9_ra0o.copy();
    Many2845_9_ra0o.copy();
    Many2845_9_ra1o.copy();
    if (parser_Name(p, &Many2845_8_ra0o, &Many2845_8_ra1o,
                    Many2845_9_ra0o)) {
      Many2845_9_ra0o.free();
      Many2845_9_ra1o.free();
      Many2845_8_ra2o = Many2845_9_ra0o;
      Many2845_8_ra3o = Many2845_9_ra1o;
      goto Many2845_8;
    } else {
      Many2845_9_ra0o.free();
      Many2845_9_ra1o.free();
      Many2845_7_ra0o = Many2845_9_ra0o;
      Many2845_7_ra1o = Many2845_9_ra1o;
      goto Many2845_7;
    }
  }
}
bool parser_Between_2546(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Array<User::Dict0>* _result, DDL::Input* _result_input,
                         DDL::Input a1, DDL::Array<DDL::UInt<8>> a2,
                         DDL::Array<DDL::UInt<8>> a3) {
  
// Parameters for L_1_Between2546
  DDL::Unit Between2546_1_ra0u;
  DDL::Input Between2546_1_ra1o;
  DDL::Array<User::Dict0> Between2546_1_ra2o;
  
// Parameters for L_3_Between2546
  DDL::Builder<User::Dict0> Between2546_3_ra0o;
  DDL::Input Between2546_3_ra1o;
  DDL::Array<DDL::UInt<8>> Between2546_3_ra2o;
  
// Parameters for L_5_Between2546
  DDL::Unit Between2546_5_ra0u;
  DDL::Input Between2546_5_ra1o;
  DDL::Array<DDL::UInt<8>> Between2546_5_ra2o;
  
// Parameters for L_6_Between2546
  DDL::Input Between2546_6_ra0o;
  DDL::Array<DDL::UInt<8>> Between2546_6_ra1o;
  DDL::Array<DDL::UInt<8>> Between2546_6_ra2o;
  Between2546_6_ra0o = a1;
  Between2546_6_ra1o = a2;
  Between2546_6_ra2o = a3;
  goto Between2546_6;
  // ReturnBlock (RetNo NoCapture)
  Between2546_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Between2546_1: {
    p.popDebug();
    *_result = Between2546_1_ra2o;
    *_result_input = Between2546_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Between2546_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Between2546_3: {
    DDL::Array<User::Dict0> r0 = DDL::Array<User::Dict0>(Between2546_3_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:230:52--230:59:KW_",
                false);
    if (parser_KW_(p, &Between2546_1_ra0u, &Between2546_1_ra1o,
                   Between2546_3_ra1o, Between2546_3_ra2o)) {
      Between2546_1_ra2o = r0;
      goto Between2546_1;
    } else {
      r0.free();
      goto Between2546_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Between2546_4: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Between2546_5: {
    DDL::Builder<User::Dict0> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:230:49--230:49:Many_2845",
                false);
    if (parser_Many_2845(p, &Between2546_3_ra0o, &Between2546_3_ra1o,
                         Between2546_5_ra1o, r0)) {
      Between2546_3_ra2o = Between2546_5_ra2o;
      goto Between2546_3;
    } else {
      Between2546_5_ra2o.free();
      goto Between2546_2;
    }
  }
  // NormalBlock
  Between2546_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:230:35--230:41:KW_",
                false);
    if (parser_KW_(p, &Between2546_5_ra0u, &Between2546_5_ra1o,
                   Between2546_6_ra0o, Between2546_6_ra1o)) {
      Between2546_5_ra2o = Between2546_6_ra2o;
      goto Between2546_5;
    } else {
      Between2546_6_ra2o.free();
      goto Between2546_4;
    }
  }
}
bool parser_Dict(DDL::ParserStateUser<ReferenceTable> &p,
                 DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>* _result,
                 DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_Dict2547
  DDL::Array<User::Dict0> Dict2547_1_ra0o;
  DDL::Input Dict2547_1_ra1o;
  
// Parameters for L_2_Dict2547
  DDL::Input Dict2547_2_ra0o;
  Dict2547_2_ra0o = a1;
  goto Dict2547_2;
  // ReturnBlock (RetNo NoCapture)
  Dict2547_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Dict2547_1: {
    DDL::Array<User::Dict0>::Iterator r0 = DDL::Array<User::Dict0>::Iterator(Dict2547_1_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:194:5--194:54:for_2854",
                true);
    return parser_for_2854(p, _result, _result_input, Dict2547_1_ra1o,
                           DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>{}, r0);
  }
  // NormalBlock
  Dict2547_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(60UL),
                                                           DDL::UInt<8>(60UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(62UL),
                                                           DDL::UInt<8>(62UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:193:16--193:68:Between_2546",
                false);
    if (parser_Between_2546(p, &Dict2547_1_ra0o, &Dict2547_1_ra1o,
                            Dict2547_2_ra0o, r0, r1)) {
      goto Dict2547_1;
    } else {
      goto Dict2547_0;
    }
  }
}
bool parser_Value(DDL::ParserStateUser<ReferenceTable> &p,
                  User::Value* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_Value2548
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Value2548_1_ra0o;
  DDL::Input Value2548_1_ra1o;
  
// Parameters for L_3_Value2548
  DDL::Input Value2548_3_ra0o;
  
// Parameters for L_4_Value2548
  DDL::Array<User::Value> Value2548_4_ra0o;
  DDL::Input Value2548_4_ra1o;
  
// Parameters for L_6_Value2548
  DDL::Input Value2548_6_ra0o;
  
// Parameters for L_7_Value2548
  User::Number Value2548_7_ra0o;
  DDL::Input Value2548_7_ra1o;
  
// Parameters for L_9_Value2548
  DDL::Input Value2548_9_ra0o;
  
// Parameters for L_10_Value2548
  DDL::Array<DDL::UInt<8>> Value2548_10_ra0o;
  DDL::Input Value2548_10_ra1o;
  
// Parameters for L_12_Value2548
  DDL::Input Value2548_12_ra0o;
  
// Parameters for L_13_Value2548
  DDL::Array<DDL::UInt<8>> Value2548_13_ra0o;
  DDL::Input Value2548_13_ra1o;
  
// Parameters for L_15_Value2548
  DDL::Input Value2548_15_ra0o;
  
// Parameters for L_16_Value2548
  DDL::Array<DDL::UInt<8>> Value2548_16_ra0o;
  DDL::Input Value2548_16_ra1o;
  
// Parameters for L_18_Value2548
  DDL::Input Value2548_18_ra0o;
  
// Parameters for L_19_Value2548
  User::Ref Value2548_19_ra0o;
  DDL::Input Value2548_19_ra1o;
  
// Parameters for L_21_Value2548
  DDL::Input Value2548_21_ra0o;
  
// Parameters for L_22_Value2548
  DDL::Bool Value2548_22_ra0u;
  DDL::Input Value2548_22_ra1o;
  
// Parameters for L_24_Value2548
  DDL::Input Value2548_24_ra0o;
  
// Parameters for L_25_Value2548
  DDL::Unit Value2548_25_ra0u;
  DDL::Input Value2548_25_ra1o;
  
// Parameters for L_26_Value2548
  DDL::Input Value2548_26_ra0o;
  Value2548_26_ra0o = a1;
  goto Value2548_26;
  // ReturnBlock (RetNo NoCapture)
  Value2548_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Value2548_1: {
    User::Value r0;
    r0.init_dict(Value2548_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = Value2548_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Value2548_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:218:15--218:18:Dict",
                false);
    if (parser_Dict(p, &Value2548_1_ra0o, &Value2548_1_ra1o,
                    Value2548_3_ra0o)) {
      goto Value2548_1;
    } else {
      goto Value2548_0;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  Value2548_4: {
    User::Value r0;
    r0.init_array(Value2548_4_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = Value2548_4_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Value2548_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:217:15--217:19:Array",
                false);
    Value2548_6_ra0o.copy();
    if (parser_Array(p, &Value2548_4_ra0o, &Value2548_4_ra1o,
                     Value2548_6_ra0o)) {
      Value2548_6_ra0o.free();
      goto Value2548_4;
    } else {
      Value2548_3_ra0o = Value2548_6_ra0o;
      goto Value2548_3;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  Value2548_7: {
    User::Value r0;
    r0.init_number(Value2548_7_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = Value2548_7_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Value2548_9: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:216:15--216:20:Number",
                false);
    Value2548_9_ra0o.copy();
    if (parser_Number(p, &Value2548_7_ra0o, &Value2548_7_ra1o,
                      Value2548_9_ra0o)) {
      Value2548_9_ra0o.free();
      goto Value2548_7;
    } else {
      Value2548_6_ra0o = Value2548_9_ra0o;
      goto Value2548_6;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  Value2548_10: {
    User::Value r0;
    r0.init_string(Value2548_10_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = Value2548_10_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Value2548_12: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:215:15--215:23:HexString",
                false);
    Value2548_12_ra0o.copy();
    if (parser_HexString(p, &Value2548_10_ra0o, &Value2548_10_ra1o,
                         Value2548_12_ra0o)) {
      Value2548_12_ra0o.free();
      goto Value2548_10;
    } else {
      Value2548_9_ra0o = Value2548_12_ra0o;
      goto Value2548_9;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  Value2548_13: {
    User::Value r0;
    r0.init_string(Value2548_13_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = Value2548_13_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Value2548_15: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:214:15--214:20:String",
                false);
    Value2548_15_ra0o.copy();
    if (parser_String(p, &Value2548_13_ra0o, &Value2548_13_ra1o,
                      Value2548_15_ra0o)) {
      Value2548_15_ra0o.free();
      goto Value2548_13;
    } else {
      Value2548_12_ra0o = Value2548_15_ra0o;
      goto Value2548_12;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  Value2548_16: {
    User::Value r0;
    r0.init_name(Value2548_16_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = Value2548_16_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Value2548_18: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:213:15--213:18:Name",
                false);
    Value2548_18_ra0o.copy();
    if (parser_Name(p, &Value2548_16_ra0o, &Value2548_16_ra1o,
                    Value2548_18_ra0o)) {
      Value2548_18_ra0o.free();
      goto Value2548_16;
    } else {
      Value2548_15_ra0o = Value2548_18_ra0o;
      goto Value2548_15;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  Value2548_19: {
    User::Value r0;
    r0.init_ref(Value2548_19_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = Value2548_19_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Value2548_21: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:212:15--212:17:Ref",
                false);
    Value2548_21_ra0o.copy();
    if (parser_Ref(p, &Value2548_19_ra0o, &Value2548_19_ra1o,
                   Value2548_21_ra0o)) {
      Value2548_21_ra0o.free();
      goto Value2548_19;
    } else {
      Value2548_18_ra0o = Value2548_21_ra0o;
      goto Value2548_18;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  Value2548_22: {
    User::Value r0;
    r0.init__bool(Value2548_22_ra0u);
    p.popDebug();
    *_result = r0;
    *_result_input = Value2548_22_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Value2548_24: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:211:15--211:18:Bool",
                false);
    Value2548_24_ra0o.copy();
    if (parser_Bool(p, &Value2548_22_ra0u, &Value2548_22_ra1o,
                    Value2548_24_ra0o)) {
      Value2548_24_ra0o.free();
      goto Value2548_22;
    } else {
      Value2548_21_ra0o = Value2548_24_ra0o;
      goto Value2548_21;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  Value2548_25: {
    User::Value r0;
    r0.init_null();
    p.popDebug();
    *_result = r0;
    *_result_input = Value2548_25_ra1o;
    return true;
  }
  // NormalBlock
  Value2548_26: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:210:15--210:18:Null",
                false);
    Value2548_26_ra0o.copy();
    if (parser_Null(p, &Value2548_25_ra0u, &Value2548_25_ra1o,
                    Value2548_26_ra0o)) {
      Value2548_26_ra0o.free();
      goto Value2548_25;
    } else {
      Value2548_24_ra0o = Value2548_26_ra0o;
      goto Value2548_24;
    }
  }
}
bool parser_Many_2870(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<User::Value>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::Builder<User::Value> a2) {
  
// Parameters for L_0_Many2870
  DDL::Input Many2870_0_ra2o;
  DDL::Builder<User::Value> Many2870_0_ra0o;
  DDL::Maybe<User::Value> Many2870_0_ra1o;
  
// Parameters for L_1_Many2870
  DDL::Input Many2870_1_ra1o;
  DDL::Builder<User::Value> Many2870_1_ra0o;
  
// Parameters for L_2_Many2870
  DDL::Maybe<User::Value> Many2870_2_ra0o;
  DDL::Input Many2870_2_ra2o;
  DDL::Builder<User::Value> Many2870_2_ra1o;
  
// Parameters for L_4_Many2870
  DDL::Input Many2870_4_ra0o;
  DDL::Builder<User::Value> Many2870_4_ra1o;
  
// Parameters for L_5_Many2870
  User::Value Many2870_5_ra0o;
  DDL::Input Many2870_5_ra1o;
  DDL::Builder<User::Value> Many2870_5_ra2o;
  
// Parameters for L_6_Many2870
  DDL::Input Many2870_6_ra0o;
  DDL::Builder<User::Value> Many2870_6_ra1o;
  Many2870_6_ra0o = a1;
  Many2870_6_ra1o = a2;
  goto Many2870_6;
  // NormalBlock
  Many2870_0: {
    User::Value r0 = Many2870_0_ra1o.getValue();
    Many2870_0_ra1o.free();
    DDL::Builder<User::Value> r1 = DDL::Builder<User::Value>(Many2870_0_ra0o,
                                                             r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:230:49--230:49:Many_2870",
                true);
    Many2870_6_ra0o = Many2870_0_ra2o;
    Many2870_6_ra1o = r1;
    goto Many2870_6;
  }
  // NormalBlock
  Many2870_1: {
    p.popDebug();
    *_result = Many2870_1_ra0o;
    *_result_input = Many2870_1_ra1o;
    return true;
  }
  // NormalBlock
  Many2870_2: {
    if (Many2870_2_ra0o.isJust()) {
      Many2870_0_ra2o = Many2870_2_ra2o;
      Many2870_0_ra0o = Many2870_2_ra1o;
      Many2870_0_ra1o = Many2870_2_ra0o;
      goto Many2870_0;
    } else {
      Many2870_2_ra0o.free();
      Many2870_1_ra1o = Many2870_2_ra2o;
      Many2870_1_ra0o = Many2870_2_ra1o;
      goto Many2870_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many2870_4: {
    Many2870_2_ra0o = (DDL::Maybe<User::Value>());
    Many2870_2_ra2o = Many2870_4_ra0o;
    Many2870_2_ra1o = Many2870_4_ra1o;
    goto Many2870_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many2870_5: {
    DDL::Maybe<User::Value> r0 = DDL::Maybe<User::Value>(Many2870_5_ra0o);
    Many2870_2_ra0o = r0;
    Many2870_2_ra2o = Many2870_5_ra1o;
    Many2870_2_ra1o = Many2870_5_ra2o;
    goto Many2870_2;
  }
  // NormalBlock
  Many2870_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:184:35--184:39:Value",
                false);
    Many2870_6_ra0o.copy();
    Many2870_6_ra1o.copy();
    if (parser_Value(p, &Many2870_5_ra0o, &Many2870_5_ra1o,
                     Many2870_6_ra0o)) {
      Many2870_6_ra0o.free();
      Many2870_6_ra1o.free();
      Many2870_5_ra2o = Many2870_6_ra1o;
      goto Many2870_5;
    } else {
      Many2870_6_ra1o.free();
      Many2870_4_ra0o = Many2870_6_ra0o;
      Many2870_4_ra1o = Many2870_6_ra1o;
      goto Many2870_4;
    }
  }
}
bool parser_Between_2549(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Array<User::Value>* _result, DDL::Input* _result_input,
                         DDL::Input a1, DDL::Array<DDL::UInt<8>> a2,
                         DDL::Array<DDL::UInt<8>> a3) {
  
// Parameters for L_1_Between2549
  DDL::Unit Between2549_1_ra0u;
  DDL::Input Between2549_1_ra1o;
  DDL::Array<User::Value> Between2549_1_ra2o;
  
// Parameters for L_3_Between2549
  DDL::Builder<User::Value> Between2549_3_ra0o;
  DDL::Input Between2549_3_ra1o;
  DDL::Array<DDL::UInt<8>> Between2549_3_ra2o;
  
// Parameters for L_5_Between2549
  DDL::Unit Between2549_5_ra0u;
  DDL::Input Between2549_5_ra1o;
  DDL::Array<DDL::UInt<8>> Between2549_5_ra2o;
  
// Parameters for L_6_Between2549
  DDL::Input Between2549_6_ra0o;
  DDL::Array<DDL::UInt<8>> Between2549_6_ra1o;
  DDL::Array<DDL::UInt<8>> Between2549_6_ra2o;
  Between2549_6_ra0o = a1;
  Between2549_6_ra1o = a2;
  Between2549_6_ra2o = a3;
  goto Between2549_6;
  // ReturnBlock (RetNo NoCapture)
  Between2549_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Between2549_1: {
    p.popDebug();
    *_result = Between2549_1_ra2o;
    *_result_input = Between2549_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Between2549_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Between2549_3: {
    DDL::Array<User::Value> r0 = DDL::Array<User::Value>(Between2549_3_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:230:52--230:59:KW_",
                false);
    if (parser_KW_(p, &Between2549_1_ra0u, &Between2549_1_ra1o,
                   Between2549_3_ra1o, Between2549_3_ra2o)) {
      Between2549_1_ra2o = r0;
      goto Between2549_1;
    } else {
      r0.free();
      goto Between2549_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Between2549_4: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Between2549_5: {
    DDL::Builder<User::Value> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:230:49--230:49:Many_2870",
                false);
    if (parser_Many_2870(p, &Between2549_3_ra0o, &Between2549_3_ra1o,
                         Between2549_5_ra1o, r0)) {
      Between2549_3_ra2o = Between2549_5_ra2o;
      goto Between2549_3;
    } else {
      Between2549_5_ra2o.free();
      goto Between2549_2;
    }
  }
  // NormalBlock
  Between2549_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:230:35--230:41:KW_",
                false);
    if (parser_KW_(p, &Between2549_5_ra0u, &Between2549_5_ra1o,
                   Between2549_6_ra0o, Between2549_6_ra1o)) {
      Between2549_5_ra2o = Between2549_6_ra2o;
      goto Between2549_5;
    } else {
      Between2549_6_ra2o.free();
      goto Between2549_4;
    }
  }
}
bool parser_NatValue(DDL::ParserStateUser<ReferenceTable> &p,
                     DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                     User::Value a2) {
  
// Parameters for L_1_NatValue2550
  DDL::Input NatValue2550_1_ra1o;
  User::Value NatValue2550_1_ra0o;
  
// Parameters for L_2_NatValue2550
  DDL::Input NatValue2550_2_ra0o;
  
// Parameters for L_3_NatValue2550
  DDL::Input NatValue2550_3_ra0o;
  User::Value NatValue2550_3_ra1o;
  NatValue2550_3_ra0o = a1;
  NatValue2550_3_ra1o = a2;
  goto NatValue2550_3;
  // NormalBlock
  NatValue2550_1: {
    User::Number r0 = NatValue2550_1_ra0o.get_number();
    NatValue2550_1_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:220:28--220:51:NumberAsNat",
                true);
    return parser_NumberAsNat(p, _result, _result_input,
                              NatValue2550_1_ra1o, r0);
  }
  // NormalBlock
  NatValue2550_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:220:41--220:51",
               NatValue2550_2_ra0o, r0);
    NatValue2550_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  NatValue2550_3: {
    switch (NatValue2550_3_ra1o.getTag()) {
      case DDL::Tag::Value::number:
        NatValue2550_1_ra1o = NatValue2550_3_ra0o;
        NatValue2550_1_ra0o = NatValue2550_3_ra1o;
        goto NatValue2550_1;
      default:
        NatValue2550_3_ra1o.free();
        NatValue2550_2_ra0o = NatValue2550_3_ra0o;
        goto NatValue2550_2;
    }
  }
}
static inline
User::Value init_nullValue() {
  goto nullValue2551_0;
  // NormalBlock
  nullValue2551_0: {
    User::Value r0;
    r0.init_null();
    return r0;
  }
}
User::Value parser_nullValue() {
  static std::optional<DDL::Owned<User::Value>> result;
  if (! result.has_value()) {
    result = DDL::Owned{init_nullValue()};
  }
  return result->get();
}
bool parser_GuardMsg_(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1,
                      DDL::Bool a2, DDL::Array<DDL::UInt<8>> a3) {
  
// Parameters for L_0_GuardMsg_2553
  DDL::Input GuardMsg_2553_0_ra0o;
  
// Parameters for L_1_GuardMsg_2553
  DDL::Input GuardMsg_2553_1_ra1o;
  DDL::Array<DDL::UInt<8>> GuardMsg_2553_1_ra0o;
  
// Parameters for L_2_GuardMsg_2553
  DDL::Input GuardMsg_2553_2_ra0o;
  DDL::Bool GuardMsg_2553_2_ra1u;
  DDL::Array<DDL::UInt<8>> GuardMsg_2553_2_ra2o;
  GuardMsg_2553_2_ra0o = a1;
  GuardMsg_2553_2_ra1u = a2;
  GuardMsg_2553_2_ra2o = a3;
  goto GuardMsg_2553_2;
  // NormalBlock
  GuardMsg_2553_0: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = GuardMsg_2553_0_ra0o;
    return true;
  }
  // NormalBlock
  GuardMsg_2553_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(71UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(58UL),
                                                           DDL::UInt<8>(32UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r1 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   GuardMsg_2553_1_ra0o};
    DDL::Array<DDL::UInt<8>> r2 = DDL::Array<DDL::UInt<8>>(r1);
    r1.free();
    p.noteFail(false,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:66:31--66:64",
               GuardMsg_2553_1_ra1o, r2);
    GuardMsg_2553_1_ra1o.free();
    r2.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  GuardMsg_2553_2: {
    if (GuardMsg_2553_2_ra1u.getValue()) {
      GuardMsg_2553_2_ra2o.free();
      GuardMsg_2553_0_ra0o = GuardMsg_2553_2_ra0o;
      goto GuardMsg_2553_0;
    } else {
      GuardMsg_2553_1_ra1o = GuardMsg_2553_2_ra0o;
      GuardMsg_2553_1_ra0o = GuardMsg_2553_2_ra2o;
      goto GuardMsg_2553_1;
    }
  }
}
bool parser_CheckExpected(DDL::ParserStateUser<ReferenceTable> &p,
                          User::TopDeclDef* _result, DDL::Input* _result_input,
                          DDL::Input a1, User::Ref a2, User::TopDecl a3) {
  
// Parameters for L_1_CheckExpected2554
  DDL::Unit CheckExpected2554_1_ra0u;
  DDL::Input CheckExpected2554_1_ra1o;
  User::TopDecl CheckExpected2554_1_ra2o;
  
// Parameters for L_2_CheckExpected2554
  DDL::Input CheckExpected2554_2_ra2o;
  DDL::Bool CheckExpected2554_2_ra0u;
  User::TopDecl CheckExpected2554_2_ra1o;
  
// Parameters for L_3_CheckExpected2554
  DDL::Input CheckExpected2554_3_ra2o;
  User::TopDecl CheckExpected2554_3_ra0o;
  User::Ref CheckExpected2554_3_ra1o;
  
// Parameters for L_4_CheckExpected2554
  DDL::Input CheckExpected2554_4_ra1o;
  User::TopDecl CheckExpected2554_4_ra0o;
  
// Parameters for L_5_CheckExpected2554
  DDL::Input CheckExpected2554_5_ra0o;
  User::Ref CheckExpected2554_5_ra1o;
  User::TopDecl CheckExpected2554_5_ra2o;
  CheckExpected2554_5_ra0o = a1;
  CheckExpected2554_5_ra1o = a2;
  CheckExpected2554_5_ra2o = a3;
  goto CheckExpected2554_5;
  // ReturnBlock (RetNo NoCapture)
  CheckExpected2554_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CheckExpected2554_1: {
    User::TopDeclDef r0 = CheckExpected2554_1_ra2o.get_obj();
    CheckExpected2554_1_ra2o.free();
    p.popDebug();
    *_result = r0;
    *_result_input = CheckExpected2554_1_ra1o;
    return true;
  }
  // NormalBlock
  CheckExpected2554_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(106UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(39UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(98UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(119UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(120UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(98UL),
                                                           DDL::UInt<8>(106UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:49:5--50:78:GuardMsg_",
                false);
    if (parser_GuardMsg_(p, &CheckExpected2554_1_ra0u,
                         &CheckExpected2554_1_ra1o, CheckExpected2554_2_ra2o,
                         CheckExpected2554_2_ra0u, r0)) {
      CheckExpected2554_1_ra2o = CheckExpected2554_2_ra1o;
      goto CheckExpected2554_1;
    } else {
      CheckExpected2554_2_ra1o.free();
      goto CheckExpected2554_0;
    }
  }
  // NormalBlock
  CheckExpected2554_3: {
    DDL::Integer r0 = CheckExpected2554_3_ra0o.get_gen();
    DDL::Integer r1 = CheckExpected2554_3_ra1o.get_gen();
    CheckExpected2554_3_ra1o.free();
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    CheckExpected2554_2_ra2o = CheckExpected2554_3_ra2o;
    CheckExpected2554_2_ra0u = r2;
    CheckExpected2554_2_ra1o = CheckExpected2554_3_ra0o;
    goto CheckExpected2554_2;
  }
  // NormalBlock
  CheckExpected2554_4: {
    CheckExpected2554_2_ra2o = CheckExpected2554_4_ra1o;
    CheckExpected2554_2_ra0u = DDL::Bool(false);
    CheckExpected2554_2_ra1o = CheckExpected2554_4_ra0o;
    goto CheckExpected2554_2;
  }
  // NormalBlock
  CheckExpected2554_5: {
    DDL::Integer r0 = CheckExpected2554_5_ra2o.get_id();
    DDL::Integer r1 = CheckExpected2554_5_ra1o.get_obj();
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    if (r2.getValue()) {
      CheckExpected2554_3_ra2o = CheckExpected2554_5_ra0o;
      CheckExpected2554_3_ra0o = CheckExpected2554_5_ra2o;
      CheckExpected2554_3_ra1o = CheckExpected2554_5_ra1o;
      goto CheckExpected2554_3;
    } else {
      CheckExpected2554_5_ra1o.free();
      CheckExpected2554_4_ra1o = CheckExpected2554_5_ra0o;
      CheckExpected2554_4_ra0o = CheckExpected2554_5_ra2o;
      goto CheckExpected2554_4;
    }
  }
}
bool parser_ResolveDeclRef(DDL::ParserStateUser<ReferenceTable> &p,
                           User::TopDeclDef* _result, DDL::Input* _result_input,
                           DDL::Input a1, User::Ref a2) {
  
// Parameters for L_0_ResolveDeclRef2555
  User::Value ResolveDeclRef2555_0_ra0o;
  DDL::Input ResolveDeclRef2555_0_ra1o;
  
// Parameters for L_1_ResolveDeclRef2555
  DDL::Input ResolveDeclRef2555_1_ra0o;
  
// Parameters for L_2_ResolveDeclRef2555
  DDL::Input ResolveDeclRef2555_2_ra2o;
  DDL::Maybe<User::TopDecl> ResolveDeclRef2555_2_ra0o;
  User::Ref ResolveDeclRef2555_2_ra1o;
  
// Parameters for L_4_ResolveDeclRef2555
  DDL::Maybe<User::TopDecl> ResolveDeclRef2555_4_ra0o;
  DDL::Input ResolveDeclRef2555_4_ra1o;
  User::Ref ResolveDeclRef2555_4_ra2o;
  
// Parameters for L_5_ResolveDeclRef2555
  DDL::Input ResolveDeclRef2555_5_ra0o;
  User::Ref ResolveDeclRef2555_5_ra1o;
  ResolveDeclRef2555_5_ra0o = a1;
  ResolveDeclRef2555_5_ra1o = a2;
  goto ResolveDeclRef2555_5;
  // ReturnBlock RetPure
  ResolveDeclRef2555_0: {
    User::TopDeclDef r0;
    r0.init_value(ResolveDeclRef2555_0_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ResolveDeclRef2555_0_ra1o;
    return true;
  }
  // NormalBlock
  ResolveDeclRef2555_1: {
    ResolveDeclRef2555_0_ra0o = parser_nullValue();
    ResolveDeclRef2555_0_ra1o = ResolveDeclRef2555_1_ra0o;
    goto ResolveDeclRef2555_0;
  }
  // NormalBlock
  ResolveDeclRef2555_2: {
    User::TopDecl r0 = ResolveDeclRef2555_2_ra0o.getValue();
    ResolveDeclRef2555_2_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:45:16--45:32:CheckExpected",
                true);
    return parser_CheckExpected(p, _result, _result_input,
                                ResolveDeclRef2555_2_ra2o, ResolveDeclRef2555_2_ra1o, r0);
  }
  // ReturnBlock (RetNo NoCapture)
  ResolveDeclRef2555_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ResolveDeclRef2555_4: {
    if (ResolveDeclRef2555_4_ra0o.isJust()) {
      ResolveDeclRef2555_2_ra2o = ResolveDeclRef2555_4_ra1o;
      ResolveDeclRef2555_2_ra0o = ResolveDeclRef2555_4_ra0o;
      ResolveDeclRef2555_2_ra1o = ResolveDeclRef2555_4_ra2o;
      goto ResolveDeclRef2555_2;
    } else {
      ResolveDeclRef2555_4_ra0o.free();
      ResolveDeclRef2555_4_ra2o.free();
      ResolveDeclRef2555_1_ra0o = ResolveDeclRef2555_4_ra1o;
      goto ResolveDeclRef2555_1;
    }
  }
  // NormalBlock
  ResolveDeclRef2555_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:43:8--43:19:ResolveRef",
                false);
    ResolveDeclRef2555_5_ra1o.copy();
    if (parser_ResolveRef(p, &ResolveDeclRef2555_4_ra0o,
                          &ResolveDeclRef2555_4_ra1o, ResolveDeclRef2555_5_ra0o,
                          ResolveDeclRef2555_5_ra1o)) {
      ResolveDeclRef2555_4_ra2o = ResolveDeclRef2555_5_ra1o;
      goto ResolveDeclRef2555_4;
    } else {
      ResolveDeclRef2555_5_ra1o.free();
      goto ResolveDeclRef2555_3;
    }
  }
}
bool parser_ResolveValRef(DDL::ParserStateUser<ReferenceTable> &p,
                          User::Value* _result, DDL::Input* _result_input, DDL::Input a1,
                          User::Ref a2) {
  
// Parameters for L_0_ResolveValRef2556
  DDL::Input ResolveValRef2556_0_ra1o;
  User::TopDeclDef ResolveValRef2556_0_ra0o;
  
// Parameters for L_1_ResolveValRef2556
  DDL::Input ResolveValRef2556_1_ra0o;
  
// Parameters for L_3_ResolveValRef2556
  User::TopDeclDef ResolveValRef2556_3_ra0o;
  DDL::Input ResolveValRef2556_3_ra1o;
  
// Parameters for L_4_ResolveValRef2556
  DDL::Input ResolveValRef2556_4_ra0o;
  User::Ref ResolveValRef2556_4_ra1o;
  ResolveValRef2556_4_ra0o = a1;
  ResolveValRef2556_4_ra1o = a2;
  goto ResolveValRef2556_4;
  // NormalBlock
  ResolveValRef2556_0: {
    User::Value r0 = ResolveValRef2556_0_ra0o.get_value();
    ResolveValRef2556_0_ra0o.free();
    p.popDebug();
    *_result = r0;
    *_result_input = ResolveValRef2556_0_ra1o;
    return true;
  }
  // NormalBlock
  ResolveValRef2556_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:55:34--55:58",
               ResolveValRef2556_1_ra0o, r0);
    ResolveValRef2556_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  ResolveValRef2556_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ResolveValRef2556_3: {
    switch (ResolveValRef2556_3_ra0o.getTag()) {
      case DDL::Tag::TopDeclDef::value:
        ResolveValRef2556_0_ra1o = ResolveValRef2556_3_ra1o;
        ResolveValRef2556_0_ra0o = ResolveValRef2556_3_ra0o;
        goto ResolveValRef2556_0;
      default:
        ResolveValRef2556_3_ra0o.free();
        ResolveValRef2556_1_ra0o = ResolveValRef2556_3_ra1o;
        goto ResolveValRef2556_1;
    }
  }
  // NormalBlock
  ResolveValRef2556_4: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:55:34--55:49:ResolveDeclRef",
                false);
    if (parser_ResolveDeclRef(p, &ResolveValRef2556_3_ra0o,
                              &ResolveValRef2556_3_ra1o, ResolveValRef2556_4_ra0o,
                              ResolveValRef2556_4_ra1o)) {
      goto ResolveValRef2556_3;
    } else {
      goto ResolveValRef2556_2;
    }
  }
}
bool parser_ResolveVal(DDL::ParserStateUser<ReferenceTable> &p,
                       User::Value* _result, DDL::Input* _result_input, DDL::Input a1,
                       User::Value a2) {
  
// Parameters for L_0_ResolveVal2557
  DDL::Input ResolveVal2557_0_ra1o;
  User::Value ResolveVal2557_0_ra0o;
  
// Parameters for L_1_ResolveVal2557
  DDL::Input ResolveVal2557_1_ra1o;
  User::Value ResolveVal2557_1_ra0o;
  
// Parameters for L_2_ResolveVal2557
  DDL::Input ResolveVal2557_2_ra0o;
  User::Value ResolveVal2557_2_ra1o;
  ResolveVal2557_2_ra0o = a1;
  ResolveVal2557_2_ra1o = a2;
  goto ResolveVal2557_2;
  // NormalBlock
  ResolveVal2557_0: {
    User::Ref r0 = ResolveVal2557_0_ra0o.get_ref();
    ResolveVal2557_0_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:60:14--60:28:ResolveValRef",
                true);
    return parser_ResolveValRef(p, _result, _result_input,
                                ResolveVal2557_0_ra1o, r0);
  }
  // NormalBlock
  ResolveVal2557_1: {
    p.popDebug();
    *_result = ResolveVal2557_1_ra0o;
    *_result_input = ResolveVal2557_1_ra1o;
    return true;
  }
  // NormalBlock
  ResolveVal2557_2: {
    switch (ResolveVal2557_2_ra1o.getTag()) {
      case DDL::Tag::Value::ref:
        ResolveVal2557_0_ra1o = ResolveVal2557_2_ra0o;
        ResolveVal2557_0_ra0o = ResolveVal2557_2_ra1o;
        goto ResolveVal2557_0;
      default:
        ResolveVal2557_1_ra1o = ResolveVal2557_2_ra0o;
        ResolveVal2557_1_ra0o = ResolveVal2557_2_ra1o;
        goto ResolveVal2557_1;
    }
  }
}
bool parser_LookupResolve(DDL::ParserStateUser<ReferenceTable> &p,
                          User::Value* _result, DDL::Input* _result_input, DDL::Input a1,
                          DDL::Array<DDL::UInt<8>> a2,
                          DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a3) {
  
// Parameters for L_1_LookupResolve2558
  DDL::Input LookupResolve2558_1_ra0o;
  
// Parameters for L_2_LookupResolve2558
  DDL::Input LookupResolve2558_2_ra1o;
  DDL::Maybe<User::Value> LookupResolve2558_2_ra0o;
  
// Parameters for L_3_LookupResolve2558
  DDL::Input LookupResolve2558_3_ra0o;
  DDL::Array<DDL::UInt<8>> LookupResolve2558_3_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LookupResolve2558_3_ra2o;
  LookupResolve2558_3_ra0o = a1;
  LookupResolve2558_3_ra1o = a2;
  LookupResolve2558_3_ra2o = a3;
  goto LookupResolve2558_3;
  // NormalBlock
  LookupResolve2558_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:273:42--273:56",
               LookupResolve2558_1_ra0o, r0);
    LookupResolve2558_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  LookupResolve2558_2: {
    User::Value r0 = LookupResolve2558_2_ra0o.getValue();
    LookupResolve2558_2_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:273:30--273:56:ResolveVal",
                true);
    return parser_ResolveVal(p, _result, _result_input,
                             LookupResolve2558_2_ra1o, r0);
  }
  // NormalBlock
  LookupResolve2558_3: {
    DDL::Maybe<User::Value> r0 = LookupResolve2558_3_ra2o.lookup(LookupResolve2558_3_ra1o);
    LookupResolve2558_3_ra1o.free();
    LookupResolve2558_3_ra2o.free();
    if (r0.isJust()) {
      LookupResolve2558_2_ra1o = LookupResolve2558_3_ra0o;
      LookupResolve2558_2_ra0o = r0;
      goto LookupResolve2558_2;
    } else {
      r0.free();
      LookupResolve2558_1_ra0o = LookupResolve2558_3_ra0o;
      goto LookupResolve2558_1;
    }
  }
}
bool parser_StreamLen(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::UInt<64>* _result, DDL::Input* _result_input, DDL::Input a1,
                      DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2) {
  
// Parameters for L_0_StreamLen2559
  DDL::Input StreamLen2559_0_ra1o;
  DDL::Integer StreamLen2559_0_ra0o;
  
// Parameters for L_1_StreamLen2559
  DDL::Input StreamLen2559_1_ra0o;
  
// Parameters for L_2_StreamLen2559
  DDL::Input StreamLen2559_2_ra1o;
  DDL::Bool StreamLen2559_2_ra0u;
  DDL::Integer StreamLen2559_2_ra2o;
  
// Parameters for L_3_StreamLen2559
  DDL::Input StreamLen2559_3_ra1o;
  DDL::Integer StreamLen2559_3_ra0o;
  
// Parameters for L_4_StreamLen2559
  DDL::Input StreamLen2559_4_ra1o;
  DDL::Integer StreamLen2559_4_ra0o;
  
// Parameters for L_6_StreamLen2559
  DDL::Integer StreamLen2559_6_ra0o;
  DDL::Input StreamLen2559_6_ra1o;
  
// Parameters for L_8_StreamLen2559
  DDL::Input StreamLen2559_8_ra1o;
  User::Value StreamLen2559_8_ra0o;
  
// Parameters for L_9_StreamLen2559
  DDL::Input StreamLen2559_9_ra0o;
  
// Parameters for L_11_StreamLen2559
  User::Value StreamLen2559_11_ra0o;
  DDL::Input StreamLen2559_11_ra1o;
  
// Parameters for L_12_StreamLen2559
  DDL::Input StreamLen2559_12_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> StreamLen2559_12_ra1o;
  StreamLen2559_12_ra0o = a1;
  StreamLen2559_12_ra1o = a2;
  goto StreamLen2559_12;
  // NormalBlock
  StreamLen2559_0: {
    DDL::UInt<64> r0 = DDL::integer_to_uint<64>(StreamLen2559_0_ra0o);
    StreamLen2559_0_ra0o.free();
    p.popDebug();
    *_result = r0;
    *_result_input = StreamLen2559_0_ra1o;
    return true;
  }
  // NormalBlock
  StreamLen2559_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(118UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:110:5--110:32",
               StreamLen2559_1_ra0o, r0);
    StreamLen2559_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  StreamLen2559_2: {
    if (StreamLen2559_2_ra0u.getValue()) {
      StreamLen2559_0_ra1o = StreamLen2559_2_ra1o;
      StreamLen2559_0_ra0o = StreamLen2559_2_ra2o;
      goto StreamLen2559_0;
    } else {
      StreamLen2559_2_ra2o.free();
      StreamLen2559_1_ra0o = StreamLen2559_2_ra1o;
      goto StreamLen2559_1;
    }
  }
  // NormalBlock
  StreamLen2559_3: {
    DDL::Integer r0 = DDL::Integer("18446744073709551615");
    DDL::Bool r1 = DDL::Bool{StreamLen2559_3_ra0o <= r0};
    r0.free();
    StreamLen2559_2_ra1o = StreamLen2559_3_ra1o;
    StreamLen2559_2_ra0u = r1;
    StreamLen2559_2_ra2o = StreamLen2559_3_ra0o;
    goto StreamLen2559_2;
  }
  // NormalBlock
  StreamLen2559_4: {
    StreamLen2559_2_ra1o = StreamLen2559_4_ra1o;
    StreamLen2559_2_ra0u = DDL::Bool(false);
    StreamLen2559_2_ra2o = StreamLen2559_4_ra0o;
    goto StreamLen2559_2;
  }
  // ReturnBlock (RetNo NoCapture)
  StreamLen2559_5: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  StreamLen2559_6: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Bool r1 = DDL::Bool{r0 <= StreamLen2559_6_ra0o};
    r0.free();
    if (r1.getValue()) {
      StreamLen2559_3_ra1o = StreamLen2559_6_ra1o;
      StreamLen2559_3_ra0o = StreamLen2559_6_ra0o;
      goto StreamLen2559_3;
    } else {
      StreamLen2559_4_ra1o = StreamLen2559_6_ra1o;
      StreamLen2559_4_ra0o = StreamLen2559_6_ra0o;
      goto StreamLen2559_4;
    }
  }
  // NormalBlock
  StreamLen2559_8: {
    User::Number r0 = StreamLen2559_8_ra0o.get_number();
    StreamLen2559_8_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:110:5--110:20:NumberAsNat",
                false);
    if (parser_NumberAsNat(p, &StreamLen2559_6_ra0o,
                           &StreamLen2559_6_ra1o, StreamLen2559_8_ra1o, r0)) {
      goto StreamLen2559_6;
    } else {
      goto StreamLen2559_5;
    }
  }
  // NormalBlock
  StreamLen2559_9: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:109:16--109:29",
               StreamLen2559_9_ra0o, r0);
    StreamLen2559_9_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  StreamLen2559_10: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  StreamLen2559_11: {
    switch (StreamLen2559_11_ra0o.getTag()) {
      case DDL::Tag::Value::number:
        StreamLen2559_8_ra1o = StreamLen2559_11_ra1o;
        StreamLen2559_8_ra0o = StreamLen2559_11_ra0o;
        goto StreamLen2559_8;
      default:
        StreamLen2559_11_ra0o.free();
        StreamLen2559_9_ra0o = StreamLen2559_11_ra1o;
        goto StreamLen2559_9;
    }
  }
  // NormalBlock
  StreamLen2559_12: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(76UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:108:16--108:44:LookupResolve",
                false);
    if (parser_LookupResolve(p, &StreamLen2559_11_ra0o,
                             &StreamLen2559_11_ra1o, StreamLen2559_12_ra0o, r0,
                             StreamLen2559_12_ra1o)) {
      goto StreamLen2559_11;
    } else {
      goto StreamLen2559_10;
    }
  }
}
bool parser_FilterParam(DDL::ParserStateUser<ReferenceTable> &p,
                        DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                                            User::Value>>* _result,
                        DDL::Input* _result_input, DDL::Input a1, User::Value a2) {
  
// Parameters for L_0_FilterParam2560
  DDL::Input FilterParam2560_0_ra1o;
  User::Value FilterParam2560_0_ra0o;
  
// Parameters for L_1_FilterParam2560
  DDL::Input FilterParam2560_1_ra0o;
  
// Parameters for L_2_FilterParam2560
  DDL::Input FilterParam2560_2_ra0o;
  
// Parameters for L_3_FilterParam2560
  DDL::Input FilterParam2560_3_ra0o;
  User::Value FilterParam2560_3_ra1o;
  FilterParam2560_3_ra0o = a1;
  FilterParam2560_3_ra1o = a2;
  goto FilterParam2560_3;
  // NormalBlock
  FilterParam2560_0: {
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r0 = FilterParam2560_0_ra0o.get_dict();
    FilterParam2560_0_ra0o.free();
    DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                        User::Value>> r1 = DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                                                               User::Value>>(r0);
    p.popDebug();
    *_result = r1;
    *_result_input = FilterParam2560_0_ra1o;
    return true;
  }
  // NormalBlock
  FilterParam2560_1: {
    p.popDebug();
    *_result = (DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                                    User::Value>>());
    *_result_input = FilterParam2560_1_ra0o;
    return true;
  }
  // NormalBlock
  FilterParam2560_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:138:3--144:3",
               FilterParam2560_2_ra0o, r0);
    FilterParam2560_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  FilterParam2560_3: {
    switch (FilterParam2560_3_ra1o.getTag()) {
      case DDL::Tag::Value::dict:
        FilterParam2560_0_ra1o = FilterParam2560_3_ra0o;
        FilterParam2560_0_ra0o = FilterParam2560_3_ra1o;
        goto FilterParam2560_0;
      case DDL::Tag::Value::null:
        FilterParam2560_3_ra1o.free();
        FilterParam2560_1_ra0o = FilterParam2560_3_ra0o;
        goto FilterParam2560_1;
      default:
        FilterParam2560_3_ra1o.free();
        FilterParam2560_2_ra0o = FilterParam2560_3_ra0o;
        goto FilterParam2560_2;
    }
  }
}
bool parser_Filter(DDL::ParserStateUser<ReferenceTable> &p,
                   User::Filter* _result, DDL::Input* _result_input, DDL::Input a1,
                   User::Value a2, User::Value a3) {
  
// Parameters for L_1_Filter2561
  DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                      User::Value>> Filter2561_1_ra0o;
  DDL::Input Filter2561_1_ra1o;
  DDL::Array<DDL::UInt<8>> Filter2561_1_ra2o;
  
// Parameters for L_3_Filter2561
  DDL::Input Filter2561_3_ra2o;
  User::Value Filter2561_3_ra0o;
  User::Value Filter2561_3_ra1o;
  
// Parameters for L_4_Filter2561
  DDL::Input Filter2561_4_ra0o;
  
// Parameters for L_5_Filter2561
  DDL::Input Filter2561_5_ra0o;
  User::Value Filter2561_5_ra1o;
  User::Value Filter2561_5_ra2o;
  Filter2561_5_ra0o = a1;
  Filter2561_5_ra1o = a2;
  Filter2561_5_ra2o = a3;
  goto Filter2561_5;
  // ReturnBlock (RetNo NoCapture)
  Filter2561_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Filter2561_1: {
    User::Filter r0;
    r0.init(Filter2561_1_ra2o, Filter2561_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = Filter2561_1_ra1o;
    return true;
  }
  // NormalBlock
  Filter2561_3: {
    DDL::Array<DDL::UInt<8>> r0 = Filter2561_3_ra0o.get_name();
    Filter2561_3_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:135:13--135:29:FilterParam",
                false);
    if (parser_FilterParam(p, &Filter2561_1_ra0o, &Filter2561_1_ra1o,
                           Filter2561_3_ra2o, Filter2561_3_ra1o)) {
      Filter2561_1_ra2o = r0;
      goto Filter2561_1;
    } else {
      r0.free();
      goto Filter2561_0;
    }
  }
  // NormalBlock
  Filter2561_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:134:13--134:24",
               Filter2561_4_ra0o, r0);
    Filter2561_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Filter2561_5: {
    switch (Filter2561_5_ra1o.getTag()) {
      case DDL::Tag::Value::name:
        Filter2561_3_ra2o = Filter2561_5_ra0o;
        Filter2561_3_ra0o = Filter2561_5_ra1o;
        Filter2561_3_ra1o = Filter2561_5_ra2o;
        goto Filter2561_3;
      default:
        Filter2561_5_ra1o.free();
        Filter2561_5_ra2o.free();
        Filter2561_4_ra0o = Filter2561_5_ra0o;
        goto Filter2561_4;
    }
  }
}
static inline
User::fdDefaults init_fdDefaults() {
  goto fdDefaults2563_0;
  // NormalBlock
  fdDefaults2563_0: {
    DDL::Integer r0 = DDL::Integer("1");
    DDL::Integer r1 = DDL::Integer("1");
    DDL::Integer r2 = DDL::Integer("8");
    DDL::Integer r3 = DDL::Integer("1");
    User::fdDefaults r4;
    r4.init(r0, r1, r2, r3);
    return r4;
  }
}
User::fdDefaults parser_fdDefaults() {
  static std::optional<DDL::Owned<User::fdDefaults>> result;
  if (! result.has_value()) {
    result = DDL::Owned{init_fdDefaults()};
  }
  return result->get();
}
bool parser_LookupNat(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                      DDL::Array<DDL::UInt<8>> a2,
                      DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a3) {
  
// Parameters for L_1_LookupNat2564
  DDL::Input LookupNat2564_1_ra1o;
  User::Value LookupNat2564_1_ra0o;
  
// Parameters for L_2_LookupNat2564
  DDL::Input LookupNat2564_2_ra0o;
  
// Parameters for L_4_LookupNat2564
  User::Value LookupNat2564_4_ra0o;
  DDL::Input LookupNat2564_4_ra1o;
  
// Parameters for L_5_LookupNat2564
  DDL::Input LookupNat2564_5_ra0o;
  DDL::Array<DDL::UInt<8>> LookupNat2564_5_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LookupNat2564_5_ra2o;
  LookupNat2564_5_ra0o = a1;
  LookupNat2564_5_ra1o = a2;
  LookupNat2564_5_ra2o = a3;
  goto LookupNat2564_5;
  // NormalBlock
  LookupNat2564_1: {
    User::Number r0 = LookupNat2564_1_ra0o.get_number();
    LookupNat2564_1_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:275:21--275:60:NumberAsNat",
                true);
    return parser_NumberAsNat(p, _result, _result_input,
                              LookupNat2564_1_ra1o, r0);
  }
  // NormalBlock
  LookupNat2564_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:275:34--275:60",
               LookupNat2564_2_ra0o, r0);
    LookupNat2564_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  LookupNat2564_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LookupNat2564_4: {
    switch (LookupNat2564_4_ra0o.getTag()) {
      case DDL::Tag::Value::number:
        LookupNat2564_1_ra1o = LookupNat2564_4_ra1o;
        LookupNat2564_1_ra0o = LookupNat2564_4_ra0o;
        goto LookupNat2564_1;
      default:
        LookupNat2564_4_ra0o.free();
        LookupNat2564_2_ra0o = LookupNat2564_4_ra1o;
        goto LookupNat2564_2;
    }
  }
  // NormalBlock
  LookupNat2564_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:275:34--275:50:LookupResolve",
                false);
    if (parser_LookupResolve(p, &LookupNat2564_4_ra0o,
                             &LookupNat2564_4_ra1o, LookupNat2564_5_ra0o, LookupNat2564_5_ra1o,
                             LookupNat2564_5_ra2o)) {
      goto LookupNat2564_4;
    } else {
      goto LookupNat2564_3;
    }
  }
}
bool parser_Default_2565(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                         DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2,
                         DDL::Integer a3) {
  
// Parameters for L_0_Default2565
  DDL::Input Default2565_0_ra0o;
  DDL::Integer Default2565_0_ra1o;
  
// Parameters for L_1_Default2565
  DDL::Integer Default2565_1_ra0o;
  DDL::Input Default2565_1_ra1o;
  
// Parameters for L_2_Default2565
  DDL::Input Default2565_2_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Default2565_2_ra1o;
  DDL::Integer Default2565_2_ra2o;
  Default2565_2_ra0o = a1;
  Default2565_2_ra1o = a2;
  Default2565_2_ra2o = a3;
  goto Default2565_2;
  // ReturnBlock (RetNo NoCapture)
  Default2565_0: {
    p.popDebug();
    *_result = Default2565_0_ra1o;
    *_result_input = Default2565_0_ra0o;
    return true;
  }
  // ReturnBlock (RetYes NoCapture)
  Default2565_1: {
    p.popDebug();
    *_result = Default2565_1_ra0o;
    *_result_input = Default2565_1_ra1o;
    return true;
  }
  // NormalBlock
  Default2565_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(114UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:73:21--73:21:LookupNat",
                false);
    Default2565_2_ra0o.copy();
    if (parser_LookupNat(p, &Default2565_1_ra0o, &Default2565_1_ra1o,
                         Default2565_2_ra0o, r0, Default2565_2_ra1o)) {
      Default2565_2_ra0o.free();
      Default2565_2_ra2o.free();
      goto Default2565_1;
    } else {
      Default2565_0_ra0o = Default2565_2_ra0o;
      Default2565_0_ra1o = Default2565_2_ra2o;
      goto Default2565_0;
    }
  }
}
bool parser_Default_2566(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                         DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2,
                         DDL::Integer a3) {
  
// Parameters for L_0_Default2566
  DDL::Input Default2566_0_ra0o;
  DDL::Integer Default2566_0_ra1o;
  
// Parameters for L_1_Default2566
  DDL::Integer Default2566_1_ra0o;
  DDL::Input Default2566_1_ra1o;
  
// Parameters for L_2_Default2566
  DDL::Input Default2566_2_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Default2566_2_ra1o;
  DDL::Integer Default2566_2_ra2o;
  Default2566_2_ra0o = a1;
  Default2566_2_ra1o = a2;
  Default2566_2_ra2o = a3;
  goto Default2566_2;
  // ReturnBlock (RetNo NoCapture)
  Default2566_0: {
    p.popDebug();
    *_result = Default2566_0_ra1o;
    *_result_input = Default2566_0_ra0o;
    return true;
  }
  // ReturnBlock (RetYes NoCapture)
  Default2566_1: {
    p.popDebug();
    *_result = Default2566_1_ra0o;
    *_result_input = Default2566_1_ra1o;
    return true;
  }
  // NormalBlock
  Default2566_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(67UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(115UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:73:21--73:21:LookupNat",
                false);
    Default2566_2_ra0o.copy();
    if (parser_LookupNat(p, &Default2566_1_ra0o, &Default2566_1_ra1o,
                         Default2566_2_ra0o, r0, Default2566_2_ra1o)) {
      Default2566_2_ra0o.free();
      Default2566_2_ra2o.free();
      goto Default2566_1;
    } else {
      Default2566_0_ra0o = Default2566_2_ra0o;
      Default2566_0_ra1o = Default2566_2_ra2o;
      goto Default2566_0;
    }
  }
}
bool parser_Default_2567(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                         DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2,
                         DDL::Integer a3) {
  
// Parameters for L_0_Default2567
  DDL::Input Default2567_0_ra0o;
  DDL::Integer Default2567_0_ra1o;
  
// Parameters for L_1_Default2567
  DDL::Integer Default2567_1_ra0o;
  DDL::Input Default2567_1_ra1o;
  
// Parameters for L_2_Default2567
  DDL::Input Default2567_2_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Default2567_2_ra1o;
  DDL::Integer Default2567_2_ra2o;
  Default2567_2_ra0o = a1;
  Default2567_2_ra1o = a2;
  Default2567_2_ra2o = a3;
  goto Default2567_2;
  // ReturnBlock (RetNo NoCapture)
  Default2567_0: {
    p.popDebug();
    *_result = Default2567_0_ra1o;
    *_result_input = Default2567_0_ra0o;
    return true;
  }
  // ReturnBlock (RetYes NoCapture)
  Default2567_1: {
    p.popDebug();
    *_result = Default2567_1_ra0o;
    *_result_input = Default2567_1_ra1o;
    return true;
  }
  // NormalBlock
  Default2567_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(67UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(109UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:73:21--73:21:LookupNat",
                false);
    Default2567_2_ra0o.copy();
    if (parser_LookupNat(p, &Default2567_1_ra0o, &Default2567_1_ra1o,
                         Default2567_2_ra0o, r0, Default2567_2_ra1o)) {
      Default2567_2_ra0o.free();
      Default2567_2_ra2o.free();
      goto Default2567_1;
    } else {
      Default2567_0_ra0o = Default2567_2_ra0o;
      Default2567_0_ra1o = Default2567_2_ra2o;
      goto Default2567_0;
    }
  }
}
bool parser_Default_2568(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                         DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2,
                         DDL::Integer a3) {
  
// Parameters for L_0_Default2568
  DDL::Input Default2568_0_ra0o;
  DDL::Integer Default2568_0_ra1o;
  
// Parameters for L_1_Default2568
  DDL::Integer Default2568_1_ra0o;
  DDL::Input Default2568_1_ra1o;
  
// Parameters for L_2_Default2568
  DDL::Input Default2568_2_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Default2568_2_ra1o;
  DDL::Integer Default2568_2_ra2o;
  Default2568_2_ra0o = a1;
  Default2568_2_ra1o = a2;
  Default2568_2_ra2o = a3;
  goto Default2568_2;
  // ReturnBlock (RetNo NoCapture)
  Default2568_0: {
    p.popDebug();
    *_result = Default2568_0_ra1o;
    *_result_input = Default2568_0_ra0o;
    return true;
  }
  // ReturnBlock (RetYes NoCapture)
  Default2568_1: {
    p.popDebug();
    *_result = Default2568_1_ra0o;
    *_result_input = Default2568_1_ra1o;
    return true;
  }
  // NormalBlock
  Default2568_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(67UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(115UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:73:21--73:21:LookupNat",
                false);
    Default2568_2_ra0o.copy();
    if (parser_LookupNat(p, &Default2568_1_ra0o, &Default2568_1_ra1o,
                         Default2568_2_ra0o, r0, Default2568_2_ra1o)) {
      Default2568_2_ra0o.free();
      Default2568_2_ra2o.free();
      goto Default2568_1;
    } else {
      Default2568_0_ra0o = Default2568_2_ra0o;
      Default2568_0_ra1o = Default2568_2_ra2o;
      goto Default2568_0;
    }
  }
}
bool parser_FlateDecodeParams(DDL::ParserStateUser<ReferenceTable> &p,
                              User::fdDefaults* _result, DDL::Input* _result_input,
                              DDL::Input a1,
                              DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>> a2) {
  
// Parameters for L_1_FlateDecodeParams2569
  DDL::Integer FlateDecodeParams2569_1_ra0o;
  DDL::Input FlateDecodeParams2569_1_ra1o;
  DDL::Integer FlateDecodeParams2569_1_ra2o;
  DDL::Integer FlateDecodeParams2569_1_ra3o;
  DDL::Integer FlateDecodeParams2569_1_ra4o;
  
// Parameters for L_2_FlateDecodeParams2569
  User::fdDefaults FlateDecodeParams2569_2_ra0o;
  DDL::Input FlateDecodeParams2569_2_ra5o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> FlateDecodeParams2569_2_ra1o;
  DDL::Integer FlateDecodeParams2569_2_ra2o;
  DDL::Integer FlateDecodeParams2569_2_ra3o;
  DDL::Integer FlateDecodeParams2569_2_ra4o;
  
// Parameters for L_4_FlateDecodeParams2569
  DDL::Integer FlateDecodeParams2569_4_ra0o;
  DDL::Input FlateDecodeParams2569_4_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> FlateDecodeParams2569_4_ra2o;
  DDL::Integer FlateDecodeParams2569_4_ra3o;
  DDL::Integer FlateDecodeParams2569_4_ra4o;
  
// Parameters for L_5_FlateDecodeParams2569
  User::fdDefaults FlateDecodeParams2569_5_ra0o;
  DDL::Input FlateDecodeParams2569_5_ra5o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> FlateDecodeParams2569_5_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> FlateDecodeParams2569_5_ra2o;
  DDL::Integer FlateDecodeParams2569_5_ra3o;
  DDL::Integer FlateDecodeParams2569_5_ra4o;
  
// Parameters for L_7_FlateDecodeParams2569
  DDL::Integer FlateDecodeParams2569_7_ra0o;
  DDL::Input FlateDecodeParams2569_7_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> FlateDecodeParams2569_7_ra2o;
  DDL::Integer FlateDecodeParams2569_7_ra3o;
  
// Parameters for L_8_FlateDecodeParams2569
  User::fdDefaults FlateDecodeParams2569_8_ra0o;
  DDL::Input FlateDecodeParams2569_8_ra4o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> FlateDecodeParams2569_8_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> FlateDecodeParams2569_8_ra2o;
  DDL::Integer FlateDecodeParams2569_8_ra3o;
  
// Parameters for L_10_FlateDecodeParams2569
  DDL::Integer FlateDecodeParams2569_10_ra0o;
  DDL::Input FlateDecodeParams2569_10_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> FlateDecodeParams2569_10_ra2o;
  
// Parameters for L_11_FlateDecodeParams2569
  User::fdDefaults FlateDecodeParams2569_11_ra0o;
  DDL::Input FlateDecodeParams2569_11_ra3o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> FlateDecodeParams2569_11_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> FlateDecodeParams2569_11_ra2o;
  
// Parameters for L_13_FlateDecodeParams2569
  DDL::Input FlateDecodeParams2569_13_ra1o;
  DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                      User::Value>> FlateDecodeParams2569_13_ra0o;
  
// Parameters for L_14_FlateDecodeParams2569
  DDL::Input FlateDecodeParams2569_14_ra0o;
  
// Parameters for L_16_FlateDecodeParams2569
  User::fdDefaults FlateDecodeParams2569_16_ra0o;
  DDL::Input FlateDecodeParams2569_16_ra1o;
  
// Parameters for L_19_FlateDecodeParams2569
  DDL::Input FlateDecodeParams2569_19_ra0o;
  
// Parameters for L_20_FlateDecodeParams2569
  DDL::Input FlateDecodeParams2569_20_ra0o;
  DDL::Input FlateDecodeParams2569_20_ra1o;
  DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                      User::Value>> FlateDecodeParams2569_20_ra2o;
  
// Parameters for L_21_FlateDecodeParams2569
  DDL::Input FlateDecodeParams2569_21_ra0o;
  DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                      User::Value>> FlateDecodeParams2569_21_ra1o;
  FlateDecodeParams2569_21_ra0o = a1;
  FlateDecodeParams2569_21_ra1o = a2;
  goto FlateDecodeParams2569_21;
  // ReturnBlock (RetNo NoCapture)
  FlateDecodeParams2569_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  FlateDecodeParams2569_1: {
    User::fdDefaults r0;
    r0.init(FlateDecodeParams2569_1_ra2o, FlateDecodeParams2569_1_ra3o,
            FlateDecodeParams2569_1_ra4o, FlateDecodeParams2569_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = FlateDecodeParams2569_1_ra1o;
    return true;
  }
  // ReturnBlock RetPure
  FlateDecodeParams2569_2: {
    DDL::Integer r0 = FlateDecodeParams2569_2_ra0o.get_columns();
    FlateDecodeParams2569_2_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:210:17--210:68:Default_2568",
                false);
    if (parser_Default_2568(p, &FlateDecodeParams2569_1_ra0o,
                            &FlateDecodeParams2569_1_ra1o, FlateDecodeParams2569_2_ra5o,
                            FlateDecodeParams2569_2_ra1o, r0)) {
      FlateDecodeParams2569_1_ra2o = FlateDecodeParams2569_2_ra2o;
      FlateDecodeParams2569_1_ra3o = FlateDecodeParams2569_2_ra3o;
      FlateDecodeParams2569_1_ra4o = FlateDecodeParams2569_2_ra4o;
      goto FlateDecodeParams2569_1;
    } else {
      FlateDecodeParams2569_2_ra2o.free();
      FlateDecodeParams2569_2_ra3o.free();
      FlateDecodeParams2569_2_ra4o.free();
      goto FlateDecodeParams2569_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  FlateDecodeParams2569_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  FlateDecodeParams2569_4: {
    FlateDecodeParams2569_2_ra0o = parser_fdDefaults();
    FlateDecodeParams2569_2_ra5o = FlateDecodeParams2569_4_ra1o;
    FlateDecodeParams2569_2_ra1o = FlateDecodeParams2569_4_ra2o;
    FlateDecodeParams2569_2_ra2o = FlateDecodeParams2569_4_ra3o;
    FlateDecodeParams2569_2_ra3o = FlateDecodeParams2569_4_ra4o;
    FlateDecodeParams2569_2_ra4o = FlateDecodeParams2569_4_ra0o;
    goto FlateDecodeParams2569_2;
  }
  // ReturnBlock RetPure
  FlateDecodeParams2569_5: {
    DDL::Integer r0 = FlateDecodeParams2569_5_ra0o.get_bpc();
    FlateDecodeParams2569_5_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:209:17--209:77:Default_2567",
                false);
    if (parser_Default_2567(p, &FlateDecodeParams2569_4_ra0o,
                            &FlateDecodeParams2569_4_ra1o, FlateDecodeParams2569_5_ra5o,
                            FlateDecodeParams2569_5_ra1o, r0)) {
      FlateDecodeParams2569_4_ra2o = FlateDecodeParams2569_5_ra2o;
      FlateDecodeParams2569_4_ra3o = FlateDecodeParams2569_5_ra3o;
      FlateDecodeParams2569_4_ra4o = FlateDecodeParams2569_5_ra4o;
      goto FlateDecodeParams2569_4;
    } else {
      FlateDecodeParams2569_5_ra2o.free();
      FlateDecodeParams2569_5_ra3o.free();
      FlateDecodeParams2569_5_ra4o.free();
      goto FlateDecodeParams2569_3;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  FlateDecodeParams2569_6: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  FlateDecodeParams2569_7: {
    FlateDecodeParams2569_7_ra2o.copy();
    FlateDecodeParams2569_5_ra0o = parser_fdDefaults();
    FlateDecodeParams2569_5_ra5o = FlateDecodeParams2569_7_ra1o;
    FlateDecodeParams2569_5_ra1o = FlateDecodeParams2569_7_ra2o;
    FlateDecodeParams2569_5_ra2o = FlateDecodeParams2569_7_ra2o;
    FlateDecodeParams2569_5_ra3o = FlateDecodeParams2569_7_ra3o;
    FlateDecodeParams2569_5_ra4o = FlateDecodeParams2569_7_ra0o;
    goto FlateDecodeParams2569_5;
  }
  // ReturnBlock RetPure
  FlateDecodeParams2569_8: {
    DDL::Integer r0 = FlateDecodeParams2569_8_ra0o.get_colors();
    FlateDecodeParams2569_8_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:208:17--208:67:Default_2566",
                false);
    if (parser_Default_2566(p, &FlateDecodeParams2569_7_ra0o,
                            &FlateDecodeParams2569_7_ra1o, FlateDecodeParams2569_8_ra4o,
                            FlateDecodeParams2569_8_ra1o, r0)) {
      FlateDecodeParams2569_7_ra2o = FlateDecodeParams2569_8_ra2o;
      FlateDecodeParams2569_7_ra3o = FlateDecodeParams2569_8_ra3o;
      goto FlateDecodeParams2569_7;
    } else {
      FlateDecodeParams2569_8_ra2o.free();
      FlateDecodeParams2569_8_ra3o.free();
      goto FlateDecodeParams2569_6;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  FlateDecodeParams2569_9: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  FlateDecodeParams2569_10: {
    FlateDecodeParams2569_10_ra2o.copy();
    FlateDecodeParams2569_8_ra0o = parser_fdDefaults();
    FlateDecodeParams2569_8_ra4o = FlateDecodeParams2569_10_ra1o;
    FlateDecodeParams2569_8_ra1o = FlateDecodeParams2569_10_ra2o;
    FlateDecodeParams2569_8_ra2o = FlateDecodeParams2569_10_ra2o;
    FlateDecodeParams2569_8_ra3o = FlateDecodeParams2569_10_ra0o;
    goto FlateDecodeParams2569_8;
  }
  // ReturnBlock RetPure
  FlateDecodeParams2569_11: {
    DDL::Integer r0 = FlateDecodeParams2569_11_ra0o.get_predictor();
    FlateDecodeParams2569_11_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:207:17--207:70:Default_2565",
                false);
    if (parser_Default_2565(p, &FlateDecodeParams2569_10_ra0o,
                            &FlateDecodeParams2569_10_ra1o, FlateDecodeParams2569_11_ra3o,
                            FlateDecodeParams2569_11_ra1o, r0)) {
      FlateDecodeParams2569_10_ra2o = FlateDecodeParams2569_11_ra2o;
      goto FlateDecodeParams2569_10;
    } else {
      FlateDecodeParams2569_11_ra2o.free();
      goto FlateDecodeParams2569_9;
    }
  }
  // NormalBlock
  FlateDecodeParams2569_13: {
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r0 = FlateDecodeParams2569_13_ra0o.getValue();
    FlateDecodeParams2569_13_ra0o.free();
    r0.copy();
    FlateDecodeParams2569_11_ra0o = parser_fdDefaults();
    FlateDecodeParams2569_11_ra3o = FlateDecodeParams2569_13_ra1o;
    FlateDecodeParams2569_11_ra1o = r0;
    FlateDecodeParams2569_11_ra2o = r0;
    goto FlateDecodeParams2569_11;
  }
  // NormalBlock
  FlateDecodeParams2569_14: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:206:17--206:30",
               FlateDecodeParams2569_14_ra0o, r0);
    FlateDecodeParams2569_14_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock RetPure
  FlateDecodeParams2569_16: {
    p.popDebug();
    *_result = FlateDecodeParams2569_16_ra0o;
    *_result_input = FlateDecodeParams2569_16_ra1o;
    return true;
  }
  // NormalBlock
  FlateDecodeParams2569_19: {
    FlateDecodeParams2569_16_ra0o = parser_fdDefaults();
    FlateDecodeParams2569_16_ra1o = FlateDecodeParams2569_19_ra0o;
    goto FlateDecodeParams2569_16;
  }
  // NormalBlock
  FlateDecodeParams2569_20: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:202:5--202:21",
               FlateDecodeParams2569_20_ra0o, r0);
    FlateDecodeParams2569_20_ra0o.free();
    r0.free();
    if (FlateDecodeParams2569_20_ra2o.isJust()) {
      FlateDecodeParams2569_13_ra1o = FlateDecodeParams2569_20_ra1o;
      FlateDecodeParams2569_13_ra0o = FlateDecodeParams2569_20_ra2o;
      goto FlateDecodeParams2569_13;
    } else {
      FlateDecodeParams2569_20_ra2o.free();
      FlateDecodeParams2569_14_ra0o = FlateDecodeParams2569_20_ra1o;
      goto FlateDecodeParams2569_14;
    }
  }
  // NormalBlock
  FlateDecodeParams2569_21: {
    FlateDecodeParams2569_21_ra0o.copy();
    if (FlateDecodeParams2569_21_ra1o.isJust()) {
      FlateDecodeParams2569_20_ra0o = FlateDecodeParams2569_21_ra0o;
      FlateDecodeParams2569_20_ra1o = FlateDecodeParams2569_21_ra0o;
      FlateDecodeParams2569_20_ra2o = FlateDecodeParams2569_21_ra1o;
      goto FlateDecodeParams2569_20;
    } else {
      FlateDecodeParams2569_21_ra1o.free();
      FlateDecodeParams2569_21_ra0o.free();
      FlateDecodeParams2569_19_ra0o = FlateDecodeParams2569_21_ra0o;
      goto FlateDecodeParams2569_19;
    }
  }
}
static inline
User::lzwDefaults init_lzzwDefaults() {
  goto lzzwDefaults2570_0;
  // NormalBlock
  lzzwDefaults2570_0: {
    DDL::Integer r0 = DDL::Integer("1");
    DDL::Integer r1 = DDL::Integer("1");
    DDL::Integer r2 = DDL::Integer("8");
    DDL::Integer r3 = DDL::Integer("1");
    DDL::Integer r4 = DDL::Integer("1");
    User::lzwDefaults r5;
    r5.init(r0, r1, r2, r3, r4);
    return r5;
  }
}
User::lzwDefaults parser_lzzwDefaults() {
  static std::optional<DDL::Owned<User::lzwDefaults>> result;
  if (! result.has_value()) {
    result = DDL::Owned{init_lzzwDefaults()};
  }
  return result->get();
}
bool parser_Default_2571(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                         DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2,
                         DDL::Integer a3) {
  
// Parameters for L_0_Default2571
  DDL::Input Default2571_0_ra0o;
  DDL::Integer Default2571_0_ra1o;
  
// Parameters for L_1_Default2571
  DDL::Integer Default2571_1_ra0o;
  DDL::Input Default2571_1_ra1o;
  
// Parameters for L_2_Default2571
  DDL::Input Default2571_2_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Default2571_2_ra1o;
  DDL::Integer Default2571_2_ra2o;
  Default2571_2_ra0o = a1;
  Default2571_2_ra1o = a2;
  Default2571_2_ra2o = a3;
  goto Default2571_2;
  // ReturnBlock (RetNo NoCapture)
  Default2571_0: {
    p.popDebug();
    *_result = Default2571_0_ra1o;
    *_result_input = Default2571_0_ra0o;
    return true;
  }
  // ReturnBlock (RetYes NoCapture)
  Default2571_1: {
    p.popDebug();
    *_result = Default2571_1_ra0o;
    *_result_input = Default2571_1_ra1o;
    return true;
  }
  // NormalBlock
  Default2571_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(67UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(101UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:73:21--73:21:LookupNat",
                false);
    Default2571_2_ra0o.copy();
    if (parser_LookupNat(p, &Default2571_1_ra0o, &Default2571_1_ra1o,
                         Default2571_2_ra0o, r0, Default2571_2_ra1o)) {
      Default2571_2_ra0o.free();
      Default2571_2_ra2o.free();
      goto Default2571_1;
    } else {
      Default2571_0_ra0o = Default2571_2_ra0o;
      Default2571_0_ra1o = Default2571_2_ra2o;
      goto Default2571_0;
    }
  }
}
bool parser_LZWDecodeParams(DDL::ParserStateUser<ReferenceTable> &p,
                            User::lzwDefaults* _result, DDL::Input* _result_input,
                            DDL::Input a1,
                            DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value>> a2) {
  
// Parameters for L_1_LZWDecodeParams2572
  DDL::Integer LZWDecodeParams2572_1_ra0o;
  DDL::Input LZWDecodeParams2572_1_ra1o;
  DDL::Integer LZWDecodeParams2572_1_ra2o;
  DDL::Integer LZWDecodeParams2572_1_ra3o;
  DDL::Integer LZWDecodeParams2572_1_ra4o;
  DDL::Integer LZWDecodeParams2572_1_ra5o;
  
// Parameters for L_2_LZWDecodeParams2572
  User::lzwDefaults LZWDecodeParams2572_2_ra0o;
  DDL::Input LZWDecodeParams2572_2_ra6o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_2_ra1o;
  DDL::Integer LZWDecodeParams2572_2_ra2o;
  DDL::Integer LZWDecodeParams2572_2_ra3o;
  DDL::Integer LZWDecodeParams2572_2_ra4o;
  DDL::Integer LZWDecodeParams2572_2_ra5o;
  
// Parameters for L_4_LZWDecodeParams2572
  DDL::Integer LZWDecodeParams2572_4_ra0o;
  DDL::Input LZWDecodeParams2572_4_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_4_ra2o;
  DDL::Integer LZWDecodeParams2572_4_ra3o;
  DDL::Integer LZWDecodeParams2572_4_ra4o;
  DDL::Integer LZWDecodeParams2572_4_ra5o;
  
// Parameters for L_5_LZWDecodeParams2572
  User::lzwDefaults LZWDecodeParams2572_5_ra0o;
  DDL::Input LZWDecodeParams2572_5_ra6o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_5_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_5_ra2o;
  DDL::Integer LZWDecodeParams2572_5_ra3o;
  DDL::Integer LZWDecodeParams2572_5_ra4o;
  DDL::Integer LZWDecodeParams2572_5_ra5o;
  
// Parameters for L_7_LZWDecodeParams2572
  DDL::Integer LZWDecodeParams2572_7_ra0o;
  DDL::Input LZWDecodeParams2572_7_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_7_ra2o;
  DDL::Integer LZWDecodeParams2572_7_ra3o;
  DDL::Integer LZWDecodeParams2572_7_ra4o;
  
// Parameters for L_8_LZWDecodeParams2572
  User::lzwDefaults LZWDecodeParams2572_8_ra0o;
  DDL::Input LZWDecodeParams2572_8_ra5o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_8_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_8_ra2o;
  DDL::Integer LZWDecodeParams2572_8_ra3o;
  DDL::Integer LZWDecodeParams2572_8_ra4o;
  
// Parameters for L_10_LZWDecodeParams2572
  DDL::Integer LZWDecodeParams2572_10_ra0o;
  DDL::Input LZWDecodeParams2572_10_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_10_ra2o;
  DDL::Integer LZWDecodeParams2572_10_ra3o;
  
// Parameters for L_11_LZWDecodeParams2572
  User::lzwDefaults LZWDecodeParams2572_11_ra0o;
  DDL::Input LZWDecodeParams2572_11_ra4o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_11_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_11_ra2o;
  DDL::Integer LZWDecodeParams2572_11_ra3o;
  
// Parameters for L_13_LZWDecodeParams2572
  DDL::Integer LZWDecodeParams2572_13_ra0o;
  DDL::Input LZWDecodeParams2572_13_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_13_ra2o;
  
// Parameters for L_14_LZWDecodeParams2572
  User::lzwDefaults LZWDecodeParams2572_14_ra0o;
  DDL::Input LZWDecodeParams2572_14_ra3o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_14_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LZWDecodeParams2572_14_ra2o;
  
// Parameters for L_16_LZWDecodeParams2572
  DDL::Input LZWDecodeParams2572_16_ra1o;
  DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                      User::Value>> LZWDecodeParams2572_16_ra0o;
  
// Parameters for L_17_LZWDecodeParams2572
  DDL::Input LZWDecodeParams2572_17_ra0o;
  
// Parameters for L_19_LZWDecodeParams2572
  User::lzwDefaults LZWDecodeParams2572_19_ra0o;
  DDL::Input LZWDecodeParams2572_19_ra1o;
  
// Parameters for L_22_LZWDecodeParams2572
  DDL::Input LZWDecodeParams2572_22_ra0o;
  
// Parameters for L_23_LZWDecodeParams2572
  DDL::Input LZWDecodeParams2572_23_ra0o;
  DDL::Input LZWDecodeParams2572_23_ra1o;
  DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                      User::Value>> LZWDecodeParams2572_23_ra2o;
  
// Parameters for L_24_LZWDecodeParams2572
  DDL::Input LZWDecodeParams2572_24_ra0o;
  DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                      User::Value>> LZWDecodeParams2572_24_ra1o;
  LZWDecodeParams2572_24_ra0o = a1;
  LZWDecodeParams2572_24_ra1o = a2;
  goto LZWDecodeParams2572_24;
  // ReturnBlock (RetNo NoCapture)
  LZWDecodeParams2572_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LZWDecodeParams2572_1: {
    User::lzwDefaults r0;
    r0.init(LZWDecodeParams2572_1_ra2o, LZWDecodeParams2572_1_ra3o,
            LZWDecodeParams2572_1_ra4o, LZWDecodeParams2572_1_ra5o,
            LZWDecodeParams2572_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = LZWDecodeParams2572_1_ra1o;
    return true;
  }
  // ReturnBlock RetPure
  LZWDecodeParams2572_2: {
    DDL::Integer r0 = LZWDecodeParams2572_2_ra0o.get_earlychange();
    LZWDecodeParams2572_2_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:239:19--239:79:Default_2571",
                false);
    if (parser_Default_2571(p, &LZWDecodeParams2572_1_ra0o,
                            &LZWDecodeParams2572_1_ra1o, LZWDecodeParams2572_2_ra6o,
                            LZWDecodeParams2572_2_ra1o, r0)) {
      LZWDecodeParams2572_1_ra2o = LZWDecodeParams2572_2_ra2o;
      LZWDecodeParams2572_1_ra3o = LZWDecodeParams2572_2_ra3o;
      LZWDecodeParams2572_1_ra4o = LZWDecodeParams2572_2_ra4o;
      LZWDecodeParams2572_1_ra5o = LZWDecodeParams2572_2_ra5o;
      goto LZWDecodeParams2572_1;
    } else {
      LZWDecodeParams2572_2_ra2o.free();
      LZWDecodeParams2572_2_ra3o.free();
      LZWDecodeParams2572_2_ra4o.free();
      LZWDecodeParams2572_2_ra5o.free();
      goto LZWDecodeParams2572_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  LZWDecodeParams2572_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LZWDecodeParams2572_4: {
    LZWDecodeParams2572_2_ra0o = parser_lzzwDefaults();
    LZWDecodeParams2572_2_ra6o = LZWDecodeParams2572_4_ra1o;
    LZWDecodeParams2572_2_ra1o = LZWDecodeParams2572_4_ra2o;
    LZWDecodeParams2572_2_ra2o = LZWDecodeParams2572_4_ra3o;
    LZWDecodeParams2572_2_ra3o = LZWDecodeParams2572_4_ra4o;
    LZWDecodeParams2572_2_ra4o = LZWDecodeParams2572_4_ra5o;
    LZWDecodeParams2572_2_ra5o = LZWDecodeParams2572_4_ra0o;
    goto LZWDecodeParams2572_2;
  }
  // ReturnBlock RetPure
  LZWDecodeParams2572_5: {
    DDL::Integer r0 = LZWDecodeParams2572_5_ra0o.get_columns();
    LZWDecodeParams2572_5_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:238:19--238:75:Default_2568",
                false);
    if (parser_Default_2568(p, &LZWDecodeParams2572_4_ra0o,
                            &LZWDecodeParams2572_4_ra1o, LZWDecodeParams2572_5_ra6o,
                            LZWDecodeParams2572_5_ra1o, r0)) {
      LZWDecodeParams2572_4_ra2o = LZWDecodeParams2572_5_ra2o;
      LZWDecodeParams2572_4_ra3o = LZWDecodeParams2572_5_ra3o;
      LZWDecodeParams2572_4_ra4o = LZWDecodeParams2572_5_ra4o;
      LZWDecodeParams2572_4_ra5o = LZWDecodeParams2572_5_ra5o;
      goto LZWDecodeParams2572_4;
    } else {
      LZWDecodeParams2572_5_ra2o.free();
      LZWDecodeParams2572_5_ra3o.free();
      LZWDecodeParams2572_5_ra4o.free();
      LZWDecodeParams2572_5_ra5o.free();
      goto LZWDecodeParams2572_3;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  LZWDecodeParams2572_6: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LZWDecodeParams2572_7: {
    LZWDecodeParams2572_7_ra2o.copy();
    LZWDecodeParams2572_5_ra0o = parser_lzzwDefaults();
    LZWDecodeParams2572_5_ra6o = LZWDecodeParams2572_7_ra1o;
    LZWDecodeParams2572_5_ra1o = LZWDecodeParams2572_7_ra2o;
    LZWDecodeParams2572_5_ra2o = LZWDecodeParams2572_7_ra2o;
    LZWDecodeParams2572_5_ra3o = LZWDecodeParams2572_7_ra3o;
    LZWDecodeParams2572_5_ra4o = LZWDecodeParams2572_7_ra4o;
    LZWDecodeParams2572_5_ra5o = LZWDecodeParams2572_7_ra0o;
    goto LZWDecodeParams2572_5;
  }
  // ReturnBlock RetPure
  LZWDecodeParams2572_8: {
    DDL::Integer r0 = LZWDecodeParams2572_8_ra0o.get_bpc();
    LZWDecodeParams2572_8_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:237:19--237:84:Default_2567",
                false);
    if (parser_Default_2567(p, &LZWDecodeParams2572_7_ra0o,
                            &LZWDecodeParams2572_7_ra1o, LZWDecodeParams2572_8_ra5o,
                            LZWDecodeParams2572_8_ra1o, r0)) {
      LZWDecodeParams2572_7_ra2o = LZWDecodeParams2572_8_ra2o;
      LZWDecodeParams2572_7_ra3o = LZWDecodeParams2572_8_ra3o;
      LZWDecodeParams2572_7_ra4o = LZWDecodeParams2572_8_ra4o;
      goto LZWDecodeParams2572_7;
    } else {
      LZWDecodeParams2572_8_ra2o.free();
      LZWDecodeParams2572_8_ra3o.free();
      LZWDecodeParams2572_8_ra4o.free();
      goto LZWDecodeParams2572_6;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  LZWDecodeParams2572_9: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LZWDecodeParams2572_10: {
    LZWDecodeParams2572_10_ra2o.copy();
    LZWDecodeParams2572_8_ra0o = parser_lzzwDefaults();
    LZWDecodeParams2572_8_ra5o = LZWDecodeParams2572_10_ra1o;
    LZWDecodeParams2572_8_ra1o = LZWDecodeParams2572_10_ra2o;
    LZWDecodeParams2572_8_ra2o = LZWDecodeParams2572_10_ra2o;
    LZWDecodeParams2572_8_ra3o = LZWDecodeParams2572_10_ra3o;
    LZWDecodeParams2572_8_ra4o = LZWDecodeParams2572_10_ra0o;
    goto LZWDecodeParams2572_8;
  }
  // ReturnBlock RetPure
  LZWDecodeParams2572_11: {
    DDL::Integer r0 = LZWDecodeParams2572_11_ra0o.get_colors();
    LZWDecodeParams2572_11_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:236:19--236:74:Default_2566",
                false);
    if (parser_Default_2566(p, &LZWDecodeParams2572_10_ra0o,
                            &LZWDecodeParams2572_10_ra1o, LZWDecodeParams2572_11_ra4o,
                            LZWDecodeParams2572_11_ra1o, r0)) {
      LZWDecodeParams2572_10_ra2o = LZWDecodeParams2572_11_ra2o;
      LZWDecodeParams2572_10_ra3o = LZWDecodeParams2572_11_ra3o;
      goto LZWDecodeParams2572_10;
    } else {
      LZWDecodeParams2572_11_ra2o.free();
      LZWDecodeParams2572_11_ra3o.free();
      goto LZWDecodeParams2572_9;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  LZWDecodeParams2572_12: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LZWDecodeParams2572_13: {
    LZWDecodeParams2572_13_ra2o.copy();
    LZWDecodeParams2572_11_ra0o = parser_lzzwDefaults();
    LZWDecodeParams2572_11_ra4o = LZWDecodeParams2572_13_ra1o;
    LZWDecodeParams2572_11_ra1o = LZWDecodeParams2572_13_ra2o;
    LZWDecodeParams2572_11_ra2o = LZWDecodeParams2572_13_ra2o;
    LZWDecodeParams2572_11_ra3o = LZWDecodeParams2572_13_ra0o;
    goto LZWDecodeParams2572_11;
  }
  // ReturnBlock RetPure
  LZWDecodeParams2572_14: {
    DDL::Integer r0 = LZWDecodeParams2572_14_ra0o.get_predictor();
    LZWDecodeParams2572_14_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:235:19--235:77:Default_2565",
                false);
    if (parser_Default_2565(p, &LZWDecodeParams2572_13_ra0o,
                            &LZWDecodeParams2572_13_ra1o, LZWDecodeParams2572_14_ra3o,
                            LZWDecodeParams2572_14_ra1o, r0)) {
      LZWDecodeParams2572_13_ra2o = LZWDecodeParams2572_14_ra2o;
      goto LZWDecodeParams2572_13;
    } else {
      LZWDecodeParams2572_14_ra2o.free();
      goto LZWDecodeParams2572_12;
    }
  }
  // NormalBlock
  LZWDecodeParams2572_16: {
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r0 = LZWDecodeParams2572_16_ra0o.getValue();
    LZWDecodeParams2572_16_ra0o.free();
    r0.copy();
    LZWDecodeParams2572_14_ra0o = parser_lzzwDefaults();
    LZWDecodeParams2572_14_ra3o = LZWDecodeParams2572_16_ra1o;
    LZWDecodeParams2572_14_ra1o = r0;
    LZWDecodeParams2572_14_ra2o = r0;
    goto LZWDecodeParams2572_14;
  }
  // NormalBlock
  LZWDecodeParams2572_17: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:234:19--234:32",
               LZWDecodeParams2572_17_ra0o, r0);
    LZWDecodeParams2572_17_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock RetPure
  LZWDecodeParams2572_19: {
    p.popDebug();
    *_result = LZWDecodeParams2572_19_ra0o;
    *_result_input = LZWDecodeParams2572_19_ra1o;
    return true;
  }
  // NormalBlock
  LZWDecodeParams2572_22: {
    LZWDecodeParams2572_19_ra0o = parser_lzzwDefaults();
    LZWDecodeParams2572_19_ra1o = LZWDecodeParams2572_22_ra0o;
    goto LZWDecodeParams2572_19;
  }
  // NormalBlock
  LZWDecodeParams2572_23: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:230:5--230:21",
               LZWDecodeParams2572_23_ra0o, r0);
    LZWDecodeParams2572_23_ra0o.free();
    r0.free();
    if (LZWDecodeParams2572_23_ra2o.isJust()) {
      LZWDecodeParams2572_16_ra1o = LZWDecodeParams2572_23_ra1o;
      LZWDecodeParams2572_16_ra0o = LZWDecodeParams2572_23_ra2o;
      goto LZWDecodeParams2572_16;
    } else {
      LZWDecodeParams2572_23_ra2o.free();
      LZWDecodeParams2572_17_ra0o = LZWDecodeParams2572_23_ra1o;
      goto LZWDecodeParams2572_17;
    }
  }
  // NormalBlock
  LZWDecodeParams2572_24: {
    LZWDecodeParams2572_24_ra0o.copy();
    if (LZWDecodeParams2572_24_ra1o.isJust()) {
      LZWDecodeParams2572_23_ra0o = LZWDecodeParams2572_24_ra0o;
      LZWDecodeParams2572_23_ra1o = LZWDecodeParams2572_24_ra0o;
      LZWDecodeParams2572_23_ra2o = LZWDecodeParams2572_24_ra1o;
      goto LZWDecodeParams2572_23;
    } else {
      LZWDecodeParams2572_24_ra1o.free();
      LZWDecodeParams2572_24_ra0o.free();
      LZWDecodeParams2572_22_ra0o = LZWDecodeParams2572_24_ra0o;
      goto LZWDecodeParams2572_22;
    }
  }
}
bool parser_ApplyFilter_2574(DDL::ParserStateUser<ReferenceTable> &p,
                             User::ApplyFilter* _result, DDL::Input* _result_input,
                             DDL::Input a1, DDL::Input a2, User::fdDefaults a3, User::Filter a4,
                             DDL::Bool a5, DDL::Input a6) {
  
// Parameters for L_1_ApplyFilter2574
  DDL::Input ApplyFilter2574_1_ra0o;
  DDL::Input ApplyFilter2574_1_ra1o;
  
// Parameters for L_2_ApplyFilter2574
  DDL::Input ApplyFilter2574_2_ra2o;
  User::fdDefaults ApplyFilter2574_2_ra0o;
  DDL::Input ApplyFilter2574_2_ra1o;
  
// Parameters for L_3_ApplyFilter2574
  DDL::Input ApplyFilter2574_3_ra1o;
  DDL::Array<DDL::UInt<8>> ApplyFilter2574_3_ra0o;
  
// Parameters for L_4_ApplyFilter2574
  DDL::Input ApplyFilter2574_4_ra1o;
  User::Filter ApplyFilter2574_4_ra0o;
  
// Parameters for L_5_ApplyFilter2574
  DDL::Input ApplyFilter2574_5_ra1o;
  User::Filter ApplyFilter2574_5_ra0o;
  
// Parameters for L_6_ApplyFilter2574
  DDL::Input ApplyFilter2574_6_ra1o;
  User::Filter ApplyFilter2574_6_ra0o;
  
// Parameters for L_7_ApplyFilter2574
  DDL::Input ApplyFilter2574_7_ra0o;
  DDL::Input ApplyFilter2574_7_ra1o;
  User::fdDefaults ApplyFilter2574_7_ra2o;
  User::Filter ApplyFilter2574_7_ra3o;
  DDL::Bool ApplyFilter2574_7_ra4u;
  DDL::Input ApplyFilter2574_7_ra5o;
  ApplyFilter2574_7_ra0o = a1;
  ApplyFilter2574_7_ra1o = a2;
  ApplyFilter2574_7_ra2o = a3;
  ApplyFilter2574_7_ra3o = a4;
  ApplyFilter2574_7_ra4u = a5;
  ApplyFilter2574_7_ra5o = a6;
  goto ApplyFilter2574_7;
  // ReturnBlock (RetNo NoCapture)
  ApplyFilter2574_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ApplyFilter2574_1: {
    User::ApplyFilter r0;
    r0.init_ok(ApplyFilter2574_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ApplyFilter2574_1_ra1o;
    return true;
  }
  // NormalBlock
  ApplyFilter2574_2: {
    DDL::Integer r0 = ApplyFilter2574_2_ra0o.get_predictor();
    DDL::Integer r1 = ApplyFilter2574_2_ra0o.get_colors();
    DDL::Integer r2 = ApplyFilter2574_2_ra0o.get_bpc();
    DDL::Integer r3 = ApplyFilter2574_2_ra0o.get_columns();
    ApplyFilter2574_2_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:193:18--193:18:FlateDecode",
                false);
    if (parser_FlateDecode(p, &ApplyFilter2574_1_ra0o,
                           &ApplyFilter2574_1_ra1o, ApplyFilter2574_2_ra2o, r0, r1, r2, r3,
                           ApplyFilter2574_2_ra1o)) {
      goto ApplyFilter2574_1;
    } else {
      goto ApplyFilter2574_0;
    }
  }
  // NormalBlock
  ApplyFilter2574_3: {
    User::ApplyFilter r0;
    r0.init_unsupported(ApplyFilter2574_3_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ApplyFilter2574_3_ra1o;
    return true;
  }
  // NormalBlock
  ApplyFilter2574_4: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2574_4_ra0o.get_name();
    ApplyFilter2574_4_ra0o.free();
    ApplyFilter2574_3_ra1o = ApplyFilter2574_4_ra1o;
    ApplyFilter2574_3_ra0o = r0;
    goto ApplyFilter2574_3;
  }
  // NormalBlock
  ApplyFilter2574_5: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2574_5_ra0o.get_name();
    ApplyFilter2574_5_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(40UL), DDL::UInt<8>(119UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(109UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(41UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    ApplyFilter2574_3_ra1o = ApplyFilter2574_5_ra1o;
    ApplyFilter2574_3_ra0o = r3;
    goto ApplyFilter2574_3;
  }
  // NormalBlock
  ApplyFilter2574_6: {
    DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                        User::Value>> r0 = ApplyFilter2574_6_ra0o.get_param();
    if (r0.isJust()) {
      r0.free();
      ApplyFilter2574_5_ra1o = ApplyFilter2574_6_ra1o;
      ApplyFilter2574_5_ra0o = ApplyFilter2574_6_ra0o;
      goto ApplyFilter2574_5;
    } else {
      r0.free();
      ApplyFilter2574_4_ra1o = ApplyFilter2574_6_ra1o;
      ApplyFilter2574_4_ra0o = ApplyFilter2574_6_ra0o;
      goto ApplyFilter2574_4;
    }
  }
  // NormalBlock
  ApplyFilter2574_7: {
    ApplyFilter2574_7_ra5o.free();
    if (ApplyFilter2574_7_ra4u.getValue()) {
      ApplyFilter2574_7_ra3o.free();
      ApplyFilter2574_2_ra2o = ApplyFilter2574_7_ra0o;
      ApplyFilter2574_2_ra0o = ApplyFilter2574_7_ra2o;
      ApplyFilter2574_2_ra1o = ApplyFilter2574_7_ra1o;
      goto ApplyFilter2574_2;
    } else {
      ApplyFilter2574_7_ra1o.free();
      ApplyFilter2574_7_ra2o.free();
      ApplyFilter2574_6_ra1o = ApplyFilter2574_7_ra0o;
      ApplyFilter2574_6_ra0o = ApplyFilter2574_7_ra3o;
      goto ApplyFilter2574_6;
    }
  }
}
bool parser_ApplyFilter_2576(DDL::ParserStateUser<ReferenceTable> &p,
                             User::ApplyFilter* _result, DDL::Input* _result_input,
                             DDL::Input a1, DDL::Input a2, User::lzwDefaults a3,
                             User::Filter a4, DDL::Bool a5, DDL::Input a6) {
  
// Parameters for L_1_ApplyFilter2576
  DDL::Input ApplyFilter2576_1_ra0o;
  DDL::Input ApplyFilter2576_1_ra1o;
  
// Parameters for L_2_ApplyFilter2576
  DDL::Input ApplyFilter2576_2_ra2o;
  User::lzwDefaults ApplyFilter2576_2_ra0o;
  DDL::Input ApplyFilter2576_2_ra1o;
  
// Parameters for L_3_ApplyFilter2576
  DDL::Input ApplyFilter2576_3_ra1o;
  DDL::Array<DDL::UInt<8>> ApplyFilter2576_3_ra0o;
  
// Parameters for L_4_ApplyFilter2576
  DDL::Input ApplyFilter2576_4_ra1o;
  User::Filter ApplyFilter2576_4_ra0o;
  
// Parameters for L_5_ApplyFilter2576
  DDL::Input ApplyFilter2576_5_ra1o;
  User::Filter ApplyFilter2576_5_ra0o;
  
// Parameters for L_6_ApplyFilter2576
  DDL::Input ApplyFilter2576_6_ra1o;
  User::Filter ApplyFilter2576_6_ra0o;
  
// Parameters for L_7_ApplyFilter2576
  DDL::Input ApplyFilter2576_7_ra0o;
  DDL::Input ApplyFilter2576_7_ra1o;
  User::lzwDefaults ApplyFilter2576_7_ra2o;
  User::Filter ApplyFilter2576_7_ra3o;
  DDL::Bool ApplyFilter2576_7_ra4u;
  DDL::Input ApplyFilter2576_7_ra5o;
  ApplyFilter2576_7_ra0o = a1;
  ApplyFilter2576_7_ra1o = a2;
  ApplyFilter2576_7_ra2o = a3;
  ApplyFilter2576_7_ra3o = a4;
  ApplyFilter2576_7_ra4u = a5;
  ApplyFilter2576_7_ra5o = a6;
  goto ApplyFilter2576_7;
  // ReturnBlock (RetNo NoCapture)
  ApplyFilter2576_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ApplyFilter2576_1: {
    User::ApplyFilter r0;
    r0.init_ok(ApplyFilter2576_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ApplyFilter2576_1_ra1o;
    return true;
  }
  // NormalBlock
  ApplyFilter2576_2: {
    DDL::Integer r0 = ApplyFilter2576_2_ra0o.get_predictor();
    DDL::Integer r1 = ApplyFilter2576_2_ra0o.get_colors();
    DDL::Integer r2 = ApplyFilter2576_2_ra0o.get_bpc();
    DDL::Integer r3 = ApplyFilter2576_2_ra0o.get_columns();
    DDL::Integer r4 = ApplyFilter2576_2_ra0o.get_earlychange();
    ApplyFilter2576_2_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:193:18--193:18:LZWDecode",
                false);
    if (parser_LZWDecode(p, &ApplyFilter2576_1_ra0o,
                         &ApplyFilter2576_1_ra1o, ApplyFilter2576_2_ra2o, r0, r1, r2, r3,
                         r4, ApplyFilter2576_2_ra1o)) {
      goto ApplyFilter2576_1;
    } else {
      goto ApplyFilter2576_0;
    }
  }
  // NormalBlock
  ApplyFilter2576_3: {
    User::ApplyFilter r0;
    r0.init_unsupported(ApplyFilter2576_3_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ApplyFilter2576_3_ra1o;
    return true;
  }
  // NormalBlock
  ApplyFilter2576_4: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2576_4_ra0o.get_name();
    ApplyFilter2576_4_ra0o.free();
    ApplyFilter2576_3_ra1o = ApplyFilter2576_4_ra1o;
    ApplyFilter2576_3_ra0o = r0;
    goto ApplyFilter2576_3;
  }
  // NormalBlock
  ApplyFilter2576_5: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2576_5_ra0o.get_name();
    ApplyFilter2576_5_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(40UL), DDL::UInt<8>(119UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(109UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(41UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    ApplyFilter2576_3_ra1o = ApplyFilter2576_5_ra1o;
    ApplyFilter2576_3_ra0o = r3;
    goto ApplyFilter2576_3;
  }
  // NormalBlock
  ApplyFilter2576_6: {
    DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                        User::Value>> r0 = ApplyFilter2576_6_ra0o.get_param();
    if (r0.isJust()) {
      r0.free();
      ApplyFilter2576_5_ra1o = ApplyFilter2576_6_ra1o;
      ApplyFilter2576_5_ra0o = ApplyFilter2576_6_ra0o;
      goto ApplyFilter2576_5;
    } else {
      r0.free();
      ApplyFilter2576_4_ra1o = ApplyFilter2576_6_ra1o;
      ApplyFilter2576_4_ra0o = ApplyFilter2576_6_ra0o;
      goto ApplyFilter2576_4;
    }
  }
  // NormalBlock
  ApplyFilter2576_7: {
    ApplyFilter2576_7_ra5o.free();
    if (ApplyFilter2576_7_ra4u.getValue()) {
      ApplyFilter2576_7_ra3o.free();
      ApplyFilter2576_2_ra2o = ApplyFilter2576_7_ra0o;
      ApplyFilter2576_2_ra0o = ApplyFilter2576_7_ra2o;
      ApplyFilter2576_2_ra1o = ApplyFilter2576_7_ra1o;
      goto ApplyFilter2576_2;
    } else {
      ApplyFilter2576_7_ra1o.free();
      ApplyFilter2576_7_ra2o.free();
      ApplyFilter2576_6_ra1o = ApplyFilter2576_7_ra0o;
      ApplyFilter2576_6_ra0o = ApplyFilter2576_7_ra3o;
      goto ApplyFilter2576_6;
    }
  }
}
bool parser_ApplyFilter_2578(DDL::ParserStateUser<ReferenceTable> &p,
                             User::ApplyFilter* _result, DDL::Input* _result_input,
                             DDL::Input a1, DDL::Input a2, User::Filter a3, DDL::Bool a4,
                             DDL::Input a5) {
  
// Parameters for L_1_ApplyFilter2578
  DDL::Input ApplyFilter2578_1_ra0o;
  DDL::Input ApplyFilter2578_1_ra1o;
  
// Parameters for L_2_ApplyFilter2578
  DDL::Input ApplyFilter2578_2_ra1o;
  DDL::Input ApplyFilter2578_2_ra0o;
  
// Parameters for L_3_ApplyFilter2578
  DDL::Input ApplyFilter2578_3_ra1o;
  DDL::Array<DDL::UInt<8>> ApplyFilter2578_3_ra0o;
  
// Parameters for L_4_ApplyFilter2578
  DDL::Input ApplyFilter2578_4_ra1o;
  User::Filter ApplyFilter2578_4_ra0o;
  
// Parameters for L_5_ApplyFilter2578
  DDL::Input ApplyFilter2578_5_ra1o;
  User::Filter ApplyFilter2578_5_ra0o;
  
// Parameters for L_6_ApplyFilter2578
  DDL::Input ApplyFilter2578_6_ra1o;
  User::Filter ApplyFilter2578_6_ra0o;
  
// Parameters for L_7_ApplyFilter2578
  DDL::Input ApplyFilter2578_7_ra0o;
  DDL::Input ApplyFilter2578_7_ra1o;
  User::Filter ApplyFilter2578_7_ra2o;
  DDL::Bool ApplyFilter2578_7_ra3u;
  DDL::Input ApplyFilter2578_7_ra4o;
  ApplyFilter2578_7_ra0o = a1;
  ApplyFilter2578_7_ra1o = a2;
  ApplyFilter2578_7_ra2o = a3;
  ApplyFilter2578_7_ra3u = a4;
  ApplyFilter2578_7_ra4o = a5;
  goto ApplyFilter2578_7;
  // ReturnBlock (RetNo NoCapture)
  ApplyFilter2578_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ApplyFilter2578_1: {
    User::ApplyFilter r0;
    r0.init_ok(ApplyFilter2578_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ApplyFilter2578_1_ra1o;
    return true;
  }
  // NormalBlock
  ApplyFilter2578_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:193:18--193:18:ASCIIHexDecode",
                false);
    if (parser_ASCIIHexDecode(p, &ApplyFilter2578_1_ra0o,
                              &ApplyFilter2578_1_ra1o, ApplyFilter2578_2_ra1o,
                              ApplyFilter2578_2_ra0o)) {
      goto ApplyFilter2578_1;
    } else {
      goto ApplyFilter2578_0;
    }
  }
  // NormalBlock
  ApplyFilter2578_3: {
    User::ApplyFilter r0;
    r0.init_unsupported(ApplyFilter2578_3_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ApplyFilter2578_3_ra1o;
    return true;
  }
  // NormalBlock
  ApplyFilter2578_4: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2578_4_ra0o.get_name();
    ApplyFilter2578_4_ra0o.free();
    ApplyFilter2578_3_ra1o = ApplyFilter2578_4_ra1o;
    ApplyFilter2578_3_ra0o = r0;
    goto ApplyFilter2578_3;
  }
  // NormalBlock
  ApplyFilter2578_5: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2578_5_ra0o.get_name();
    ApplyFilter2578_5_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(40UL), DDL::UInt<8>(119UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(109UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(41UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    ApplyFilter2578_3_ra1o = ApplyFilter2578_5_ra1o;
    ApplyFilter2578_3_ra0o = r3;
    goto ApplyFilter2578_3;
  }
  // NormalBlock
  ApplyFilter2578_6: {
    DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                        User::Value>> r0 = ApplyFilter2578_6_ra0o.get_param();
    if (r0.isJust()) {
      r0.free();
      ApplyFilter2578_5_ra1o = ApplyFilter2578_6_ra1o;
      ApplyFilter2578_5_ra0o = ApplyFilter2578_6_ra0o;
      goto ApplyFilter2578_5;
    } else {
      r0.free();
      ApplyFilter2578_4_ra1o = ApplyFilter2578_6_ra1o;
      ApplyFilter2578_4_ra0o = ApplyFilter2578_6_ra0o;
      goto ApplyFilter2578_4;
    }
  }
  // NormalBlock
  ApplyFilter2578_7: {
    ApplyFilter2578_7_ra4o.free();
    if (ApplyFilter2578_7_ra3u.getValue()) {
      ApplyFilter2578_7_ra2o.free();
      ApplyFilter2578_2_ra1o = ApplyFilter2578_7_ra0o;
      ApplyFilter2578_2_ra0o = ApplyFilter2578_7_ra1o;
      goto ApplyFilter2578_2;
    } else {
      ApplyFilter2578_7_ra1o.free();
      ApplyFilter2578_6_ra1o = ApplyFilter2578_7_ra0o;
      ApplyFilter2578_6_ra0o = ApplyFilter2578_7_ra2o;
      goto ApplyFilter2578_6;
    }
  }
}
bool parser_ApplyFilter_2580(DDL::ParserStateUser<ReferenceTable> &p,
                             User::ApplyFilter* _result, DDL::Input* _result_input,
                             DDL::Input a1, DDL::Input a2, User::Filter a3, DDL::Bool a4,
                             DDL::Input a5) {
  
// Parameters for L_1_ApplyFilter2580
  DDL::Input ApplyFilter2580_1_ra0o;
  DDL::Input ApplyFilter2580_1_ra1o;
  
// Parameters for L_2_ApplyFilter2580
  DDL::Input ApplyFilter2580_2_ra1o;
  DDL::Input ApplyFilter2580_2_ra0o;
  
// Parameters for L_3_ApplyFilter2580
  DDL::Input ApplyFilter2580_3_ra1o;
  DDL::Array<DDL::UInt<8>> ApplyFilter2580_3_ra0o;
  
// Parameters for L_4_ApplyFilter2580
  DDL::Input ApplyFilter2580_4_ra1o;
  User::Filter ApplyFilter2580_4_ra0o;
  
// Parameters for L_5_ApplyFilter2580
  DDL::Input ApplyFilter2580_5_ra1o;
  User::Filter ApplyFilter2580_5_ra0o;
  
// Parameters for L_6_ApplyFilter2580
  DDL::Input ApplyFilter2580_6_ra1o;
  User::Filter ApplyFilter2580_6_ra0o;
  
// Parameters for L_7_ApplyFilter2580
  DDL::Input ApplyFilter2580_7_ra0o;
  DDL::Input ApplyFilter2580_7_ra1o;
  User::Filter ApplyFilter2580_7_ra2o;
  DDL::Bool ApplyFilter2580_7_ra3u;
  DDL::Input ApplyFilter2580_7_ra4o;
  ApplyFilter2580_7_ra0o = a1;
  ApplyFilter2580_7_ra1o = a2;
  ApplyFilter2580_7_ra2o = a3;
  ApplyFilter2580_7_ra3u = a4;
  ApplyFilter2580_7_ra4o = a5;
  goto ApplyFilter2580_7;
  // ReturnBlock (RetNo NoCapture)
  ApplyFilter2580_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ApplyFilter2580_1: {
    User::ApplyFilter r0;
    r0.init_ok(ApplyFilter2580_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ApplyFilter2580_1_ra1o;
    return true;
  }
  // NormalBlock
  ApplyFilter2580_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:193:18--193:18:ASCII85Decode",
                false);
    if (parser_ASCII85Decode(p, &ApplyFilter2580_1_ra0o,
                             &ApplyFilter2580_1_ra1o, ApplyFilter2580_2_ra1o,
                             ApplyFilter2580_2_ra0o)) {
      goto ApplyFilter2580_1;
    } else {
      goto ApplyFilter2580_0;
    }
  }
  // NormalBlock
  ApplyFilter2580_3: {
    User::ApplyFilter r0;
    r0.init_unsupported(ApplyFilter2580_3_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ApplyFilter2580_3_ra1o;
    return true;
  }
  // NormalBlock
  ApplyFilter2580_4: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2580_4_ra0o.get_name();
    ApplyFilter2580_4_ra0o.free();
    ApplyFilter2580_3_ra1o = ApplyFilter2580_4_ra1o;
    ApplyFilter2580_3_ra0o = r0;
    goto ApplyFilter2580_3;
  }
  // NormalBlock
  ApplyFilter2580_5: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2580_5_ra0o.get_name();
    ApplyFilter2580_5_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(40UL), DDL::UInt<8>(119UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(109UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(41UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    ApplyFilter2580_3_ra1o = ApplyFilter2580_5_ra1o;
    ApplyFilter2580_3_ra0o = r3;
    goto ApplyFilter2580_3;
  }
  // NormalBlock
  ApplyFilter2580_6: {
    DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                        User::Value>> r0 = ApplyFilter2580_6_ra0o.get_param();
    if (r0.isJust()) {
      r0.free();
      ApplyFilter2580_5_ra1o = ApplyFilter2580_6_ra1o;
      ApplyFilter2580_5_ra0o = ApplyFilter2580_6_ra0o;
      goto ApplyFilter2580_5;
    } else {
      r0.free();
      ApplyFilter2580_4_ra1o = ApplyFilter2580_6_ra1o;
      ApplyFilter2580_4_ra0o = ApplyFilter2580_6_ra0o;
      goto ApplyFilter2580_4;
    }
  }
  // NormalBlock
  ApplyFilter2580_7: {
    ApplyFilter2580_7_ra4o.free();
    if (ApplyFilter2580_7_ra3u.getValue()) {
      ApplyFilter2580_7_ra2o.free();
      ApplyFilter2580_2_ra1o = ApplyFilter2580_7_ra0o;
      ApplyFilter2580_2_ra0o = ApplyFilter2580_7_ra1o;
      goto ApplyFilter2580_2;
    } else {
      ApplyFilter2580_7_ra1o.free();
      ApplyFilter2580_6_ra1o = ApplyFilter2580_7_ra0o;
      ApplyFilter2580_6_ra0o = ApplyFilter2580_7_ra2o;
      goto ApplyFilter2580_6;
    }
  }
}
bool parser_ApplyFilter_2581(DDL::ParserStateUser<ReferenceTable> &p,
                             User::ApplyFilter* _result, DDL::Input* _result_input,
                             DDL::Input a1, DDL::Input a2, User::Filter a3, DDL::Bool a4,
                             DDL::Input a5) {
  
// Parameters for L_0_ApplyFilter2581
  DDL::Input ApplyFilter2581_0_ra1o;
  DDL::Input ApplyFilter2581_0_ra0o;
  
// Parameters for L_1_ApplyFilter2581
  DDL::Input ApplyFilter2581_1_ra1o;
  DDL::Array<DDL::UInt<8>> ApplyFilter2581_1_ra0o;
  
// Parameters for L_2_ApplyFilter2581
  DDL::Input ApplyFilter2581_2_ra1o;
  User::Filter ApplyFilter2581_2_ra0o;
  
// Parameters for L_3_ApplyFilter2581
  DDL::Input ApplyFilter2581_3_ra1o;
  User::Filter ApplyFilter2581_3_ra0o;
  
// Parameters for L_4_ApplyFilter2581
  DDL::Input ApplyFilter2581_4_ra1o;
  User::Filter ApplyFilter2581_4_ra0o;
  
// Parameters for L_5_ApplyFilter2581
  DDL::Input ApplyFilter2581_5_ra0o;
  DDL::Input ApplyFilter2581_5_ra1o;
  User::Filter ApplyFilter2581_5_ra2o;
  DDL::Bool ApplyFilter2581_5_ra3u;
  DDL::Input ApplyFilter2581_5_ra4o;
  ApplyFilter2581_5_ra0o = a1;
  ApplyFilter2581_5_ra1o = a2;
  ApplyFilter2581_5_ra2o = a3;
  ApplyFilter2581_5_ra3u = a4;
  ApplyFilter2581_5_ra4o = a5;
  goto ApplyFilter2581_5;
  // NormalBlock
  ApplyFilter2581_0: {
    User::ApplyFilter r0;
    r0.init_ok(ApplyFilter2581_0_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ApplyFilter2581_0_ra1o;
    return true;
  }
  // NormalBlock
  ApplyFilter2581_1: {
    User::ApplyFilter r0;
    r0.init_unsupported(ApplyFilter2581_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ApplyFilter2581_1_ra1o;
    return true;
  }
  // NormalBlock
  ApplyFilter2581_2: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2581_2_ra0o.get_name();
    ApplyFilter2581_2_ra0o.free();
    ApplyFilter2581_1_ra1o = ApplyFilter2581_2_ra1o;
    ApplyFilter2581_1_ra0o = r0;
    goto ApplyFilter2581_1;
  }
  // NormalBlock
  ApplyFilter2581_3: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2581_3_ra0o.get_name();
    ApplyFilter2581_3_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(40UL), DDL::UInt<8>(119UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(109UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(41UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    ApplyFilter2581_1_ra1o = ApplyFilter2581_3_ra1o;
    ApplyFilter2581_1_ra0o = r3;
    goto ApplyFilter2581_1;
  }
  // NormalBlock
  ApplyFilter2581_4: {
    DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                        User::Value>> r0 = ApplyFilter2581_4_ra0o.get_param();
    if (r0.isJust()) {
      r0.free();
      ApplyFilter2581_3_ra1o = ApplyFilter2581_4_ra1o;
      ApplyFilter2581_3_ra0o = ApplyFilter2581_4_ra0o;
      goto ApplyFilter2581_3;
    } else {
      r0.free();
      ApplyFilter2581_2_ra1o = ApplyFilter2581_4_ra1o;
      ApplyFilter2581_2_ra0o = ApplyFilter2581_4_ra0o;
      goto ApplyFilter2581_2;
    }
  }
  // NormalBlock
  ApplyFilter2581_5: {
    ApplyFilter2581_5_ra4o.free();
    if (ApplyFilter2581_5_ra3u.getValue()) {
      ApplyFilter2581_5_ra2o.free();
      ApplyFilter2581_0_ra1o = ApplyFilter2581_5_ra0o;
      ApplyFilter2581_0_ra0o = ApplyFilter2581_5_ra1o;
      goto ApplyFilter2581_0;
    } else {
      ApplyFilter2581_5_ra1o.free();
      ApplyFilter2581_4_ra1o = ApplyFilter2581_5_ra0o;
      ApplyFilter2581_4_ra0o = ApplyFilter2581_5_ra2o;
      goto ApplyFilter2581_4;
    }
  }
}
bool parser_ApplyFilter_2582(DDL::ParserStateUser<ReferenceTable> &p,
                             User::ApplyFilter* _result, DDL::Input* _result_input,
                             DDL::Input a1, User::Filter a2, DDL::Bool a3, DDL::Input a4) {
  
// Parameters for L_0_ApplyFilter2582
  DDL::Input ApplyFilter2582_0_ra0o;
  
// Parameters for L_1_ApplyFilter2582
  DDL::Input ApplyFilter2582_1_ra1o;
  DDL::Array<DDL::UInt<8>> ApplyFilter2582_1_ra0o;
  
// Parameters for L_2_ApplyFilter2582
  DDL::Input ApplyFilter2582_2_ra1o;
  User::Filter ApplyFilter2582_2_ra0o;
  
// Parameters for L_3_ApplyFilter2582
  DDL::Input ApplyFilter2582_3_ra1o;
  User::Filter ApplyFilter2582_3_ra0o;
  
// Parameters for L_4_ApplyFilter2582
  DDL::Input ApplyFilter2582_4_ra1o;
  User::Filter ApplyFilter2582_4_ra0o;
  
// Parameters for L_5_ApplyFilter2582
  DDL::Input ApplyFilter2582_5_ra0o;
  User::Filter ApplyFilter2582_5_ra1o;
  DDL::Bool ApplyFilter2582_5_ra2u;
  DDL::Input ApplyFilter2582_5_ra3o;
  ApplyFilter2582_5_ra0o = a1;
  ApplyFilter2582_5_ra1o = a2;
  ApplyFilter2582_5_ra2u = a3;
  ApplyFilter2582_5_ra3o = a4;
  goto ApplyFilter2582_5;
  // NormalBlock
  ApplyFilter2582_0: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL)};
    p.noteFail(false,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:193:18--193:18",
               ApplyFilter2582_0_ra0o, r0);
    ApplyFilter2582_0_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  ApplyFilter2582_1: {
    User::ApplyFilter r0;
    r0.init_unsupported(ApplyFilter2582_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = ApplyFilter2582_1_ra1o;
    return true;
  }
  // NormalBlock
  ApplyFilter2582_2: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2582_2_ra0o.get_name();
    ApplyFilter2582_2_ra0o.free();
    ApplyFilter2582_1_ra1o = ApplyFilter2582_2_ra1o;
    ApplyFilter2582_1_ra0o = r0;
    goto ApplyFilter2582_1;
  }
  // NormalBlock
  ApplyFilter2582_3: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilter2582_3_ra0o.get_name();
    ApplyFilter2582_3_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(40UL), DDL::UInt<8>(119UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(109UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(41UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    ApplyFilter2582_1_ra1o = ApplyFilter2582_3_ra1o;
    ApplyFilter2582_1_ra0o = r3;
    goto ApplyFilter2582_1;
  }
  // NormalBlock
  ApplyFilter2582_4: {
    DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                        User::Value>> r0 = ApplyFilter2582_4_ra0o.get_param();
    if (r0.isJust()) {
      r0.free();
      ApplyFilter2582_3_ra1o = ApplyFilter2582_4_ra1o;
      ApplyFilter2582_3_ra0o = ApplyFilter2582_4_ra0o;
      goto ApplyFilter2582_3;
    } else {
      r0.free();
      ApplyFilter2582_2_ra1o = ApplyFilter2582_4_ra1o;
      ApplyFilter2582_2_ra0o = ApplyFilter2582_4_ra0o;
      goto ApplyFilter2582_2;
    }
  }
  // NormalBlock
  ApplyFilter2582_5: {
    ApplyFilter2582_5_ra3o.free();
    if (ApplyFilter2582_5_ra2u.getValue()) {
      ApplyFilter2582_5_ra1o.free();
      ApplyFilter2582_0_ra0o = ApplyFilter2582_5_ra0o;
      goto ApplyFilter2582_0;
    } else {
      ApplyFilter2582_4_ra1o = ApplyFilter2582_5_ra0o;
      ApplyFilter2582_4_ra0o = ApplyFilter2582_5_ra1o;
      goto ApplyFilter2582_4;
    }
  }
}
bool parser_TryApplyFilter(DDL::ParserStateUser<ReferenceTable> &p,
                           User::ApplyFilter* _result, DDL::Input* _result_input,
                           DDL::Input a1, User::Filter a2, DDL::Input a3) {
  
// Parameters for L_0_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_0_ra5o;
  DDL::Bool TryApplyFilter2583_0_ra0u;
  DDL::Input TryApplyFilter2583_0_ra1o;
  User::Filter TryApplyFilter2583_0_ra2o;
  User::fdDefaults TryApplyFilter2583_0_ra3o;
  DDL::Input TryApplyFilter2583_0_ra4o;
  
// Parameters for L_1_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_1_ra5o;
  User::fdDefaults TryApplyFilter2583_1_ra0o;
  DDL::Input TryApplyFilter2583_1_ra1o;
  User::Filter TryApplyFilter2583_1_ra2o;
  User::fdDefaults TryApplyFilter2583_1_ra3o;
  DDL::Input TryApplyFilter2583_1_ra4o;
  
// Parameters for L_2_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_2_ra4o;
  DDL::Input TryApplyFilter2583_2_ra0o;
  User::Filter TryApplyFilter2583_2_ra1o;
  User::fdDefaults TryApplyFilter2583_2_ra2o;
  DDL::Input TryApplyFilter2583_2_ra3o;
  
// Parameters for L_3_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_3_ra5o;
  DDL::Bool TryApplyFilter2583_3_ra0u;
  DDL::Input TryApplyFilter2583_3_ra1o;
  User::Filter TryApplyFilter2583_3_ra2o;
  User::fdDefaults TryApplyFilter2583_3_ra3o;
  DDL::Input TryApplyFilter2583_3_ra4o;
  User::fdDefaults TryApplyFilter2583_3_ra6o;
  
// Parameters for L_4_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_4_ra5o;
  User::fdDefaults TryApplyFilter2583_4_ra0o;
  DDL::Input TryApplyFilter2583_4_ra1o;
  User::Filter TryApplyFilter2583_4_ra2o;
  User::fdDefaults TryApplyFilter2583_4_ra3o;
  DDL::Input TryApplyFilter2583_4_ra4o;
  
// Parameters for L_5_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_5_ra5o;
  DDL::Input TryApplyFilter2583_5_ra0o;
  User::Filter TryApplyFilter2583_5_ra1o;
  User::fdDefaults TryApplyFilter2583_5_ra2o;
  DDL::Input TryApplyFilter2583_5_ra3o;
  User::fdDefaults TryApplyFilter2583_5_ra4o;
  
// Parameters for L_6_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_6_ra6o;
  DDL::Bool TryApplyFilter2583_6_ra0u;
  DDL::Input TryApplyFilter2583_6_ra1o;
  User::Filter TryApplyFilter2583_6_ra2o;
  User::fdDefaults TryApplyFilter2583_6_ra3o;
  DDL::Input TryApplyFilter2583_6_ra4o;
  User::fdDefaults TryApplyFilter2583_6_ra5o;
  
// Parameters for L_7_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_7_ra5o;
  DDL::Input TryApplyFilter2583_7_ra0o;
  User::Filter TryApplyFilter2583_7_ra1o;
  User::fdDefaults TryApplyFilter2583_7_ra2o;
  DDL::Input TryApplyFilter2583_7_ra3o;
  User::fdDefaults TryApplyFilter2583_7_ra4o;
  
// Parameters for L_8_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_8_ra5o;
  User::fdDefaults TryApplyFilter2583_8_ra0o;
  DDL::Input TryApplyFilter2583_8_ra1o;
  User::Filter TryApplyFilter2583_8_ra2o;
  User::fdDefaults TryApplyFilter2583_8_ra3o;
  DDL::Input TryApplyFilter2583_8_ra4o;
  
// Parameters for L_10_TryApplyFilter2583
  User::fdDefaults TryApplyFilter2583_10_ra0o;
  DDL::Input TryApplyFilter2583_10_ra1o;
  DDL::Input TryApplyFilter2583_10_ra2o;
  User::Filter TryApplyFilter2583_10_ra3o;
  
// Parameters for L_11_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_11_ra2o;
  User::Filter TryApplyFilter2583_11_ra0o;
  DDL::Input TryApplyFilter2583_11_ra1o;
  
// Parameters for L_12_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_12_ra5o;
  DDL::Bool TryApplyFilter2583_12_ra0u;
  DDL::Input TryApplyFilter2583_12_ra1o;
  User::Filter TryApplyFilter2583_12_ra2o;
  User::lzwDefaults TryApplyFilter2583_12_ra3o;
  DDL::Input TryApplyFilter2583_12_ra4o;
  
// Parameters for L_13_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_13_ra5o;
  User::lzwDefaults TryApplyFilter2583_13_ra0o;
  DDL::Input TryApplyFilter2583_13_ra1o;
  User::Filter TryApplyFilter2583_13_ra2o;
  User::lzwDefaults TryApplyFilter2583_13_ra3o;
  DDL::Input TryApplyFilter2583_13_ra4o;
  
// Parameters for L_14_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_14_ra4o;
  DDL::Input TryApplyFilter2583_14_ra0o;
  User::Filter TryApplyFilter2583_14_ra1o;
  User::lzwDefaults TryApplyFilter2583_14_ra2o;
  DDL::Input TryApplyFilter2583_14_ra3o;
  
// Parameters for L_15_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_15_ra5o;
  DDL::Bool TryApplyFilter2583_15_ra0u;
  DDL::Input TryApplyFilter2583_15_ra1o;
  User::Filter TryApplyFilter2583_15_ra2o;
  User::lzwDefaults TryApplyFilter2583_15_ra3o;
  DDL::Input TryApplyFilter2583_15_ra4o;
  User::lzwDefaults TryApplyFilter2583_15_ra6o;
  
// Parameters for L_16_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_16_ra5o;
  User::lzwDefaults TryApplyFilter2583_16_ra0o;
  DDL::Input TryApplyFilter2583_16_ra1o;
  User::Filter TryApplyFilter2583_16_ra2o;
  User::lzwDefaults TryApplyFilter2583_16_ra3o;
  DDL::Input TryApplyFilter2583_16_ra4o;
  
// Parameters for L_17_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_17_ra5o;
  DDL::Input TryApplyFilter2583_17_ra0o;
  User::Filter TryApplyFilter2583_17_ra1o;
  User::lzwDefaults TryApplyFilter2583_17_ra2o;
  DDL::Input TryApplyFilter2583_17_ra3o;
  User::lzwDefaults TryApplyFilter2583_17_ra4o;
  
// Parameters for L_18_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_18_ra6o;
  DDL::Bool TryApplyFilter2583_18_ra0u;
  DDL::Input TryApplyFilter2583_18_ra1o;
  User::Filter TryApplyFilter2583_18_ra2o;
  User::lzwDefaults TryApplyFilter2583_18_ra3o;
  DDL::Input TryApplyFilter2583_18_ra4o;
  User::lzwDefaults TryApplyFilter2583_18_ra5o;
  
// Parameters for L_19_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_19_ra5o;
  DDL::Input TryApplyFilter2583_19_ra0o;
  User::Filter TryApplyFilter2583_19_ra1o;
  User::lzwDefaults TryApplyFilter2583_19_ra2o;
  DDL::Input TryApplyFilter2583_19_ra3o;
  User::lzwDefaults TryApplyFilter2583_19_ra4o;
  
// Parameters for L_20_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_20_ra5o;
  User::lzwDefaults TryApplyFilter2583_20_ra0o;
  DDL::Input TryApplyFilter2583_20_ra1o;
  User::Filter TryApplyFilter2583_20_ra2o;
  User::lzwDefaults TryApplyFilter2583_20_ra3o;
  DDL::Input TryApplyFilter2583_20_ra4o;
  
// Parameters for L_22_TryApplyFilter2583
  User::lzwDefaults TryApplyFilter2583_22_ra0o;
  DDL::Input TryApplyFilter2583_22_ra1o;
  DDL::Input TryApplyFilter2583_22_ra2o;
  User::Filter TryApplyFilter2583_22_ra3o;
  
// Parameters for L_23_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_23_ra2o;
  User::Filter TryApplyFilter2583_23_ra0o;
  DDL::Input TryApplyFilter2583_23_ra1o;
  
// Parameters for L_24_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_24_ra2o;
  DDL::Input TryApplyFilter2583_24_ra0o;
  User::Filter TryApplyFilter2583_24_ra1o;
  
// Parameters for L_25_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_25_ra2o;
  DDL::Input TryApplyFilter2583_25_ra0o;
  User::Filter TryApplyFilter2583_25_ra1o;
  
// Parameters for L_26_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_26_ra2o;
  DDL::Input TryApplyFilter2583_26_ra0o;
  User::Filter TryApplyFilter2583_26_ra1o;
  
// Parameters for L_27_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_27_ra2o;
  User::Filter TryApplyFilter2583_27_ra0o;
  DDL::Input TryApplyFilter2583_27_ra1o;
  
// Parameters for L_28_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_28_ra2o;
  User::Filter TryApplyFilter2583_28_ra0o;
  DDL::Input TryApplyFilter2583_28_ra1o;
  
// Parameters for L_29_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_29_ra2o;
  User::Filter TryApplyFilter2583_29_ra0o;
  DDL::Input TryApplyFilter2583_29_ra1o;
  
// Parameters for L_30_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_30_ra2o;
  User::Filter TryApplyFilter2583_30_ra0o;
  DDL::Input TryApplyFilter2583_30_ra1o;
  
// Parameters for L_31_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_31_ra2o;
  User::Filter TryApplyFilter2583_31_ra0o;
  DDL::Input TryApplyFilter2583_31_ra1o;
  
// Parameters for L_32_TryApplyFilter2583
  DDL::Input TryApplyFilter2583_32_ra0o;
  User::Filter TryApplyFilter2583_32_ra1o;
  DDL::Input TryApplyFilter2583_32_ra2o;
  TryApplyFilter2583_32_ra0o = a1;
  TryApplyFilter2583_32_ra1o = a2;
  TryApplyFilter2583_32_ra2o = a3;
  goto TryApplyFilter2583_32;
  // NormalBlock
  TryApplyFilter2583_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:151:7--158:37:ApplyFilter_2574",
                true);
    return parser_ApplyFilter_2574(p, _result, _result_input,
                                   TryApplyFilter2583_0_ra5o, TryApplyFilter2583_0_ra4o,
                                   TryApplyFilter2583_0_ra3o, TryApplyFilter2583_0_ra2o,
                                   TryApplyFilter2583_0_ra0u, TryApplyFilter2583_0_ra1o);
  }
  // NormalBlock
  TryApplyFilter2583_1: {
    DDL::Integer r0 = TryApplyFilter2583_1_ra0o.get_bpc();
    TryApplyFilter2583_1_ra0o.free();
    DDL::Integer r1 = DDL::Integer("8");
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    TryApplyFilter2583_0_ra5o = TryApplyFilter2583_1_ra5o;
    TryApplyFilter2583_0_ra0u = r2;
    TryApplyFilter2583_0_ra1o = TryApplyFilter2583_1_ra1o;
    TryApplyFilter2583_0_ra2o = TryApplyFilter2583_1_ra2o;
    TryApplyFilter2583_0_ra3o = TryApplyFilter2583_1_ra3o;
    TryApplyFilter2583_0_ra4o = TryApplyFilter2583_1_ra4o;
    goto TryApplyFilter2583_0;
  }
  // NormalBlock
  TryApplyFilter2583_2: {
    TryApplyFilter2583_0_ra5o = TryApplyFilter2583_2_ra4o;
    TryApplyFilter2583_0_ra0u = DDL::Bool(false);
    TryApplyFilter2583_0_ra1o = TryApplyFilter2583_2_ra0o;
    TryApplyFilter2583_0_ra2o = TryApplyFilter2583_2_ra1o;
    TryApplyFilter2583_0_ra3o = TryApplyFilter2583_2_ra2o;
    TryApplyFilter2583_0_ra4o = TryApplyFilter2583_2_ra3o;
    goto TryApplyFilter2583_0;
  }
  // NormalBlock
  TryApplyFilter2583_3: {
    if (TryApplyFilter2583_3_ra0u.getValue()) {
      TryApplyFilter2583_1_ra5o = TryApplyFilter2583_3_ra5o;
      TryApplyFilter2583_1_ra0o = TryApplyFilter2583_3_ra6o;
      TryApplyFilter2583_1_ra1o = TryApplyFilter2583_3_ra1o;
      TryApplyFilter2583_1_ra2o = TryApplyFilter2583_3_ra2o;
      TryApplyFilter2583_1_ra3o = TryApplyFilter2583_3_ra3o;
      TryApplyFilter2583_1_ra4o = TryApplyFilter2583_3_ra4o;
      goto TryApplyFilter2583_1;
    } else {
      TryApplyFilter2583_3_ra6o.free();
      TryApplyFilter2583_2_ra4o = TryApplyFilter2583_3_ra5o;
      TryApplyFilter2583_2_ra0o = TryApplyFilter2583_3_ra1o;
      TryApplyFilter2583_2_ra1o = TryApplyFilter2583_3_ra2o;
      TryApplyFilter2583_2_ra2o = TryApplyFilter2583_3_ra3o;
      TryApplyFilter2583_2_ra3o = TryApplyFilter2583_3_ra4o;
      goto TryApplyFilter2583_2;
    }
  }
  // NormalBlock
  TryApplyFilter2583_4: {
    DDL::Integer r0 = TryApplyFilter2583_4_ra0o.get_colors();
    DDL::Integer r1 = DDL::Integer("1");
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    TryApplyFilter2583_3_ra5o = TryApplyFilter2583_4_ra5o;
    TryApplyFilter2583_3_ra0u = r2;
    TryApplyFilter2583_3_ra1o = TryApplyFilter2583_4_ra1o;
    TryApplyFilter2583_3_ra2o = TryApplyFilter2583_4_ra2o;
    TryApplyFilter2583_3_ra3o = TryApplyFilter2583_4_ra3o;
    TryApplyFilter2583_3_ra4o = TryApplyFilter2583_4_ra4o;
    TryApplyFilter2583_3_ra6o = TryApplyFilter2583_4_ra0o;
    goto TryApplyFilter2583_3;
  }
  // NormalBlock
  TryApplyFilter2583_5: {
    TryApplyFilter2583_3_ra5o = TryApplyFilter2583_5_ra5o;
    TryApplyFilter2583_3_ra0u = DDL::Bool(false);
    TryApplyFilter2583_3_ra1o = TryApplyFilter2583_5_ra0o;
    TryApplyFilter2583_3_ra2o = TryApplyFilter2583_5_ra1o;
    TryApplyFilter2583_3_ra3o = TryApplyFilter2583_5_ra2o;
    TryApplyFilter2583_3_ra4o = TryApplyFilter2583_5_ra3o;
    TryApplyFilter2583_3_ra6o = TryApplyFilter2583_5_ra4o;
    goto TryApplyFilter2583_3;
  }
  // NormalBlock
  TryApplyFilter2583_6: {
    if (TryApplyFilter2583_6_ra0u.getValue()) {
      TryApplyFilter2583_4_ra5o = TryApplyFilter2583_6_ra6o;
      TryApplyFilter2583_4_ra0o = TryApplyFilter2583_6_ra5o;
      TryApplyFilter2583_4_ra1o = TryApplyFilter2583_6_ra1o;
      TryApplyFilter2583_4_ra2o = TryApplyFilter2583_6_ra2o;
      TryApplyFilter2583_4_ra3o = TryApplyFilter2583_6_ra3o;
      TryApplyFilter2583_4_ra4o = TryApplyFilter2583_6_ra4o;
      goto TryApplyFilter2583_4;
    } else {
      TryApplyFilter2583_5_ra5o = TryApplyFilter2583_6_ra6o;
      TryApplyFilter2583_5_ra0o = TryApplyFilter2583_6_ra1o;
      TryApplyFilter2583_5_ra1o = TryApplyFilter2583_6_ra2o;
      TryApplyFilter2583_5_ra2o = TryApplyFilter2583_6_ra3o;
      TryApplyFilter2583_5_ra3o = TryApplyFilter2583_6_ra4o;
      TryApplyFilter2583_5_ra4o = TryApplyFilter2583_6_ra5o;
      goto TryApplyFilter2583_5;
    }
  }
  // NormalBlock
  TryApplyFilter2583_7: {
    TryApplyFilter2583_6_ra6o = TryApplyFilter2583_7_ra5o;
    TryApplyFilter2583_6_ra0u = DDL::Bool(true);
    TryApplyFilter2583_6_ra1o = TryApplyFilter2583_7_ra0o;
    TryApplyFilter2583_6_ra2o = TryApplyFilter2583_7_ra1o;
    TryApplyFilter2583_6_ra3o = TryApplyFilter2583_7_ra2o;
    TryApplyFilter2583_6_ra4o = TryApplyFilter2583_7_ra3o;
    TryApplyFilter2583_6_ra5o = TryApplyFilter2583_7_ra4o;
    goto TryApplyFilter2583_6;
  }
  // NormalBlock
  TryApplyFilter2583_8: {
    DDL::Integer r0 = TryApplyFilter2583_8_ra0o.get_predictor();
    DDL::Integer r1 = DDL::Integer("12");
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    TryApplyFilter2583_6_ra6o = TryApplyFilter2583_8_ra5o;
    TryApplyFilter2583_6_ra0u = r2;
    TryApplyFilter2583_6_ra1o = TryApplyFilter2583_8_ra1o;
    TryApplyFilter2583_6_ra2o = TryApplyFilter2583_8_ra2o;
    TryApplyFilter2583_6_ra3o = TryApplyFilter2583_8_ra3o;
    TryApplyFilter2583_6_ra4o = TryApplyFilter2583_8_ra4o;
    TryApplyFilter2583_6_ra5o = TryApplyFilter2583_8_ra0o;
    goto TryApplyFilter2583_6;
  }
  // ReturnBlock (RetNo NoCapture)
  TryApplyFilter2583_9: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  TryApplyFilter2583_10: {
    DDL::Integer r0 = TryApplyFilter2583_10_ra0o.get_predictor();
    DDL::Integer r1 = DDL::Integer("1");
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    TryApplyFilter2583_10_ra0o.copy();
    TryApplyFilter2583_10_ra2o.copy();
    TryApplyFilter2583_10_ra2o.copy();
    TryApplyFilter2583_10_ra0o.copy();
    if (r2.getValue()) {
      TryApplyFilter2583_10_ra0o.free();
      TryApplyFilter2583_10_ra2o.free();
      TryApplyFilter2583_7_ra5o = TryApplyFilter2583_10_ra1o;
      TryApplyFilter2583_7_ra0o = TryApplyFilter2583_10_ra2o;
      TryApplyFilter2583_7_ra1o = TryApplyFilter2583_10_ra3o;
      TryApplyFilter2583_7_ra2o = TryApplyFilter2583_10_ra0o;
      TryApplyFilter2583_7_ra3o = TryApplyFilter2583_10_ra2o;
      TryApplyFilter2583_7_ra4o = TryApplyFilter2583_10_ra0o;
      goto TryApplyFilter2583_7;
    } else {
      TryApplyFilter2583_10_ra2o.free();
      TryApplyFilter2583_10_ra0o.free();
      TryApplyFilter2583_8_ra5o = TryApplyFilter2583_10_ra1o;
      TryApplyFilter2583_8_ra0o = TryApplyFilter2583_10_ra0o;
      TryApplyFilter2583_8_ra1o = TryApplyFilter2583_10_ra2o;
      TryApplyFilter2583_8_ra2o = TryApplyFilter2583_10_ra3o;
      TryApplyFilter2583_8_ra3o = TryApplyFilter2583_10_ra0o;
      TryApplyFilter2583_8_ra4o = TryApplyFilter2583_10_ra2o;
      goto TryApplyFilter2583_8;
    }
  }
  // NormalBlock
  TryApplyFilter2583_11: {
    DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                        User::Value>> r0 = TryApplyFilter2583_11_ra0o.get_param();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:150:20--150:44:FlateDecodeParams",
                false);
    if (parser_FlateDecodeParams(p, &TryApplyFilter2583_10_ra0o,
                                 &TryApplyFilter2583_10_ra1o, TryApplyFilter2583_11_ra2o, r0)) {
      TryApplyFilter2583_10_ra2o = TryApplyFilter2583_11_ra1o;
      TryApplyFilter2583_10_ra3o = TryApplyFilter2583_11_ra0o;
      goto TryApplyFilter2583_10;
    } else {
      TryApplyFilter2583_11_ra1o.free();
      TryApplyFilter2583_11_ra0o.free();
      goto TryApplyFilter2583_9;
    }
  }
  // NormalBlock
  TryApplyFilter2583_12: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:163:7--171:36:ApplyFilter_2576",
                true);
    return parser_ApplyFilter_2576(p, _result, _result_input,
                                   TryApplyFilter2583_12_ra5o, TryApplyFilter2583_12_ra4o,
                                   TryApplyFilter2583_12_ra3o, TryApplyFilter2583_12_ra2o,
                                   TryApplyFilter2583_12_ra0u, TryApplyFilter2583_12_ra1o);
  }
  // NormalBlock
  TryApplyFilter2583_13: {
    DDL::Integer r0 = TryApplyFilter2583_13_ra0o.get_bpc();
    TryApplyFilter2583_13_ra0o.free();
    DDL::Integer r1 = DDL::Integer("8");
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    TryApplyFilter2583_12_ra5o = TryApplyFilter2583_13_ra5o;
    TryApplyFilter2583_12_ra0u = r2;
    TryApplyFilter2583_12_ra1o = TryApplyFilter2583_13_ra1o;
    TryApplyFilter2583_12_ra2o = TryApplyFilter2583_13_ra2o;
    TryApplyFilter2583_12_ra3o = TryApplyFilter2583_13_ra3o;
    TryApplyFilter2583_12_ra4o = TryApplyFilter2583_13_ra4o;
    goto TryApplyFilter2583_12;
  }
  // NormalBlock
  TryApplyFilter2583_14: {
    TryApplyFilter2583_12_ra5o = TryApplyFilter2583_14_ra4o;
    TryApplyFilter2583_12_ra0u = DDL::Bool(false);
    TryApplyFilter2583_12_ra1o = TryApplyFilter2583_14_ra0o;
    TryApplyFilter2583_12_ra2o = TryApplyFilter2583_14_ra1o;
    TryApplyFilter2583_12_ra3o = TryApplyFilter2583_14_ra2o;
    TryApplyFilter2583_12_ra4o = TryApplyFilter2583_14_ra3o;
    goto TryApplyFilter2583_12;
  }
  // NormalBlock
  TryApplyFilter2583_15: {
    if (TryApplyFilter2583_15_ra0u.getValue()) {
      TryApplyFilter2583_13_ra5o = TryApplyFilter2583_15_ra5o;
      TryApplyFilter2583_13_ra0o = TryApplyFilter2583_15_ra6o;
      TryApplyFilter2583_13_ra1o = TryApplyFilter2583_15_ra1o;
      TryApplyFilter2583_13_ra2o = TryApplyFilter2583_15_ra2o;
      TryApplyFilter2583_13_ra3o = TryApplyFilter2583_15_ra3o;
      TryApplyFilter2583_13_ra4o = TryApplyFilter2583_15_ra4o;
      goto TryApplyFilter2583_13;
    } else {
      TryApplyFilter2583_15_ra6o.free();
      TryApplyFilter2583_14_ra4o = TryApplyFilter2583_15_ra5o;
      TryApplyFilter2583_14_ra0o = TryApplyFilter2583_15_ra1o;
      TryApplyFilter2583_14_ra1o = TryApplyFilter2583_15_ra2o;
      TryApplyFilter2583_14_ra2o = TryApplyFilter2583_15_ra3o;
      TryApplyFilter2583_14_ra3o = TryApplyFilter2583_15_ra4o;
      goto TryApplyFilter2583_14;
    }
  }
  // NormalBlock
  TryApplyFilter2583_16: {
    DDL::Integer r0 = TryApplyFilter2583_16_ra0o.get_colors();
    DDL::Integer r1 = DDL::Integer("1");
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    TryApplyFilter2583_15_ra5o = TryApplyFilter2583_16_ra5o;
    TryApplyFilter2583_15_ra0u = r2;
    TryApplyFilter2583_15_ra1o = TryApplyFilter2583_16_ra1o;
    TryApplyFilter2583_15_ra2o = TryApplyFilter2583_16_ra2o;
    TryApplyFilter2583_15_ra3o = TryApplyFilter2583_16_ra3o;
    TryApplyFilter2583_15_ra4o = TryApplyFilter2583_16_ra4o;
    TryApplyFilter2583_15_ra6o = TryApplyFilter2583_16_ra0o;
    goto TryApplyFilter2583_15;
  }
  // NormalBlock
  TryApplyFilter2583_17: {
    TryApplyFilter2583_15_ra5o = TryApplyFilter2583_17_ra5o;
    TryApplyFilter2583_15_ra0u = DDL::Bool(false);
    TryApplyFilter2583_15_ra1o = TryApplyFilter2583_17_ra0o;
    TryApplyFilter2583_15_ra2o = TryApplyFilter2583_17_ra1o;
    TryApplyFilter2583_15_ra3o = TryApplyFilter2583_17_ra2o;
    TryApplyFilter2583_15_ra4o = TryApplyFilter2583_17_ra3o;
    TryApplyFilter2583_15_ra6o = TryApplyFilter2583_17_ra4o;
    goto TryApplyFilter2583_15;
  }
  // NormalBlock
  TryApplyFilter2583_18: {
    if (TryApplyFilter2583_18_ra0u.getValue()) {
      TryApplyFilter2583_16_ra5o = TryApplyFilter2583_18_ra6o;
      TryApplyFilter2583_16_ra0o = TryApplyFilter2583_18_ra5o;
      TryApplyFilter2583_16_ra1o = TryApplyFilter2583_18_ra1o;
      TryApplyFilter2583_16_ra2o = TryApplyFilter2583_18_ra2o;
      TryApplyFilter2583_16_ra3o = TryApplyFilter2583_18_ra3o;
      TryApplyFilter2583_16_ra4o = TryApplyFilter2583_18_ra4o;
      goto TryApplyFilter2583_16;
    } else {
      TryApplyFilter2583_17_ra5o = TryApplyFilter2583_18_ra6o;
      TryApplyFilter2583_17_ra0o = TryApplyFilter2583_18_ra1o;
      TryApplyFilter2583_17_ra1o = TryApplyFilter2583_18_ra2o;
      TryApplyFilter2583_17_ra2o = TryApplyFilter2583_18_ra3o;
      TryApplyFilter2583_17_ra3o = TryApplyFilter2583_18_ra4o;
      TryApplyFilter2583_17_ra4o = TryApplyFilter2583_18_ra5o;
      goto TryApplyFilter2583_17;
    }
  }
  // NormalBlock
  TryApplyFilter2583_19: {
    TryApplyFilter2583_18_ra6o = TryApplyFilter2583_19_ra5o;
    TryApplyFilter2583_18_ra0u = DDL::Bool(true);
    TryApplyFilter2583_18_ra1o = TryApplyFilter2583_19_ra0o;
    TryApplyFilter2583_18_ra2o = TryApplyFilter2583_19_ra1o;
    TryApplyFilter2583_18_ra3o = TryApplyFilter2583_19_ra2o;
    TryApplyFilter2583_18_ra4o = TryApplyFilter2583_19_ra3o;
    TryApplyFilter2583_18_ra5o = TryApplyFilter2583_19_ra4o;
    goto TryApplyFilter2583_18;
  }
  // NormalBlock
  TryApplyFilter2583_20: {
    DDL::Integer r0 = TryApplyFilter2583_20_ra0o.get_predictor();
    DDL::Integer r1 = DDL::Integer("12");
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    TryApplyFilter2583_18_ra6o = TryApplyFilter2583_20_ra5o;
    TryApplyFilter2583_18_ra0u = r2;
    TryApplyFilter2583_18_ra1o = TryApplyFilter2583_20_ra1o;
    TryApplyFilter2583_18_ra2o = TryApplyFilter2583_20_ra2o;
    TryApplyFilter2583_18_ra3o = TryApplyFilter2583_20_ra3o;
    TryApplyFilter2583_18_ra4o = TryApplyFilter2583_20_ra4o;
    TryApplyFilter2583_18_ra5o = TryApplyFilter2583_20_ra0o;
    goto TryApplyFilter2583_18;
  }
  // ReturnBlock (RetNo NoCapture)
  TryApplyFilter2583_21: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  TryApplyFilter2583_22: {
    DDL::Integer r0 = TryApplyFilter2583_22_ra0o.get_predictor();
    DDL::Integer r1 = DDL::Integer("1");
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    TryApplyFilter2583_22_ra0o.copy();
    TryApplyFilter2583_22_ra2o.copy();
    TryApplyFilter2583_22_ra2o.copy();
    TryApplyFilter2583_22_ra0o.copy();
    if (r2.getValue()) {
      TryApplyFilter2583_22_ra0o.free();
      TryApplyFilter2583_22_ra2o.free();
      TryApplyFilter2583_19_ra5o = TryApplyFilter2583_22_ra1o;
      TryApplyFilter2583_19_ra0o = TryApplyFilter2583_22_ra2o;
      TryApplyFilter2583_19_ra1o = TryApplyFilter2583_22_ra3o;
      TryApplyFilter2583_19_ra2o = TryApplyFilter2583_22_ra0o;
      TryApplyFilter2583_19_ra3o = TryApplyFilter2583_22_ra2o;
      TryApplyFilter2583_19_ra4o = TryApplyFilter2583_22_ra0o;
      goto TryApplyFilter2583_19;
    } else {
      TryApplyFilter2583_22_ra2o.free();
      TryApplyFilter2583_22_ra0o.free();
      TryApplyFilter2583_20_ra5o = TryApplyFilter2583_22_ra1o;
      TryApplyFilter2583_20_ra0o = TryApplyFilter2583_22_ra0o;
      TryApplyFilter2583_20_ra1o = TryApplyFilter2583_22_ra2o;
      TryApplyFilter2583_20_ra2o = TryApplyFilter2583_22_ra3o;
      TryApplyFilter2583_20_ra3o = TryApplyFilter2583_22_ra0o;
      TryApplyFilter2583_20_ra4o = TryApplyFilter2583_22_ra2o;
      goto TryApplyFilter2583_20;
    }
  }
  // NormalBlock
  TryApplyFilter2583_23: {
    DDL::Maybe<DDL::Map<DDL::Array<DDL::UInt<8>>,
                        User::Value>> r0 = TryApplyFilter2583_23_ra0o.get_param();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:162:20--162:42:LZWDecodeParams",
                false);
    if (parser_LZWDecodeParams(p, &TryApplyFilter2583_22_ra0o,
                               &TryApplyFilter2583_22_ra1o, TryApplyFilter2583_23_ra2o, r0)) {
      TryApplyFilter2583_22_ra2o = TryApplyFilter2583_23_ra1o;
      TryApplyFilter2583_22_ra3o = TryApplyFilter2583_23_ra0o;
      goto TryApplyFilter2583_22;
    } else {
      TryApplyFilter2583_23_ra1o.free();
      TryApplyFilter2583_23_ra0o.free();
      goto TryApplyFilter2583_21;
    }
  }
  // NormalBlock
  TryApplyFilter2583_24: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:174:10--174:53:ApplyFilter_2578",
                true);
    TryApplyFilter2583_24_ra0o.copy();
    return parser_ApplyFilter_2578(p, _result, _result_input,
                                   TryApplyFilter2583_24_ra2o, TryApplyFilter2583_24_ra0o,
                                   TryApplyFilter2583_24_ra1o, DDL::Bool(true),
                                   TryApplyFilter2583_24_ra0o);
  }
  // NormalBlock
  TryApplyFilter2583_25: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:177:10--177:52:ApplyFilter_2580",
                true);
    TryApplyFilter2583_25_ra0o.copy();
    return parser_ApplyFilter_2580(p, _result, _result_input,
                                   TryApplyFilter2583_25_ra2o, TryApplyFilter2583_25_ra0o,
                                   TryApplyFilter2583_25_ra1o, DDL::Bool(true),
                                   TryApplyFilter2583_25_ra0o);
  }
  // NormalBlock
  TryApplyFilter2583_26: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:181:7--188:6:ApplyFilter_2581",
                true);
    TryApplyFilter2583_26_ra0o.copy();
    return parser_ApplyFilter_2581(p, _result, _result_input,
                                   TryApplyFilter2583_26_ra2o, TryApplyFilter2583_26_ra0o,
                                   TryApplyFilter2583_26_ra1o, DDL::Bool(true),
                                   TryApplyFilter2583_26_ra0o);
  }
  // NormalBlock
  TryApplyFilter2583_27: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:188:8--188:58:ApplyFilter_2582",
                true);
    return parser_ApplyFilter_2582(p, _result, _result_input,
                                   TryApplyFilter2583_27_ra2o, TryApplyFilter2583_27_ra0o,
                                   DDL::Bool(false), TryApplyFilter2583_27_ra1o);
  }
  // NormalBlock
  TryApplyFilter2583_28: {
    DDL::Array<DDL::UInt<8>> r0 = TryApplyFilter2583_28_ra0o.get_name();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(68UL),
                                                           DDL::UInt<8>(67UL), DDL::UInt<8>(84UL),
                                                           DDL::UInt<8>(68UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL)};
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    if (r2.getValue()) {
      TryApplyFilter2583_26_ra2o = TryApplyFilter2583_28_ra2o;
      TryApplyFilter2583_26_ra0o = TryApplyFilter2583_28_ra1o;
      TryApplyFilter2583_26_ra1o = TryApplyFilter2583_28_ra0o;
      goto TryApplyFilter2583_26;
    } else {
      TryApplyFilter2583_27_ra2o = TryApplyFilter2583_28_ra2o;
      TryApplyFilter2583_27_ra0o = TryApplyFilter2583_28_ra0o;
      TryApplyFilter2583_27_ra1o = TryApplyFilter2583_28_ra1o;
      goto TryApplyFilter2583_27;
    }
  }
  // NormalBlock
  TryApplyFilter2583_29: {
    DDL::Array<DDL::UInt<8>> r0 = TryApplyFilter2583_29_ra0o.get_name();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(65UL),
                                                           DDL::UInt<8>(83UL), DDL::UInt<8>(67UL),
                                                           DDL::UInt<8>(73UL), DDL::UInt<8>(73UL),
                                                           DDL::UInt<8>(56UL), DDL::UInt<8>(53UL),
                                                           DDL::UInt<8>(68UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL)};
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    if (r2.getValue()) {
      TryApplyFilter2583_25_ra2o = TryApplyFilter2583_29_ra2o;
      TryApplyFilter2583_25_ra0o = TryApplyFilter2583_29_ra1o;
      TryApplyFilter2583_25_ra1o = TryApplyFilter2583_29_ra0o;
      goto TryApplyFilter2583_25;
    } else {
      TryApplyFilter2583_28_ra2o = TryApplyFilter2583_29_ra2o;
      TryApplyFilter2583_28_ra0o = TryApplyFilter2583_29_ra0o;
      TryApplyFilter2583_28_ra1o = TryApplyFilter2583_29_ra1o;
      goto TryApplyFilter2583_28;
    }
  }
  // NormalBlock
  TryApplyFilter2583_30: {
    DDL::Array<DDL::UInt<8>> r0 = TryApplyFilter2583_30_ra0o.get_name();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(65UL),
                                                           DDL::UInt<8>(83UL), DDL::UInt<8>(67UL),
                                                           DDL::UInt<8>(73UL), DDL::UInt<8>(73UL),
                                                           DDL::UInt<8>(72UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(68UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL)};
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    if (r2.getValue()) {
      TryApplyFilter2583_24_ra2o = TryApplyFilter2583_30_ra2o;
      TryApplyFilter2583_24_ra0o = TryApplyFilter2583_30_ra1o;
      TryApplyFilter2583_24_ra1o = TryApplyFilter2583_30_ra0o;
      goto TryApplyFilter2583_24;
    } else {
      TryApplyFilter2583_29_ra2o = TryApplyFilter2583_30_ra2o;
      TryApplyFilter2583_29_ra0o = TryApplyFilter2583_30_ra0o;
      TryApplyFilter2583_29_ra1o = TryApplyFilter2583_30_ra1o;
      goto TryApplyFilter2583_29;
    }
  }
  // NormalBlock
  TryApplyFilter2583_31: {
    DDL::Array<DDL::UInt<8>> r0 = TryApplyFilter2583_31_ra0o.get_name();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(76UL),
                                                           DDL::UInt<8>(90UL), DDL::UInt<8>(87UL),
                                                           DDL::UInt<8>(68UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL)};
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    if (r2.getValue()) {
      TryApplyFilter2583_23_ra2o = TryApplyFilter2583_31_ra2o;
      TryApplyFilter2583_23_ra0o = TryApplyFilter2583_31_ra0o;
      TryApplyFilter2583_23_ra1o = TryApplyFilter2583_31_ra1o;
      goto TryApplyFilter2583_23;
    } else {
      TryApplyFilter2583_30_ra2o = TryApplyFilter2583_31_ra2o;
      TryApplyFilter2583_30_ra0o = TryApplyFilter2583_31_ra0o;
      TryApplyFilter2583_30_ra1o = TryApplyFilter2583_31_ra1o;
      goto TryApplyFilter2583_30;
    }
  }
  // NormalBlock
  TryApplyFilter2583_32: {
    DDL::Array<DDL::UInt<8>> r0 = TryApplyFilter2583_32_ra1o.get_name();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(70UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(68UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL)};
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    if (r2.getValue()) {
      TryApplyFilter2583_11_ra2o = TryApplyFilter2583_32_ra0o;
      TryApplyFilter2583_11_ra0o = TryApplyFilter2583_32_ra1o;
      TryApplyFilter2583_11_ra1o = TryApplyFilter2583_32_ra2o;
      goto TryApplyFilter2583_11;
    } else {
      TryApplyFilter2583_31_ra2o = TryApplyFilter2583_32_ra0o;
      TryApplyFilter2583_31_ra0o = TryApplyFilter2583_32_ra1o;
      TryApplyFilter2583_31_ra1o = TryApplyFilter2583_32_ra2o;
      goto TryApplyFilter2583_31;
    }
  }
}
bool parser_Default_2584(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Array<User::Value>* _result, DDL::Input* _result_input,
                         DDL::Input a1, User::Value a2, DDL::Array<User::Value> a3) {
  
// Parameters for L_1_Default2584
  DDL::Input Default2584_1_ra1o;
  User::Value Default2584_1_ra0o;
  
// Parameters for L_2_Default2584
  DDL::Input Default2584_2_ra0o;
  DDL::Input Default2584_2_ra1o;
  DDL::Array<User::Value> Default2584_2_ra2o;
  
// Parameters for L_3_Default2584
  DDL::Input Default2584_3_ra0o;
  User::Value Default2584_3_ra1o;
  DDL::Array<User::Value> Default2584_3_ra2o;
  Default2584_3_ra0o = a1;
  Default2584_3_ra1o = a2;
  Default2584_3_ra2o = a3;
  goto Default2584_3;
  // NormalBlock
  Default2584_1: {
    DDL::Array<User::Value> r0 = Default2584_1_ra0o.get_array();
    Default2584_1_ra0o.free();
    p.popDebug();
    *_result = r0;
    *_result_input = Default2584_1_ra1o;
    return true;
  }
  // NormalBlock
  Default2584_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:73:21--73:21",
               Default2584_2_ra0o, r0);
    Default2584_2_ra0o.free();
    r0.free();
    p.popDebug();
    *_result = Default2584_2_ra2o;
    *_result_input = Default2584_2_ra1o;
    return true;
  }
  // NormalBlock
  Default2584_3: {
    Default2584_3_ra0o.copy();
    switch (Default2584_3_ra1o.getTag()) {
      case DDL::Tag::Value::array:
        Default2584_3_ra2o.free();
        Default2584_3_ra0o.free();
        Default2584_1_ra1o = Default2584_3_ra0o;
        Default2584_1_ra0o = Default2584_3_ra1o;
        goto Default2584_1;
      default:
        Default2584_3_ra1o.free();
        Default2584_2_ra0o = Default2584_3_ra0o;
        Default2584_2_ra1o = Default2584_3_ra0o;
        Default2584_2_ra2o = Default2584_3_ra2o;
        goto Default2584_2;
    }
  }
}
bool parser_OneOrArray(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Array<User::Value>* _result, DDL::Input* _result_input,
                       DDL::Input a1, User::Value a2) {
  
// Parameters for L_0_OneOrArray2585
  DDL::Input OneOrArray2585_0_ra0o;
  User::Value OneOrArray2585_0_ra1o;
  OneOrArray2585_0_ra0o = a1;
  OneOrArray2585_0_ra1o = a2;
  goto OneOrArray2585_0;
  // NormalBlock
  OneOrArray2585_0: {
    OneOrArray2585_0_ra1o.copy();
    DDL::Array<User::Value> r0 = DDL::Array<User::Value>{OneOrArray2585_0_ra1o};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:297:30--297:52:Default_2584",
                true);
    return parser_Default_2584(p, _result, _result_input,
                               OneOrArray2585_0_ra0o, OneOrArray2585_0_ra1o, r0);
  }
}
bool parser_Default_2586(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Array<User::Value>* _result, DDL::Input* _result_input,
                         DDL::Input a1, DDL::Array<DDL::UInt<8>> a2,
                         DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a3,
                         DDL::Array<User::Value> a4) {
  
// Parameters for L_0_Default2586
  DDL::Input Default2586_0_ra0o;
  DDL::Array<User::Value> Default2586_0_ra1o;
  
// Parameters for L_1_Default2586
  DDL::Input Default2586_1_ra0o;
  DDL::Array<User::Value> Default2586_1_ra1o;
  
// Parameters for L_2_Default2586
  DDL::Array<User::Value> Default2586_2_ra0o;
  DDL::Input Default2586_2_ra1o;
  
// Parameters for L_3_Default2586
  DDL::Input Default2586_3_ra0o;
  DDL::Array<User::Value> Default2586_3_ra1o;
  
// Parameters for L_4_Default2586
  User::Value Default2586_4_ra0o;
  DDL::Input Default2586_4_ra1o;
  DDL::Input Default2586_4_ra2o;
  DDL::Array<User::Value> Default2586_4_ra3o;
  
// Parameters for L_5_Default2586
  DDL::Input Default2586_5_ra0o;
  DDL::Array<DDL::UInt<8>> Default2586_5_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Default2586_5_ra2o;
  DDL::Array<User::Value> Default2586_5_ra3o;
  Default2586_5_ra0o = a1;
  Default2586_5_ra1o = a2;
  Default2586_5_ra2o = a3;
  Default2586_5_ra3o = a4;
  goto Default2586_5;
  // NormalBlock
  Default2586_0: {
    p.popDebug();
    *_result = Default2586_0_ra1o;
    *_result_input = Default2586_0_ra0o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Default2586_1: {
    Default2586_0_ra0o = Default2586_1_ra0o;
    Default2586_0_ra1o = Default2586_1_ra1o;
    goto Default2586_0;
  }
  // ReturnBlock (RetYes NoCapture)
  Default2586_2: {
    p.popDebug();
    *_result = Default2586_2_ra0o;
    *_result_input = Default2586_2_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Default2586_3: {
    Default2586_0_ra0o = Default2586_3_ra0o;
    Default2586_0_ra1o = Default2586_3_ra1o;
    goto Default2586_0;
  }
  // ReturnBlock (RetYes NoCapture)
  Default2586_4: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:295:15--295:50:OneOrArray",
                false);
    if (parser_OneOrArray(p, &Default2586_2_ra0o, &Default2586_2_ra1o,
                          Default2586_4_ra1o, Default2586_4_ra0o)) {
      Default2586_4_ra2o.free();
      Default2586_4_ra3o.free();
      goto Default2586_2;
    } else {
      Default2586_1_ra0o = Default2586_4_ra2o;
      Default2586_1_ra1o = Default2586_4_ra3o;
      goto Default2586_1;
    }
  }
  // NormalBlock
  Default2586_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:295:27--295:50:LookupResolve",
                false);
    Default2586_5_ra0o.copy();
    Default2586_5_ra0o.copy();
    Default2586_5_ra3o.copy();
    if (parser_LookupResolve(p, &Default2586_4_ra0o,
                             &Default2586_4_ra1o, Default2586_5_ra0o, Default2586_5_ra1o,
                             Default2586_5_ra2o)) {
      Default2586_5_ra0o.free();
      Default2586_5_ra3o.free();
      Default2586_4_ra2o = Default2586_5_ra0o;
      Default2586_4_ra3o = Default2586_5_ra3o;
      goto Default2586_4;
    } else {
      Default2586_5_ra0o.free();
      Default2586_5_ra3o.free();
      Default2586_3_ra0o = Default2586_5_ra0o;
      Default2586_3_ra1o = Default2586_5_ra3o;
      goto Default2586_3;
    }
  }
}
bool parser_LookupOptArray(DDL::ParserStateUser<ReferenceTable> &p,
                           DDL::Array<User::Value>* _result, DDL::Input* _result_input,
                           DDL::Input a1, DDL::Array<DDL::UInt<8>> a2,
                           DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a3) {
  
// Parameters for L_0_LookupOptArray2587
  DDL::Input LookupOptArray2587_0_ra0o;
  DDL::Array<DDL::UInt<8>> LookupOptArray2587_0_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LookupOptArray2587_0_ra2o;
  LookupOptArray2587_0_ra0o = a1;
  LookupOptArray2587_0_ra1o = a2;
  LookupOptArray2587_0_ra2o = a3;
  goto LookupOptArray2587_0;
  // NormalBlock
  LookupOptArray2587_0: {
    DDL::Array<User::Value> r0 = DDL::Array<User::Value>{};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:295:3--295:50:Default_2586",
                true);
    return parser_Default_2586(p, _result, _result_input,
                               LookupOptArray2587_0_ra0o, LookupOptArray2587_0_ra1o,
                               LookupOptArray2587_0_ra2o, r0);
  }
}
bool parser_Default_2588(DDL::ParserStateUser<ReferenceTable> &p,
                         User::Value* _result, DDL::Input* _result_input, DDL::Input a1,
                         DDL::Array<User::Value> a2, DDL::UInt<64> a3, User::Value a4) {
  
// Parameters for L_1_Default2588
  DDL::Input Default2588_1_ra0o;
  DDL::Input Default2588_1_ra1o;
  User::Value Default2588_1_ra2o;
  
// Parameters for L_2_Default2588
  DDL::Input Default2588_2_ra2o;
  DDL::Array<User::Value> Default2588_2_ra0o;
  DDL::UInt<64> Default2588_2_ra1u;
  
// Parameters for L_3_Default2588
  DDL::Input Default2588_3_ra0o;
  DDL::Array<User::Value> Default2588_3_ra1o;
  DDL::UInt<64> Default2588_3_ra2u;
  User::Value Default2588_3_ra3o;
  Default2588_3_ra0o = a1;
  Default2588_3_ra1o = a2;
  Default2588_3_ra2u = a3;
  Default2588_3_ra3o = a4;
  goto Default2588_3;
  // NormalBlock
  Default2588_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(120UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:73:21--73:21",
               Default2588_1_ra0o, r0);
    Default2588_1_ra0o.free();
    r0.free();
    p.popDebug();
    *_result = Default2588_1_ra2o;
    *_result_input = Default2588_1_ra1o;
    return true;
  }
  // NormalBlock
  Default2588_2: {
    User::Value r0 = Default2588_2_ra0o[DDL::Size::from(Default2588_2_ra1u.rep())];
    Default2588_2_ra0o.free();
    p.popDebug();
    *_result = r0;
    *_result_input = Default2588_2_ra2o;
    return true;
  }
  // NormalBlock
  Default2588_3: {
    DDL::UInt<64> r0 = DDL::UInt<64>{Default2588_3_ra1o.size().rep()};
    DDL::Bool r1 = DDL::Bool{r0 <= Default2588_3_ra2u};
    Default2588_3_ra0o.copy();
    if (r1.getValue()) {
      Default2588_3_ra1o.free();
      Default2588_1_ra0o = Default2588_3_ra0o;
      Default2588_1_ra1o = Default2588_3_ra0o;
      Default2588_1_ra2o = Default2588_3_ra3o;
      goto Default2588_1;
    } else {
      Default2588_3_ra3o.free();
      Default2588_3_ra0o.free();
      Default2588_2_ra2o = Default2588_3_ra0o;
      Default2588_2_ra0o = Default2588_3_ra1o;
      Default2588_2_ra1u = Default2588_3_ra2u;
      goto Default2588_2;
    }
  }
}
bool parser_for_3063(DDL::ParserStateUser<ReferenceTable> &p,
                     User::ApplyFilter* _result, DDL::Input* _result_input,
                     DDL::Input a1, User::ApplyFilter a2,
                     DDL::Array<User::Value>::Iterator a3, DDL::Array<User::Value> a4) {
  
// Parameters for L_0_for3063
  DDL::Input for3063_0_ra1o;
  User::ApplyFilter for3063_0_ra0o;
  
// Parameters for L_1_for3063
  User::ApplyFilter for3063_1_ra0o;
  DDL::Input for3063_1_ra3o;
  DDL::Array<User::Value>::Iterator for3063_1_ra1o;
  DDL::Array<User::Value> for3063_1_ra2o;
  
// Parameters for L_3_for3063
  User::ApplyFilter for3063_3_ra0o;
  DDL::Input for3063_3_ra1o;
  DDL::Array<User::Value>::Iterator for3063_3_ra2o;
  DDL::Array<User::Value> for3063_3_ra3o;
  
// Parameters for L_4_for3063
  DDL::Input for3063_4_ra4o;
  User::ApplyFilter for3063_4_ra0o;
  User::Filter for3063_4_ra1o;
  DDL::Array<User::Value>::Iterator for3063_4_ra2o;
  DDL::Array<User::Value> for3063_4_ra3o;
  
// Parameters for L_5_for3063
  DDL::Input for3063_5_ra3o;
  User::ApplyFilter for3063_5_ra0o;
  DDL::Array<User::Value>::Iterator for3063_5_ra1o;
  DDL::Array<User::Value> for3063_5_ra2o;
  
// Parameters for L_7_for3063
  User::Filter for3063_7_ra0o;
  DDL::Input for3063_7_ra1o;
  User::ApplyFilter for3063_7_ra2o;
  DDL::Array<User::Value>::Iterator for3063_7_ra3o;
  DDL::Array<User::Value> for3063_7_ra4o;
  
// Parameters for L_9_for3063
  User::Value for3063_9_ra0o;
  DDL::Input for3063_9_ra1o;
  User::Value for3063_9_ra2o;
  User::ApplyFilter for3063_9_ra3o;
  DDL::Array<User::Value>::Iterator for3063_9_ra4o;
  DDL::Array<User::Value> for3063_9_ra5o;
  
// Parameters for L_10_for3063
  User::Value for3063_10_ra0o;
  DDL::Input for3063_10_ra7o;
  DDL::UInt<64> for3063_10_ra1u;
  DDL::Array<User::Value> for3063_10_ra2o;
  User::Value for3063_10_ra3o;
  User::ApplyFilter for3063_10_ra4o;
  DDL::Array<User::Value>::Iterator for3063_10_ra5o;
  DDL::Array<User::Value> for3063_10_ra6o;
  
// Parameters for L_11_for3063
  DDL::Input for3063_11_ra3o;
  DDL::Array<User::Value>::Iterator for3063_11_ra0o;
  DDL::Array<User::Value> for3063_11_ra1o;
  User::ApplyFilter for3063_11_ra2o;
  
// Parameters for L_12_for3063
  DDL::Input for3063_12_ra0o;
  User::ApplyFilter for3063_12_ra1o;
  DDL::Array<User::Value>::Iterator for3063_12_ra2o;
  DDL::Array<User::Value> for3063_12_ra3o;
  for3063_12_ra0o = a1;
  for3063_12_ra1o = a2;
  for3063_12_ra2o = a3;
  for3063_12_ra3o = a4;
  goto for3063_12;
  // NormalBlock
  for3063_0: {
    p.popDebug();
    *_result = for3063_0_ra0o;
    *_result_input = for3063_0_ra1o;
    return true;
  }
  // NormalBlock
  for3063_1: {
    DDL::Array<User::Value>::Iterator r0 = for3063_1_ra1o.next();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:123:5--132:3:for_3063",
                true);
    for3063_12_ra0o = for3063_1_ra3o;
    for3063_12_ra1o = for3063_1_ra0o;
    for3063_12_ra2o = r0;
    for3063_12_ra3o = for3063_1_ra2o;
    goto for3063_12;
  }
  // ReturnBlock (RetNo NoCapture)
  for3063_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  for3063_3: {
    for3063_1_ra0o = for3063_3_ra0o;
    for3063_1_ra3o = for3063_3_ra1o;
    for3063_1_ra1o = for3063_3_ra2o;
    for3063_1_ra2o = for3063_3_ra3o;
    goto for3063_1;
  }
  // NormalBlock
  for3063_4: {
    DDL::Input r0 = for3063_4_ra0o.get_ok();
    for3063_4_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:128:20--128:43:TryApplyFilter",
                false);
    if (parser_TryApplyFilter(p, &for3063_3_ra0o, &for3063_3_ra1o,
                              for3063_4_ra4o, for3063_4_ra1o, r0)) {
      for3063_3_ra2o = for3063_4_ra2o;
      for3063_3_ra3o = for3063_4_ra3o;
      goto for3063_3;
    } else {
      for3063_4_ra2o.free();
      for3063_4_ra3o.free();
      goto for3063_2;
    }
  }
  // NormalBlock
  for3063_5: {
    for3063_1_ra0o = for3063_5_ra0o;
    for3063_1_ra3o = for3063_5_ra3o;
    for3063_1_ra1o = for3063_5_ra1o;
    for3063_1_ra2o = for3063_5_ra2o;
    goto for3063_1;
  }
  // ReturnBlock (RetNo NoCapture)
  for3063_6: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  for3063_7: {
    switch (for3063_7_ra2o.getTag()) {
      case DDL::Tag::ApplyFilter::ok:
        for3063_4_ra4o = for3063_7_ra1o;
        for3063_4_ra0o = for3063_7_ra2o;
        for3063_4_ra1o = for3063_7_ra0o;
        for3063_4_ra2o = for3063_7_ra3o;
        for3063_4_ra3o = for3063_7_ra4o;
        goto for3063_4;
      default:
        for3063_7_ra0o.free();
        for3063_5_ra3o = for3063_7_ra1o;
        for3063_5_ra0o = for3063_7_ra2o;
        for3063_5_ra1o = for3063_7_ra3o;
        for3063_5_ra2o = for3063_7_ra4o;
        goto for3063_5;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  for3063_8: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  for3063_9: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:126:22--126:38:Filter",
                false);
    if (parser_Filter(p, &for3063_7_ra0o, &for3063_7_ra1o,
                      for3063_9_ra1o, for3063_9_ra2o, for3063_9_ra0o)) {
      for3063_7_ra2o = for3063_9_ra3o;
      for3063_7_ra3o = for3063_9_ra4o;
      for3063_7_ra4o = for3063_9_ra5o;
      goto for3063_7;
    } else {
      for3063_9_ra3o.free();
      for3063_9_ra4o.free();
      for3063_9_ra5o.free();
      goto for3063_6;
    }
  }
  // ReturnBlock RetPure
  for3063_10: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:125:22--125:59:Default_2588",
                false);
    if (parser_Default_2588(p, &for3063_9_ra0o, &for3063_9_ra1o,
                            for3063_10_ra7o, for3063_10_ra2o, for3063_10_ra1u,
                            for3063_10_ra0o)) {
      for3063_9_ra2o = for3063_10_ra3o;
      for3063_9_ra3o = for3063_10_ra4o;
      for3063_9_ra4o = for3063_10_ra5o;
      for3063_9_ra5o = for3063_10_ra6o;
      goto for3063_9;
    } else {
      for3063_10_ra3o.free();
      for3063_10_ra4o.free();
      for3063_10_ra5o.free();
      for3063_10_ra6o.free();
      goto for3063_8;
    }
  }
  // NormalBlock
  for3063_11: {
    User::Value r0 = for3063_11_ra0o.value();
    DDL::UInt<64> r1 = for3063_11_ra0o.key();
    for3063_11_ra1o.copy();
    for3063_10_ra0o = parser_nullValue();
    for3063_10_ra7o = for3063_11_ra3o;
    for3063_10_ra1u = r1;
    for3063_10_ra2o = for3063_11_ra1o;
    for3063_10_ra3o = r0;
    for3063_10_ra4o = for3063_11_ra2o;
    for3063_10_ra5o = for3063_11_ra0o;
    for3063_10_ra6o = for3063_11_ra1o;
    goto for3063_10;
  }
  // NormalBlock
  for3063_12: {
    DDL::Bool r0 = for3063_12_ra2o.done();
    if (r0.getValue()) {
      for3063_12_ra2o.free();
      for3063_12_ra3o.free();
      for3063_0_ra1o = for3063_12_ra0o;
      for3063_0_ra0o = for3063_12_ra1o;
      goto for3063_0;
    } else {
      for3063_11_ra3o = for3063_12_ra0o;
      for3063_11_ra0o = for3063_12_ra2o;
      for3063_11_ra1o = for3063_12_ra3o;
      for3063_11_ra2o = for3063_12_ra1o;
      goto for3063_11;
    }
  }
}
bool parser_ApplyFilters(DDL::ParserStateUser<ReferenceTable> &p,
                         User::ApplyFilter* _result, DDL::Input* _result_input,
                         DDL::Input a1, DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2,
                         DDL::Input a3) {
  
// Parameters for L_1_ApplyFilters2589
  DDL::Array<User::Value> ApplyFilters2589_1_ra0o;
  DDL::Input ApplyFilters2589_1_ra1o;
  DDL::Input ApplyFilters2589_1_ra2o;
  DDL::Array<User::Value> ApplyFilters2589_1_ra3o;
  
// Parameters for L_3_ApplyFilters2589
  DDL::Array<User::Value> ApplyFilters2589_3_ra0o;
  DDL::Input ApplyFilters2589_3_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_3_ra2o;
  DDL::Input ApplyFilters2589_3_ra3o;
  
// Parameters for L_4_ApplyFilters2589
  DDL::Input ApplyFilters2589_4_ra0o;
  DDL::Input ApplyFilters2589_4_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_4_ra1o;
  
// Parameters for L_6_ApplyFilters2589
  DDL::Input ApplyFilters2589_6_ra0o;
  DDL::Input ApplyFilters2589_6_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_6_ra2o;
  
// Parameters for L_7_ApplyFilters2589
  DDL::Input ApplyFilters2589_7_ra0o;
  DDL::Input ApplyFilters2589_7_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_7_ra2o;
  
// Parameters for L_8_ApplyFilters2589
  DDL::Input ApplyFilters2589_8_ra0o;
  DDL::Input ApplyFilters2589_8_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_8_ra2o;
  
// Parameters for L_10_ApplyFilters2589
  DDL::Input ApplyFilters2589_10_ra0o;
  DDL::Input ApplyFilters2589_10_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_10_ra2o;
  
// Parameters for L_11_ApplyFilters2589
  DDL::Unit ApplyFilters2589_11_ra0u;
  DDL::Input ApplyFilters2589_11_ra1o;
  DDL::Input ApplyFilters2589_11_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_11_ra3o;
  
// Parameters for L_14_ApplyFilters2589
  DDL::Input ApplyFilters2589_14_ra4o;
  User::Value ApplyFilters2589_14_ra0o;
  DDL::Input ApplyFilters2589_14_ra1o;
  DDL::Input ApplyFilters2589_14_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_14_ra3o;
  
// Parameters for L_15_ApplyFilters2589
  DDL::Input ApplyFilters2589_15_ra0o;
  DDL::Input ApplyFilters2589_15_ra1o;
  DDL::Input ApplyFilters2589_15_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_15_ra3o;
  
// Parameters for L_18_ApplyFilters2589
  DDL::Input ApplyFilters2589_18_ra0o;
  DDL::Input ApplyFilters2589_18_ra1o;
  DDL::Input ApplyFilters2589_18_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_18_ra3o;
  
// Parameters for L_19_ApplyFilters2589
  DDL::Input ApplyFilters2589_19_ra4o;
  DDL::Maybe<User::Value> ApplyFilters2589_19_ra0o;
  DDL::Input ApplyFilters2589_19_ra1o;
  DDL::Input ApplyFilters2589_19_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_19_ra3o;
  
// Parameters for L_20_ApplyFilters2589
  DDL::Input ApplyFilters2589_20_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ApplyFilters2589_20_ra1o;
  DDL::Input ApplyFilters2589_20_ra2o;
  ApplyFilters2589_20_ra0o = a1;
  ApplyFilters2589_20_ra1o = a2;
  ApplyFilters2589_20_ra2o = a3;
  goto ApplyFilters2589_20;
  // ReturnBlock (RetNo NoCapture)
  ApplyFilters2589_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ApplyFilters2589_1: {
    User::ApplyFilter r0;
    r0.init_ok(ApplyFilters2589_1_ra2o);
    DDL::Array<User::Value>::Iterator r1 = DDL::Array<User::Value>::Iterator(ApplyFilters2589_1_ra3o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:123:5--132:3:for_3063",
                true);
    return parser_for_3063(p, _result, _result_input,
                           ApplyFilters2589_1_ra1o, r0, r1, ApplyFilters2589_1_ra0o);
  }
  // ReturnBlock (RetNo NoCapture)
  ApplyFilters2589_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ApplyFilters2589_3: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(68UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(115UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:122:25--122:59:LookupOptArray",
                false);
    if (parser_LookupOptArray(p, &ApplyFilters2589_1_ra0o,
                              &ApplyFilters2589_1_ra1o, ApplyFilters2589_3_ra1o, r0,
                              ApplyFilters2589_3_ra2o)) {
      ApplyFilters2589_1_ra2o = ApplyFilters2589_3_ra3o;
      ApplyFilters2589_1_ra3o = ApplyFilters2589_3_ra0o;
      goto ApplyFilters2589_1;
    } else {
      ApplyFilters2589_3_ra3o.free();
      ApplyFilters2589_3_ra0o.free();
      goto ApplyFilters2589_0;
    }
  }
  // NormalBlock
  ApplyFilters2589_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(70UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:121:25--121:54:LookupOptArray",
                false);
    ApplyFilters2589_4_ra1o.copy();
    if (parser_LookupOptArray(p, &ApplyFilters2589_3_ra0o,
                              &ApplyFilters2589_3_ra1o, ApplyFilters2589_4_ra2o, r0,
                              ApplyFilters2589_4_ra1o)) {
      ApplyFilters2589_3_ra2o = ApplyFilters2589_4_ra1o;
      ApplyFilters2589_3_ra3o = ApplyFilters2589_4_ra0o;
      goto ApplyFilters2589_3;
    } else {
      ApplyFilters2589_4_ra1o.free();
      ApplyFilters2589_4_ra0o.free();
      goto ApplyFilters2589_2;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  ApplyFilters2589_5: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ApplyFilters2589_6: {
    ApplyFilters2589_4_ra0o = ApplyFilters2589_6_ra0o;
    ApplyFilters2589_4_ra2o = ApplyFilters2589_6_ra1o;
    ApplyFilters2589_4_ra1o = ApplyFilters2589_6_ra2o;
    goto ApplyFilters2589_4;
  }
  // NormalBlock
  ApplyFilters2589_7: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:120:13--120:31:Decrypt",
                false);
    if (parser_Decrypt(p, &ApplyFilters2589_6_ra0o,
                       &ApplyFilters2589_6_ra1o, ApplyFilters2589_7_ra0o,
                       ApplyFilters2589_7_ra1o)) {
      ApplyFilters2589_6_ra2o = ApplyFilters2589_7_ra2o;
      goto ApplyFilters2589_6;
    } else {
      ApplyFilters2589_7_ra2o.free();
      goto ApplyFilters2589_5;
    }
  }
  // NormalBlock
  ApplyFilters2589_8: {
    ApplyFilters2589_7_ra0o = ApplyFilters2589_8_ra0o;
    ApplyFilters2589_7_ra1o = ApplyFilters2589_8_ra1o;
    ApplyFilters2589_7_ra2o = ApplyFilters2589_8_ra2o;
    goto ApplyFilters2589_7;
  }
  // ReturnBlock (RetNo NoCapture)
  ApplyFilters2589_10: {
    ApplyFilters2589_8_ra0o = ApplyFilters2589_10_ra0o;
    ApplyFilters2589_8_ra1o = ApplyFilters2589_10_ra1o;
    ApplyFilters2589_8_ra2o = ApplyFilters2589_10_ra2o;
    goto ApplyFilters2589_8;
  }
  // ReturnBlock (RetYes NoCapture)
  ApplyFilters2589_11: {
    ApplyFilters2589_4_ra0o = ApplyFilters2589_11_ra2o;
    ApplyFilters2589_4_ra2o = ApplyFilters2589_11_ra1o;
    ApplyFilters2589_4_ra1o = ApplyFilters2589_11_ra3o;
    goto ApplyFilters2589_4;
  }
  // NormalBlock
  ApplyFilters2589_14: {
    DDL::Array<DDL::UInt<8>> r0 = ApplyFilters2589_14_ra0o.get_name();
    ApplyFilters2589_14_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(88UL),
                                                           DDL::UInt<8>(82UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(102UL)};
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:118:15--118:59:Guard_",
                false);
    ApplyFilters2589_14_ra2o.copy();
    ApplyFilters2589_14_ra3o.copy();
    if (parser_Guard_(p, &ApplyFilters2589_11_ra0u,
                      &ApplyFilters2589_11_ra1o, ApplyFilters2589_14_ra4o, r2)) {
      ApplyFilters2589_14_ra1o.free();
      ApplyFilters2589_14_ra2o.free();
      ApplyFilters2589_14_ra3o.free();
      ApplyFilters2589_11_ra2o = ApplyFilters2589_14_ra2o;
      ApplyFilters2589_11_ra3o = ApplyFilters2589_14_ra3o;
      goto ApplyFilters2589_11;
    } else {
      ApplyFilters2589_14_ra2o.free();
      ApplyFilters2589_14_ra3o.free();
      ApplyFilters2589_10_ra0o = ApplyFilters2589_14_ra1o;
      ApplyFilters2589_10_ra1o = ApplyFilters2589_14_ra2o;
      ApplyFilters2589_10_ra2o = ApplyFilters2589_14_ra3o;
      goto ApplyFilters2589_10;
    }
  }
  // NormalBlock
  ApplyFilters2589_15: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:118:22--118:49",
               ApplyFilters2589_15_ra0o, r0);
    ApplyFilters2589_15_ra0o.free();
    r0.free();
    ApplyFilters2589_8_ra0o = ApplyFilters2589_15_ra1o;
    ApplyFilters2589_8_ra1o = ApplyFilters2589_15_ra2o;
    ApplyFilters2589_8_ra2o = ApplyFilters2589_15_ra3o;
    goto ApplyFilters2589_8;
  }
  // NormalBlock
  ApplyFilters2589_18: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:118:22--118:41",
               ApplyFilters2589_18_ra0o, r0);
    ApplyFilters2589_18_ra0o.free();
    r0.free();
    ApplyFilters2589_7_ra0o = ApplyFilters2589_18_ra1o;
    ApplyFilters2589_7_ra1o = ApplyFilters2589_18_ra2o;
    ApplyFilters2589_7_ra2o = ApplyFilters2589_18_ra3o;
    goto ApplyFilters2589_7;
  }
  // NormalBlock
  ApplyFilters2589_19: {
    User::Value r0 = ApplyFilters2589_19_ra0o.getValue();
    ApplyFilters2589_19_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::name:
        ApplyFilters2589_14_ra4o = ApplyFilters2589_19_ra4o;
        ApplyFilters2589_14_ra0o = r0;
        ApplyFilters2589_14_ra1o = ApplyFilters2589_19_ra1o;
        ApplyFilters2589_14_ra2o = ApplyFilters2589_19_ra2o;
        ApplyFilters2589_14_ra3o = ApplyFilters2589_19_ra3o;
        goto ApplyFilters2589_14;
      default:
        r0.free();
        ApplyFilters2589_15_ra0o = ApplyFilters2589_19_ra4o;
        ApplyFilters2589_15_ra1o = ApplyFilters2589_19_ra1o;
        ApplyFilters2589_15_ra2o = ApplyFilters2589_19_ra2o;
        ApplyFilters2589_15_ra3o = ApplyFilters2589_19_ra3o;
        goto ApplyFilters2589_15;
    }
  }
  // NormalBlock
  ApplyFilters2589_20: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(84UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    DDL::Maybe<User::Value> r1 = ApplyFilters2589_20_ra1o.lookup(r0);
    r0.free();
    ApplyFilters2589_20_ra0o.copy();
    ApplyFilters2589_20_ra0o.copy();
    if (r1.isJust()) {
      ApplyFilters2589_20_ra0o.free();
      ApplyFilters2589_19_ra4o = ApplyFilters2589_20_ra0o;
      ApplyFilters2589_19_ra0o = r1;
      ApplyFilters2589_19_ra1o = ApplyFilters2589_20_ra0o;
      ApplyFilters2589_19_ra2o = ApplyFilters2589_20_ra2o;
      ApplyFilters2589_19_ra3o = ApplyFilters2589_20_ra1o;
      goto ApplyFilters2589_19;
    } else {
      r1.free();
      ApplyFilters2589_20_ra0o.free();
      ApplyFilters2589_18_ra0o = ApplyFilters2589_20_ra0o;
      ApplyFilters2589_18_ra1o = ApplyFilters2589_20_ra0o;
      ApplyFilters2589_18_ra2o = ApplyFilters2589_20_ra2o;
      ApplyFilters2589_18_ra3o = ApplyFilters2589_20_ra1o;
      goto ApplyFilters2589_18;
    }
  }
}
bool parser_SetStreamAt_(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1,
                         DDL::UInt<64> a2, DDL::Input a3) {
  
// Parameters for L_1_SetStreamAt_2590
  DDL::UInt<64> SetStreamAt_2590_1_ra0u;
  DDL::Input SetStreamAt_2590_1_ra1o;
  
// Parameters for L_2_SetStreamAt_2590
  DDL::Input SetStreamAt_2590_2_ra0o;
  
// Parameters for L_3_SetStreamAt_2590
  DDL::Input SetStreamAt_2590_3_ra0o;
  DDL::UInt<64> SetStreamAt_2590_3_ra1u;
  DDL::Input SetStreamAt_2590_3_ra2o;
  SetStreamAt_2590_3_ra0o = a1;
  SetStreamAt_2590_3_ra1u = a2;
  SetStreamAt_2590_3_ra2o = a3;
  goto SetStreamAt_2590_3;
  // NormalBlock
  SetStreamAt_2590_1: {
    DDL::Input r0 = SetStreamAt_2590_1_ra1o.iDrop(DDL::Size::from(SetStreamAt_2590_1_ra0u.rep()));
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  SetStreamAt_2590_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:95:34--95:39",
               SetStreamAt_2590_2_ra0o, r0);
    SetStreamAt_2590_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  SetStreamAt_2590_3: {
    DDL::UInt<64> r0 = DDL::UInt<64>{SetStreamAt_2590_3_ra2o.length().rep()};
    DDL::Bool r1 = DDL::Bool{SetStreamAt_2590_3_ra1u <= r0};
    if (r1.getValue()) {
      SetStreamAt_2590_3_ra0o.free();
      SetStreamAt_2590_1_ra0u = SetStreamAt_2590_3_ra1u;
      SetStreamAt_2590_1_ra1o = SetStreamAt_2590_3_ra2o;
      goto SetStreamAt_2590_1;
    } else {
      SetStreamAt_2590_3_ra2o.free();
      SetStreamAt_2590_2_ra0o = SetStreamAt_2590_3_ra0o;
      goto SetStreamAt_2590_2;
    }
  }
}
bool parser_Chunk_2591(DDL::ParserStateUser<ReferenceTable> &p,
                       User::ApplyFilter* _result, DDL::Input* _result_input,
                       DDL::Input a1, DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2,
                       DDL::UInt<64> a3) {
  
// Parameters for L_1_Chunk2591
  DDL::Unit Chunk2591_1_ra0u;
  DDL::Input Chunk2591_1_ra1o;
  User::ApplyFilter Chunk2591_1_ra2o;
  
// Parameters for L_3_Chunk2591
  User::ApplyFilter Chunk2591_3_ra0o;
  DDL::Input Chunk2591_3_ra1o;
  DDL::UInt<64> Chunk2591_3_ra2u;
  DDL::Input Chunk2591_3_ra3o;
  
// Parameters for L_5_Chunk2591
  DDL::UInt<64> Chunk2591_5_ra0u;
  DDL::Input Chunk2591_5_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Chunk2591_5_ra2o;
  DDL::UInt<64> Chunk2591_5_ra3u;
  DDL::Input Chunk2591_5_ra4o;
  
// Parameters for L_6_Chunk2591
  DDL::Input Chunk2591_6_ra0o;
  
// Parameters for L_7_Chunk2591
  DDL::Input Chunk2591_7_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Chunk2591_7_ra1o;
  DDL::UInt<64> Chunk2591_7_ra2u;
  Chunk2591_7_ra0o = a1;
  Chunk2591_7_ra1o = a2;
  Chunk2591_7_ra2u = a3;
  goto Chunk2591_7;
  // ReturnBlock (RetNo NoCapture)
  Chunk2591_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Chunk2591_1: {
    p.popDebug();
    *_result = Chunk2591_1_ra2o;
    *_result_input = Chunk2591_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Chunk2591_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Chunk2591_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:109:5--109:19:SetStreamAt_",
                false);
    if (parser_SetStreamAt_(p, &Chunk2591_1_ra0u, &Chunk2591_1_ra1o,
                            Chunk2591_3_ra1o, Chunk2591_3_ra2u, Chunk2591_3_ra3o)) {
      Chunk2591_1_ra2o = Chunk2591_3_ra0o;
      goto Chunk2591_1;
    } else {
      Chunk2591_3_ra0o.free();
      goto Chunk2591_0;
    }
  }
  // NormalBlock
  Chunk2591_5: {
    DDL::Input r0 = Chunk2591_5_ra1o.iTake(DDL::Size::from(Chunk2591_5_ra0u.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:104:30--104:58:ApplyFilters",
                false);
    r0.copy();
    if (parser_ApplyFilters(p, &Chunk2591_3_ra0o, &Chunk2591_3_ra1o,
                            r0, Chunk2591_5_ra2o, r0)) {
      Chunk2591_3_ra2u = Chunk2591_5_ra3u;
      Chunk2591_3_ra3o = Chunk2591_5_ra4o;
      goto Chunk2591_3;
    } else {
      Chunk2591_5_ra4o.free();
      goto Chunk2591_2;
    }
  }
  // NormalBlock
  Chunk2591_6: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:107:16--107:21",
               Chunk2591_6_ra0o, r0);
    Chunk2591_6_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Chunk2591_7: {
    DDL::UInt<64> r0 = DDL::UInt<64>{Chunk2591_7_ra0o.length().rep()};
    DDL::Bool r1 = DDL::Bool{Chunk2591_7_ra2u <= r0};
    Chunk2591_7_ra0o.copy();
    if (r1.getValue()) {
      Chunk2591_5_ra0u = Chunk2591_7_ra2u;
      Chunk2591_5_ra1o = Chunk2591_7_ra0o;
      Chunk2591_5_ra2o = Chunk2591_7_ra1o;
      Chunk2591_5_ra3u = Chunk2591_7_ra2u;
      Chunk2591_5_ra4o = Chunk2591_7_ra0o;
      goto Chunk2591_5;
    } else {
      Chunk2591_7_ra1o.free();
      Chunk2591_7_ra0o.free();
      Chunk2591_6_ra0o = Chunk2591_7_ra0o;
      goto Chunk2591_6;
    }
  }
}
bool parser_Many_3085(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many3085
  DDL::Input Many3085_0_ra0o;
  
// Parameters for L_1_Many3085
  DDL::Input Many3085_1_ra0o;
  
// Parameters for L_2_Many3085
  DDL::Bool Many3085_2_ra0u;
  DDL::Input Many3085_2_ra1o;
  
// Parameters for L_4_Many3085
  DDL::Input Many3085_4_ra0o;
  
// Parameters for L_5_Many3085
  DDL::Unit Many3085_5_ra0u;
  DDL::Input Many3085_5_ra1o;
  
// Parameters for L_6_Many3085
  DDL::Input Many3085_6_ra0o;
  Many3085_6_ra0o = a1;
  goto Many3085_6;
  // NormalBlock
  Many3085_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_3085",
                true);
    Many3085_6_ra0o = Many3085_0_ra0o;
    goto Many3085_6;
  }
  // NormalBlock
  Many3085_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many3085_1_ra0o;
    return true;
  }
  // NormalBlock
  Many3085_2: {
    if (Many3085_2_ra0u.getValue()) {
      Many3085_0_ra0o = Many3085_2_ra1o;
      goto Many3085_0;
    } else {
      Many3085_1_ra0o = Many3085_2_ra1o;
      goto Many3085_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many3085_4: {
    Many3085_2_ra0u = DDL::Bool(false);
    Many3085_2_ra1o = Many3085_4_ra0o;
    goto Many3085_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many3085_5: {
    Many3085_2_ra0u = DDL::Bool(true);
    Many3085_2_ra1o = Many3085_5_ra1o;
    goto Many3085_2;
  }
  // NormalBlock
  Many3085_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:48--228:52:AnyWS_",
                false);
    Many3085_6_ra0o.copy();
    if (parser_AnyWS_(p, &Many3085_5_ra0u, &Many3085_5_ra1o,
                      Many3085_6_ra0o)) {
      Many3085_6_ra0o.free();
      goto Many3085_5;
    } else {
      Many3085_4_ra0o = Many3085_6_ra0o;
      goto Many3085_4;
    }
  }
}
bool parser_Token_2592(DDL::ParserStateUser<ReferenceTable> &p,
                       User::ApplyFilter* _result, DDL::Input* _result_input,
                       DDL::Input a1,
                       DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2) {
  
// Parameters for L_1_Token2592
  DDL::Unit Token2592_1_ra0u;
  DDL::Input Token2592_1_ra1o;
  User::ApplyFilter Token2592_1_ra2o;
  
// Parameters for L_3_Token2592
  User::ApplyFilter Token2592_3_ra0o;
  DDL::Input Token2592_3_ra1o;
  
// Parameters for L_5_Token2592
  DDL::UInt<64> Token2592_5_ra0u;
  DDL::Input Token2592_5_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Token2592_5_ra2o;
  
// Parameters for L_6_Token2592
  DDL::Input Token2592_6_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Token2592_6_ra1o;
  Token2592_6_ra0o = a1;
  Token2592_6_ra1o = a2;
  goto Token2592_6;
  // ReturnBlock (RetNo NoCapture)
  Token2592_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2592_1: {
    p.popDebug();
    *_result = Token2592_1_ra2o;
    *_result_input = Token2592_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Token2592_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2592_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:228:43--228:52:Many_3085",
                false);
    if (parser_Many_3085(p, &Token2592_1_ra0u, &Token2592_1_ra1o,
                         Token2592_3_ra1o)) {
      Token2592_1_ra2o = Token2592_3_ra0o;
      goto Token2592_1;
    } else {
      Token2592_3_ra0o.free();
      goto Token2592_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Token2592_4: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Token2592_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:104:4--104:58:Chunk_2591",
                false);
    if (parser_Chunk_2591(p, &Token2592_3_ra0o, &Token2592_3_ra1o,
                          Token2592_5_ra1o, Token2592_5_ra2o, Token2592_5_ra0u)) {
      goto Token2592_3;
    } else {
      goto Token2592_2;
    }
  }
  // NormalBlock
  Token2592_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:104:11--104:26:StreamLen",
                false);
    Token2592_6_ra1o.copy();
    if (parser_StreamLen(p, &Token2592_5_ra0u, &Token2592_5_ra1o,
                         Token2592_6_ra0o, Token2592_6_ra1o)) {
      Token2592_5_ra2o = Token2592_6_ra1o;
      goto Token2592_5;
    } else {
      Token2592_6_ra1o.free();
      goto Token2592_4;
    }
  }
}
bool parser_StreamBody(DDL::ParserStateUser<ReferenceTable> &p,
                       User::ApplyFilter* _result, DDL::Input* _result_input,
                       DDL::Input a1,
                       DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2) {
  
// Parameters for L_0_StreamBody2593
  DDL::Input StreamBody2593_0_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> StreamBody2593_0_ra1o;
  StreamBody2593_0_ra0o = a1;
  StreamBody2593_0_ra1o = a2;
  goto StreamBody2593_0;
  // NormalBlock
  StreamBody2593_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:103:25--104:58:Token_2592",
                true);
    return parser_Token_2592(p, _result, _result_input,
                             StreamBody2593_0_ra0o, StreamBody2593_0_ra1o);
  }
}
bool parser_SimpleEOL_(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_0_ra0o;
  
// Parameters for L_1_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_1_ra0o;
  
// Parameters for L_2_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_2_ra0o;
  
// Parameters for L_3_SimpleEOL_2594
  DDL::Bool SimpleEOL_2594_3_ra0u;
  DDL::Input SimpleEOL_2594_3_ra1o;
  DDL::Input SimpleEOL_2594_3_ra2o;
  
// Parameters for L_4_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_4_ra1o;
  DDL::Input SimpleEOL_2594_4_ra0o;
  
// Parameters for L_6_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_6_ra0o;
  
// Parameters for L_8_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_8_ra0o;
  
// Parameters for L_9_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_9_ra0o;
  
// Parameters for L_10_SimpleEOL_2594
  DDL::Bool SimpleEOL_2594_10_ra0u;
  DDL::Input SimpleEOL_2594_10_ra1o;
  DDL::Input SimpleEOL_2594_10_ra2o;
  
// Parameters for L_11_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_11_ra1o;
  DDL::Input SimpleEOL_2594_11_ra0o;
  
// Parameters for L_13_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_13_ra0o;
  
// Parameters for L_14_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_14_ra0o;
  DDL::Input SimpleEOL_2594_14_ra1o;
  
// Parameters for L_16_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_16_ra0o;
  
// Parameters for L_17_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_17_ra0o;
  DDL::Input SimpleEOL_2594_17_ra1o;
  
// Parameters for L_18_SimpleEOL_2594
  DDL::Bool SimpleEOL_2594_18_ra0u;
  DDL::Input SimpleEOL_2594_18_ra2o;
  DDL::Input SimpleEOL_2594_18_ra1o;
  DDL::Input SimpleEOL_2594_18_ra3o;
  
// Parameters for L_19_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_19_ra2o;
  DDL::Input SimpleEOL_2594_19_ra0o;
  DDL::Input SimpleEOL_2594_19_ra1o;
  
// Parameters for L_20_SimpleEOL_2594
  DDL::Input SimpleEOL_2594_20_ra0o;
  SimpleEOL_2594_20_ra0o = a1;
  goto SimpleEOL_2594_20;
  // NormalBlock
  SimpleEOL_2594_0: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:16:45--16:47",
               SimpleEOL_2594_0_ra0o, r0);
    SimpleEOL_2594_0_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  SimpleEOL_2594_1: {
    DDL::Input r0 = SimpleEOL_2594_1_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  SimpleEOL_2594_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:16:45--16:47",
               SimpleEOL_2594_2_ra0o, r0);
    SimpleEOL_2594_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock RetPure
  SimpleEOL_2594_3: {
    if (SimpleEOL_2594_3_ra0u.getValue()) {
      SimpleEOL_2594_3_ra1o.free();
      SimpleEOL_2594_1_ra0o = SimpleEOL_2594_3_ra2o;
      goto SimpleEOL_2594_1;
    } else {
      SimpleEOL_2594_3_ra2o.free();
      SimpleEOL_2594_2_ra0o = SimpleEOL_2594_3_ra1o;
      goto SimpleEOL_2594_2;
    }
  }
  // NormalBlock
  SimpleEOL_2594_4: {
    DDL::UInt<8> r0 = DDL::UInt<8>(SimpleEOL_2594_4_ra0o.iHead());
    SimpleEOL_2594_3_ra0u = parser_z24zlf(r0);
    SimpleEOL_2594_3_ra1o = SimpleEOL_2594_4_ra1o;
    SimpleEOL_2594_3_ra2o = SimpleEOL_2594_4_ra0o;
    goto SimpleEOL_2594_3;
  }
  // NormalBlock
  SimpleEOL_2594_6: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:16:40--16:42",
               SimpleEOL_2594_6_ra0o, r0);
    SimpleEOL_2594_6_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  SimpleEOL_2594_8: {
    DDL::Input r0 = SimpleEOL_2594_8_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Bool r1 = r0.length() == 0;
    r0.copy();
    if (r1.getValue()) {
      r0.free();
      SimpleEOL_2594_0_ra0o = r0;
      goto SimpleEOL_2594_0;
    } else {
      SimpleEOL_2594_4_ra1o = r0;
      SimpleEOL_2594_4_ra0o = r0;
      goto SimpleEOL_2594_4;
    }
  }
  // NormalBlock
  SimpleEOL_2594_9: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:16:40--16:42",
               SimpleEOL_2594_9_ra0o, r0);
    SimpleEOL_2594_9_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock RetPure
  SimpleEOL_2594_10: {
    if (SimpleEOL_2594_10_ra0u.getValue()) {
      SimpleEOL_2594_10_ra1o.free();
      SimpleEOL_2594_8_ra0o = SimpleEOL_2594_10_ra2o;
      goto SimpleEOL_2594_8;
    } else {
      SimpleEOL_2594_10_ra2o.free();
      SimpleEOL_2594_9_ra0o = SimpleEOL_2594_10_ra1o;
      goto SimpleEOL_2594_9;
    }
  }
  // NormalBlock
  SimpleEOL_2594_11: {
    DDL::UInt<8> r0 = DDL::UInt<8>(SimpleEOL_2594_11_ra0o.iHead());
    SimpleEOL_2594_10_ra0u = parser_z24zcr(r0);
    SimpleEOL_2594_10_ra1o = SimpleEOL_2594_11_ra1o;
    SimpleEOL_2594_10_ra2o = SimpleEOL_2594_11_ra0o;
    goto SimpleEOL_2594_10;
  }
  // NormalBlock
  SimpleEOL_2594_13: {
    DDL::Bool r0 = SimpleEOL_2594_13_ra0o.length() == 0;
    SimpleEOL_2594_13_ra0o.copy();
    if (r0.getValue()) {
      SimpleEOL_2594_13_ra0o.free();
      SimpleEOL_2594_6_ra0o = SimpleEOL_2594_13_ra0o;
      goto SimpleEOL_2594_6;
    } else {
      SimpleEOL_2594_11_ra1o = SimpleEOL_2594_13_ra0o;
      SimpleEOL_2594_11_ra0o = SimpleEOL_2594_13_ra0o;
      goto SimpleEOL_2594_11;
    }
  }
  // NormalBlock
  SimpleEOL_2594_14: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:16:31--16:33",
               SimpleEOL_2594_14_ra0o, r0);
    SimpleEOL_2594_14_ra0o.free();
    r0.free();
    SimpleEOL_2594_13_ra0o = SimpleEOL_2594_14_ra1o;
    goto SimpleEOL_2594_13;
  }
  // NormalBlock
  SimpleEOL_2594_16: {
    DDL::Input r0 = SimpleEOL_2594_16_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  SimpleEOL_2594_17: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:16:31--16:33",
               SimpleEOL_2594_17_ra0o, r0);
    SimpleEOL_2594_17_ra0o.free();
    r0.free();
    SimpleEOL_2594_13_ra0o = SimpleEOL_2594_17_ra1o;
    goto SimpleEOL_2594_13;
  }
  // ReturnBlock RetPure
  SimpleEOL_2594_18: {
    if (SimpleEOL_2594_18_ra0u.getValue()) {
      SimpleEOL_2594_18_ra1o.free();
      SimpleEOL_2594_18_ra2o.free();
      SimpleEOL_2594_16_ra0o = SimpleEOL_2594_18_ra3o;
      goto SimpleEOL_2594_16;
    } else {
      SimpleEOL_2594_18_ra3o.free();
      SimpleEOL_2594_17_ra0o = SimpleEOL_2594_18_ra2o;
      SimpleEOL_2594_17_ra1o = SimpleEOL_2594_18_ra1o;
      goto SimpleEOL_2594_17;
    }
  }
  // NormalBlock
  SimpleEOL_2594_19: {
    DDL::UInt<8> r0 = DDL::UInt<8>(SimpleEOL_2594_19_ra0o.iHead());
    SimpleEOL_2594_18_ra0u = parser_z24zlf(r0);
    SimpleEOL_2594_18_ra2o = SimpleEOL_2594_19_ra2o;
    SimpleEOL_2594_18_ra1o = SimpleEOL_2594_19_ra1o;
    SimpleEOL_2594_18_ra3o = SimpleEOL_2594_19_ra0o;
    goto SimpleEOL_2594_18;
  }
  // NormalBlock
  SimpleEOL_2594_20: {
    DDL::Bool r0 = SimpleEOL_2594_20_ra0o.length() == 0;
    SimpleEOL_2594_20_ra0o.copy();
    SimpleEOL_2594_20_ra0o.copy();
    SimpleEOL_2594_20_ra0o.copy();
    if (r0.getValue()) {
      SimpleEOL_2594_20_ra0o.free();
      SimpleEOL_2594_20_ra0o.free();
      SimpleEOL_2594_14_ra0o = SimpleEOL_2594_20_ra0o;
      SimpleEOL_2594_14_ra1o = SimpleEOL_2594_20_ra0o;
      goto SimpleEOL_2594_14;
    } else {
      SimpleEOL_2594_20_ra0o.free();
      SimpleEOL_2594_19_ra2o = SimpleEOL_2594_20_ra0o;
      SimpleEOL_2594_19_ra0o = SimpleEOL_2594_20_ra0o;
      SimpleEOL_2594_19_ra1o = SimpleEOL_2594_20_ra0o;
      goto SimpleEOL_2594_19;
    }
  }
}
bool parser_Stream(DDL::ParserStateUser<ReferenceTable> &p,
                   User::Stream* _result, DDL::Input* _result_input, DDL::Input a1,
                   User::Value a2) {
  
// Parameters for L_1_Stream2595
  DDL::Unit Stream2595_1_ra0u;
  DDL::Input Stream2595_1_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Stream2595_1_ra2o;
  User::ApplyFilter Stream2595_1_ra3o;
  
// Parameters for L_3_Stream2595
  User::ApplyFilter Stream2595_3_ra0o;
  DDL::Input Stream2595_3_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Stream2595_3_ra2o;
  
// Parameters for L_5_Stream2595
  DDL::Unit Stream2595_5_ra0u;
  DDL::Input Stream2595_5_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Stream2595_5_ra2o;
  
// Parameters for L_7_Stream2595
  DDL::Array<DDL::UInt<8>> Stream2595_7_ra0o;
  DDL::Input Stream2595_7_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Stream2595_7_ra2o;
  
// Parameters for L_8_Stream2595
  DDL::Input Stream2595_8_ra0o;
  
// Parameters for L_10_Stream2595
  DDL::Input Stream2595_10_ra1o;
  User::Value Stream2595_10_ra0o;
  
// Parameters for L_11_Stream2595
  DDL::Input Stream2595_11_ra0o;
  
// Parameters for L_12_Stream2595
  DDL::Input Stream2595_12_ra0o;
  User::Value Stream2595_12_ra1o;
  Stream2595_12_ra0o = a1;
  Stream2595_12_ra1o = a2;
  goto Stream2595_12;
  // ReturnBlock (RetNo NoCapture)
  Stream2595_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Stream2595_1: {
    User::Stream r0;
    r0.init(Stream2595_1_ra2o, Stream2595_1_ra3o);
    p.popDebug();
    *_result = r0;
    *_result_input = Stream2595_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  Stream2595_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Stream2595_3: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(109UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:31:5--31:18:KW_",
                false);
    if (parser_KW_(p, &Stream2595_1_ra0u, &Stream2595_1_ra1o,
                   Stream2595_3_ra1o, r0)) {
      Stream2595_1_ra2o = Stream2595_3_ra2o;
      Stream2595_1_ra3o = Stream2595_3_ra0o;
      goto Stream2595_1;
    } else {
      Stream2595_3_ra2o.free();
      Stream2595_3_ra0o.free();
      goto Stream2595_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Stream2595_4: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Stream2595_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:30:12--30:28:StreamBody",
                false);
    Stream2595_5_ra2o.copy();
    if (parser_StreamBody(p, &Stream2595_3_ra0o, &Stream2595_3_ra1o,
                          Stream2595_5_ra1o, Stream2595_5_ra2o)) {
      Stream2595_3_ra2o = Stream2595_5_ra2o;
      goto Stream2595_3;
    } else {
      Stream2595_5_ra2o.free();
      goto Stream2595_2;
    }
  }
  // NormalBlock
  Stream2595_7: {
    DDL::UInt<64> r0 = DDL::UInt<64>{Stream2595_7_ra0o.size().rep()};
    Stream2595_7_ra0o.free();
    DDL::Input r1 = Stream2595_7_ra1o.iDrop(DDL::Size::from(r0.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:29:5--29:13:SimpleEOL_",
                false);
    if (parser_SimpleEOL_(p, &Stream2595_5_ra0u, &Stream2595_5_ra1o,
                          r1)) {
      Stream2595_5_ra2o = Stream2595_7_ra2o;
      goto Stream2595_5;
    } else {
      Stream2595_7_ra2o.free();
      goto Stream2595_4;
    }
  }
  // NormalBlock
  Stream2595_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(109UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:28:5--28:18",
               Stream2595_8_ra0o, r3);
    Stream2595_8_ra0o.free();
    r3.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Stream2595_10: {
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r0 = Stream2595_10_ra0o.get_dict();
    Stream2595_10_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(109UL)};
    DDL::Bool r2 = Stream2595_10_ra1o.hasPrefix(r1);
    if (r2.getValue()) {
      Stream2595_7_ra0o = r1;
      Stream2595_7_ra1o = Stream2595_10_ra1o;
      Stream2595_7_ra2o = r0;
      goto Stream2595_7;
    } else {
      r0.free();
      r1.free();
      Stream2595_8_ra0o = Stream2595_10_ra1o;
      goto Stream2595_8;
    }
  }
  // NormalBlock
  Stream2595_11: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:26:14--26:24",
               Stream2595_11_ra0o, r0);
    Stream2595_11_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Stream2595_12: {
    switch (Stream2595_12_ra1o.getTag()) {
      case DDL::Tag::Value::dict:
        Stream2595_10_ra1o = Stream2595_12_ra0o;
        Stream2595_10_ra0o = Stream2595_12_ra1o;
        goto Stream2595_10;
      default:
        Stream2595_12_ra1o.free();
        Stream2595_11_ra0o = Stream2595_12_ra0o;
        goto Stream2595_11;
    }
  }
}
bool parser_TopDeclDef(DDL::ParserStateUser<ReferenceTable> &p,
                       User::TopDeclDef* _result, DDL::Input* _result_input,
                       DDL::Input a1) {
  
// Parameters for L_1_TopDeclDef2596
  DDL::Input TopDeclDef2596_1_ra0o;
  User::Value TopDeclDef2596_1_ra1o;
  
// Parameters for L_2_TopDeclDef2596
  User::Stream TopDeclDef2596_2_ra0o;
  DDL::Input TopDeclDef2596_2_ra1o;
  
// Parameters for L_4_TopDeclDef2596
  User::Value TopDeclDef2596_4_ra0o;
  DDL::Input TopDeclDef2596_4_ra1o;
  
// Parameters for L_5_TopDeclDef2596
  DDL::Input TopDeclDef2596_5_ra0o;
  TopDeclDef2596_5_ra0o = a1;
  goto TopDeclDef2596_5;
  // ReturnBlock (RetNo NoCapture)
  TopDeclDef2596_1: {
    User::TopDeclDef r0;
    r0.init_value(TopDeclDef2596_1_ra1o);
    p.popDebug();
    *_result = r0;
    *_result_input = TopDeclDef2596_1_ra0o;
    return true;
  }
  // ReturnBlock (RetYes NoCapture)
  TopDeclDef2596_2: {
    User::TopDeclDef r0;
    r0.init_stream(TopDeclDef2596_2_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = TopDeclDef2596_2_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  TopDeclDef2596_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  TopDeclDef2596_4: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:21:16--21:25:Stream",
                false);
    TopDeclDef2596_4_ra1o.copy();
    TopDeclDef2596_4_ra0o.copy();
    if (parser_Stream(p, &TopDeclDef2596_2_ra0o,
                      &TopDeclDef2596_2_ra1o, TopDeclDef2596_4_ra1o,
                      TopDeclDef2596_4_ra0o)) {
      TopDeclDef2596_4_ra1o.free();
      TopDeclDef2596_4_ra0o.free();
      goto TopDeclDef2596_2;
    } else {
      TopDeclDef2596_1_ra0o = TopDeclDef2596_4_ra1o;
      TopDeclDef2596_1_ra1o = TopDeclDef2596_4_ra0o;
      goto TopDeclDef2596_1;
    }
  }
  // NormalBlock
  TopDeclDef2596_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:19:15--19:19:Value",
                false);
    if (parser_Value(p, &TopDeclDef2596_4_ra0o, &TopDeclDef2596_4_ra1o,
                     TopDeclDef2596_5_ra0o)) {
      goto TopDeclDef2596_4;
    } else {
      goto TopDeclDef2596_3;
    }
  }
}
bool parser_Many_3096(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many3096
  DDL::Input Many3096_0_ra0o;
  
// Parameters for L_1_Many3096
  DDL::Input Many3096_1_ra0o;
  
// Parameters for L_2_Many3096
  DDL::Bool Many3096_2_ra0u;
  DDL::Input Many3096_2_ra1o;
  
// Parameters for L_4_Many3096
  DDL::Input Many3096_4_ra0o;
  
// Parameters for L_5_Many3096
  DDL::Unit Many3096_5_ra0u;
  DDL::Input Many3096_5_ra1o;
  
// Parameters for L_6_Many3096
  DDL::Input Many3096_6_ra0o;
  Many3096_6_ra0o = a1;
  goto Many3096_6;
  // NormalBlock
  Many3096_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:32:30--32:39:Many_3096",
                true);
    Many3096_6_ra0o = Many3096_0_ra0o;
    goto Many3096_6;
  }
  // NormalBlock
  Many3096_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many3096_1_ra0o;
    return true;
  }
  // NormalBlock
  Many3096_2: {
    if (Many3096_2_ra0u.getValue()) {
      Many3096_0_ra0o = Many3096_2_ra1o;
      goto Many3096_0;
    } else {
      Many3096_1_ra0o = Many3096_2_ra1o;
      goto Many3096_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many3096_4: {
    Many3096_2_ra0u = DDL::Bool(false);
    Many3096_2_ra1o = Many3096_4_ra0o;
    goto Many3096_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many3096_5: {
    Many3096_2_ra0u = DDL::Bool(true);
    Many3096_2_ra1o = Many3096_5_ra1o;
    goto Many3096_2;
  }
  // NormalBlock
  Many3096_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:32:35--32:39:AnyWS_",
                false);
    Many3096_6_ra0o.copy();
    if (parser_AnyWS_(p, &Many3096_5_ra0u, &Many3096_5_ra1o,
                      Many3096_6_ra0o)) {
      Many3096_6_ra0o.free();
      goto Many3096_5;
    } else {
      Many3096_4_ra0o = Many3096_6_ra0o;
      goto Many3096_4;
    }
  }
}
bool parser_ManyWS_(DDL::ParserStateUser<ReferenceTable> &p,
                    DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_ManyWS_2597
  DDL::Input ManyWS_2597_0_ra0o;
  ManyWS_2597_0_ra0o = a1;
  goto ManyWS_2597_0;
  // NormalBlock
  ManyWS_2597_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:32:30--32:39:Many_3096",
                true);
    return parser_Many_3096(p, _result, _result_input,
                            ManyWS_2597_0_ra0o);
  }
}
bool parser_TopDecl(DDL::ParserStateUser<ReferenceTable> &p,
                    User::TopDecl* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_TopDecl2598
  DDL::Array<DDL::UInt<8>> TopDecl2598_1_ra0o;
  DDL::Input TopDecl2598_1_ra1o;
  DDL::Integer TopDecl2598_1_ra2o;
  DDL::Integer TopDecl2598_1_ra3o;
  User::TopDeclDef TopDecl2598_1_ra4o;
  
// Parameters for L_2_TopDecl2598
  DDL::Input TopDecl2598_2_ra0o;
  
// Parameters for L_4_TopDecl2598
  User::TopDeclDef TopDecl2598_4_ra0o;
  DDL::Input TopDecl2598_4_ra1o;
  DDL::Integer TopDecl2598_4_ra2o;
  DDL::Integer TopDecl2598_4_ra3o;
  
// Parameters for L_6_TopDecl2598
  DDL::Unit TopDecl2598_6_ra0u;
  DDL::Input TopDecl2598_6_ra1o;
  DDL::Integer TopDecl2598_6_ra2o;
  DDL::Integer TopDecl2598_6_ra3o;
  
// Parameters for L_8_TopDecl2598
  DDL::Integer TopDecl2598_8_ra0o;
  DDL::Input TopDecl2598_8_ra1o;
  DDL::Integer TopDecl2598_8_ra2o;
  
// Parameters for L_10_TopDecl2598
  DDL::Integer TopDecl2598_10_ra0o;
  DDL::Input TopDecl2598_10_ra1o;
  
// Parameters for L_12_TopDecl2598
  DDL::Unit TopDecl2598_12_ra0u;
  DDL::Input TopDecl2598_12_ra1o;
  
// Parameters for L_13_TopDecl2598
  DDL::Input TopDecl2598_13_ra0o;
  TopDecl2598_13_ra0o = a1;
  goto TopDecl2598_13;
  // NormalBlock
  TopDecl2598_1: {
    DDL::UInt<64> r0 = DDL::UInt<64>{TopDecl2598_1_ra0o.size().rep()};
    TopDecl2598_1_ra0o.free();
    DDL::Input r1 = TopDecl2598_1_ra1o.iDrop(DDL::Size::from(r0.rep()));
    User::TopDecl r2;
    r2.init(TopDecl2598_1_ra2o, TopDecl2598_1_ra3o,
            TopDecl2598_1_ra4o);
    p.popDebug();
    *_result = r2;
    *_result_input = r1;
    return true;
  }
  // NormalBlock
  TopDecl2598_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(98UL),
                                                           DDL::UInt<8>(106UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:15:5--15:18",
               TopDecl2598_2_ra0o, r3);
    TopDecl2598_2_ra0o.free();
    r3.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  TopDecl2598_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  TopDecl2598_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(98UL),
                                                           DDL::UInt<8>(106UL)};
    DDL::Bool r1 = TopDecl2598_4_ra1o.hasPrefix(r0);
    if (r1.getValue()) {
      TopDecl2598_1_ra0o = r0;
      TopDecl2598_1_ra1o = TopDecl2598_4_ra1o;
      TopDecl2598_1_ra2o = TopDecl2598_4_ra2o;
      TopDecl2598_1_ra3o = TopDecl2598_4_ra3o;
      TopDecl2598_1_ra4o = TopDecl2598_4_ra0o;
      goto TopDecl2598_1;
    } else {
      TopDecl2598_4_ra0o.free();
      TopDecl2598_4_ra2o.free();
      TopDecl2598_4_ra3o.free();
      r0.free();
      TopDecl2598_2_ra0o = TopDecl2598_4_ra1o;
      goto TopDecl2598_2;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  TopDecl2598_5: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  TopDecl2598_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:14:11--14:20:TopDeclDef",
                false);
    if (parser_TopDeclDef(p, &TopDecl2598_4_ra0o, &TopDecl2598_4_ra1o,
                          TopDecl2598_6_ra1o)) {
      TopDecl2598_4_ra2o = TopDecl2598_6_ra2o;
      TopDecl2598_4_ra3o = TopDecl2598_6_ra3o;
      goto TopDecl2598_4;
    } else {
      TopDecl2598_6_ra2o.free();
      TopDecl2598_6_ra3o.free();
      goto TopDecl2598_3;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  TopDecl2598_7: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  TopDecl2598_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(106UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:13:5--13:12:KW_",
                false);
    if (parser_KW_(p, &TopDecl2598_6_ra0u, &TopDecl2598_6_ra1o,
                   TopDecl2598_8_ra1o, r0)) {
      TopDecl2598_6_ra2o = TopDecl2598_8_ra2o;
      TopDecl2598_6_ra3o = TopDecl2598_8_ra0o;
      goto TopDecl2598_6;
    } else {
      TopDecl2598_8_ra2o.free();
      TopDecl2598_8_ra0o.free();
      goto TopDecl2598_5;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  TopDecl2598_9: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  TopDecl2598_10: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:11:12--11:24:Token_2543",
                false);
    if (parser_Token_2543(p, &TopDecl2598_8_ra0o, &TopDecl2598_8_ra1o,
                          TopDecl2598_10_ra1o)) {
      TopDecl2598_8_ra2o = TopDecl2598_10_ra0o;
      goto TopDecl2598_8;
    } else {
      TopDecl2598_10_ra0o.free();
      goto TopDecl2598_7;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  TopDecl2598_11: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  TopDecl2598_12: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:10:12--10:24:Token_2543",
                false);
    if (parser_Token_2543(p, &TopDecl2598_10_ra0o,
                          &TopDecl2598_10_ra1o, TopDecl2598_12_ra1o)) {
      goto TopDecl2598_10;
    } else {
      goto TopDecl2598_9;
    }
  }
  // NormalBlock
  TopDecl2598_13: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:9:5--9:10:ManyWS_",
                false);
    if (parser_ManyWS_(p, &TopDecl2598_12_ra0u, &TopDecl2598_12_ra1o,
                       TopDecl2598_13_ra0o)) {
      goto TopDecl2598_12;
    } else {
      goto TopDecl2598_11;
    }
  }
}
bool parser_LookupSizze(DDL::ParserStateUser<ReferenceTable> &p,
                        DDL::UInt<64>* _result, DDL::Input* _result_input, DDL::Input a1,
                        DDL::Array<DDL::UInt<8>> a2,
                        DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a3) {
  
// Parameters for L_0_LookupSize2599
  DDL::Input LookupSizze2599_0_ra1o;
  DDL::Integer LookupSizze2599_0_ra0o;
  
// Parameters for L_1_LookupSize2599
  DDL::Input LookupSizze2599_1_ra0o;
  
// Parameters for L_2_LookupSize2599
  DDL::Input LookupSizze2599_2_ra1o;
  DDL::Bool LookupSizze2599_2_ra0u;
  DDL::Integer LookupSizze2599_2_ra2o;
  
// Parameters for L_3_LookupSize2599
  DDL::Input LookupSizze2599_3_ra1o;
  DDL::Integer LookupSizze2599_3_ra0o;
  
// Parameters for L_4_LookupSize2599
  DDL::Input LookupSizze2599_4_ra1o;
  DDL::Integer LookupSizze2599_4_ra0o;
  
// Parameters for L_6_LookupSize2599
  DDL::Integer LookupSizze2599_6_ra0o;
  DDL::Input LookupSizze2599_6_ra1o;
  
// Parameters for L_7_LookupSize2599
  DDL::Input LookupSizze2599_7_ra0o;
  DDL::Array<DDL::UInt<8>> LookupSizze2599_7_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LookupSizze2599_7_ra2o;
  LookupSizze2599_7_ra0o = a1;
  LookupSizze2599_7_ra1o = a2;
  LookupSizze2599_7_ra2o = a3;
  goto LookupSizze2599_7;
  // NormalBlock
  LookupSizze2599_0: {
    DDL::UInt<64> r0 = DDL::integer_to_uint<64>(LookupSizze2599_0_ra0o);
    LookupSizze2599_0_ra0o.free();
    p.popDebug();
    *_result = r0;
    *_result_input = LookupSizze2599_0_ra1o;
    return true;
  }
  // NormalBlock
  LookupSizze2599_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(118UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:280:22--280:46",
               LookupSizze2599_1_ra0o, r0);
    LookupSizze2599_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  LookupSizze2599_2: {
    if (LookupSizze2599_2_ra0u.getValue()) {
      LookupSizze2599_0_ra1o = LookupSizze2599_2_ra1o;
      LookupSizze2599_0_ra0o = LookupSizze2599_2_ra2o;
      goto LookupSizze2599_0;
    } else {
      LookupSizze2599_2_ra2o.free();
      LookupSizze2599_1_ra0o = LookupSizze2599_2_ra1o;
      goto LookupSizze2599_1;
    }
  }
  // NormalBlock
  LookupSizze2599_3: {
    DDL::Integer r0 = DDL::Integer("18446744073709551615");
    DDL::Bool r1 = DDL::Bool{LookupSizze2599_3_ra0o <= r0};
    r0.free();
    LookupSizze2599_2_ra1o = LookupSizze2599_3_ra1o;
    LookupSizze2599_2_ra0u = r1;
    LookupSizze2599_2_ra2o = LookupSizze2599_3_ra0o;
    goto LookupSizze2599_2;
  }
  // NormalBlock
  LookupSizze2599_4: {
    LookupSizze2599_2_ra1o = LookupSizze2599_4_ra1o;
    LookupSizze2599_2_ra0u = DDL::Bool(false);
    LookupSizze2599_2_ra2o = LookupSizze2599_4_ra0o;
    goto LookupSizze2599_2;
  }
  // ReturnBlock (RetNo NoCapture)
  LookupSizze2599_5: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LookupSizze2599_6: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Bool r1 = DDL::Bool{r0 <= LookupSizze2599_6_ra0o};
    r0.free();
    if (r1.getValue()) {
      LookupSizze2599_3_ra1o = LookupSizze2599_6_ra1o;
      LookupSizze2599_3_ra0o = LookupSizze2599_6_ra0o;
      goto LookupSizze2599_3;
    } else {
      LookupSizze2599_4_ra1o = LookupSizze2599_6_ra1o;
      LookupSizze2599_4_ra0o = LookupSizze2599_6_ra0o;
      goto LookupSizze2599_4;
    }
  }
  // NormalBlock
  LookupSizze2599_7: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:280:22--280:34:LookupNat",
                false);
    if (parser_LookupNat(p, &LookupSizze2599_6_ra0o,
                         &LookupSizze2599_6_ra1o, LookupSizze2599_7_ra0o,
                         LookupSizze2599_7_ra1o, LookupSizze2599_7_ra2o)) {
      goto LookupSizze2599_6;
    } else {
      goto LookupSizze2599_5;
    }
  }
}
bool parser_LookupName(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                       DDL::Input a1, DDL::Array<DDL::UInt<8>> a2,
                       DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a3) {
  
// Parameters for L_0_LookupName2600
  DDL::Input LookupName2600_0_ra1o;
  User::Value LookupName2600_0_ra0o;
  
// Parameters for L_1_LookupName2600
  DDL::Input LookupName2600_1_ra0o;
  
// Parameters for L_3_LookupName2600
  User::Value LookupName2600_3_ra0o;
  DDL::Input LookupName2600_3_ra1o;
  
// Parameters for L_4_LookupName2600
  DDL::Input LookupName2600_4_ra0o;
  DDL::Array<DDL::UInt<8>> LookupName2600_4_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LookupName2600_4_ra2o;
  LookupName2600_4_ra0o = a1;
  LookupName2600_4_ra1o = a2;
  LookupName2600_4_ra2o = a3;
  goto LookupName2600_4;
  // NormalBlock
  LookupName2600_0: {
    DDL::Array<DDL::UInt<8>> r0 = LookupName2600_0_ra0o.get_name();
    LookupName2600_0_ra0o.free();
    p.popDebug();
    *_result = r0;
    *_result_input = LookupName2600_0_ra1o;
    return true;
  }
  // NormalBlock
  LookupName2600_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:290:22--290:46",
               LookupName2600_1_ra0o, r0);
    LookupName2600_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  LookupName2600_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LookupName2600_3: {
    switch (LookupName2600_3_ra0o.getTag()) {
      case DDL::Tag::Value::name:
        LookupName2600_0_ra1o = LookupName2600_3_ra1o;
        LookupName2600_0_ra0o = LookupName2600_3_ra0o;
        goto LookupName2600_0;
      default:
        LookupName2600_3_ra0o.free();
        LookupName2600_1_ra0o = LookupName2600_3_ra1o;
        goto LookupName2600_1;
    }
  }
  // NormalBlock
  LookupName2600_4: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:290:22--290:38:LookupResolve",
                false);
    if (parser_LookupResolve(p, &LookupName2600_3_ra0o,
                             &LookupName2600_3_ra1o, LookupName2600_4_ra0o,
                             LookupName2600_4_ra1o, LookupName2600_4_ra2o)) {
      goto LookupName2600_3;
    } else {
      goto LookupName2600_2;
    }
  }
}
bool parser_CheckType_(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1,
                       DDL::Array<DDL::UInt<8>> a2,
                       DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a3) {
  
// Parameters for L_1_CheckType_2601
  DDL::Array<DDL::UInt<8>> CheckType_2601_1_ra0o;
  DDL::Input CheckType_2601_1_ra1o;
  DDL::Array<DDL::UInt<8>> CheckType_2601_1_ra2o;
  
// Parameters for L_2_CheckType_2601
  DDL::Input CheckType_2601_2_ra0o;
  DDL::Array<DDL::UInt<8>> CheckType_2601_2_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> CheckType_2601_2_ra2o;
  CheckType_2601_2_ra0o = a1;
  CheckType_2601_2_ra1o = a2;
  CheckType_2601_2_ra2o = a3;
  goto CheckType_2601_2;
  // ReturnBlock (RetNo NoCapture)
  CheckType_2601_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CheckType_2601_1: {
    DDL::Bool r0 = DDL::Bool{CheckType_2601_1_ra0o == CheckType_2601_1_ra2o};
    CheckType_2601_1_ra0o.free();
    CheckType_2601_1_ra2o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:292:21--292:51:Guard_",
                true);
    return parser_Guard_(p, _result, _result_input,
                         CheckType_2601_1_ra1o, r0);
  }
  // NormalBlock
  CheckType_2601_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(84UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:292:28--292:46:LookupName",
                false);
    if (parser_LookupName(p, &CheckType_2601_1_ra0o,
                          &CheckType_2601_1_ra1o, CheckType_2601_2_ra0o, r0,
                          CheckType_2601_2_ra2o)) {
      CheckType_2601_1_ra2o = CheckType_2601_2_ra1o;
      goto CheckType_2601_1;
    } else {
      CheckType_2601_2_ra1o.free();
      goto CheckType_2601_0;
    }
  }
}
bool parser_ObjStreamMeta(DDL::ParserStateUser<ReferenceTable> &p,
                          User::ObjStreamMeta* _result, DDL::Input* _result_input,
                          DDL::Input a1) {
  
// Parameters for L_1_ObjStreamMeta2602
  DDL::Input ObjStreamMeta2602_1_ra2o;
  DDL::Integer ObjStreamMeta2602_1_ra0o;
  DDL::Integer ObjStreamMeta2602_1_ra1o;
  
// Parameters for L_2_ObjStreamMeta2602
  DDL::Input ObjStreamMeta2602_2_ra0o;
  
// Parameters for L_3_ObjStreamMeta2602
  DDL::Input ObjStreamMeta2602_3_ra1o;
  DDL::Bool ObjStreamMeta2602_3_ra0u;
  DDL::Integer ObjStreamMeta2602_3_ra2o;
  DDL::Integer ObjStreamMeta2602_3_ra3o;
  
// Parameters for L_4_ObjStreamMeta2602
  DDL::Input ObjStreamMeta2602_4_ra2o;
  DDL::Integer ObjStreamMeta2602_4_ra0o;
  DDL::Integer ObjStreamMeta2602_4_ra1o;
  
// Parameters for L_5_ObjStreamMeta2602
  DDL::Input ObjStreamMeta2602_5_ra2o;
  DDL::Integer ObjStreamMeta2602_5_ra0o;
  DDL::Integer ObjStreamMeta2602_5_ra1o;
  
// Parameters for L_7_ObjStreamMeta2602
  DDL::Integer ObjStreamMeta2602_7_ra0o;
  DDL::Input ObjStreamMeta2602_7_ra1o;
  DDL::Integer ObjStreamMeta2602_7_ra2o;
  
// Parameters for L_9_ObjStreamMeta2602
  DDL::Integer ObjStreamMeta2602_9_ra0o;
  DDL::Input ObjStreamMeta2602_9_ra1o;
  
// Parameters for L_10_ObjStreamMeta2602
  DDL::Input ObjStreamMeta2602_10_ra0o;
  ObjStreamMeta2602_10_ra0o = a1;
  goto ObjStreamMeta2602_10;
  // NormalBlock
  ObjStreamMeta2602_1: {
    DDL::UInt<64> r0 = DDL::integer_to_uint<64>(ObjStreamMeta2602_1_ra0o);
    ObjStreamMeta2602_1_ra0o.free();
    User::ObjStreamMeta r1;
    r1.init(ObjStreamMeta2602_1_ra1o, r0);
    p.popDebug();
    *_result = r1;
    *_result_input = ObjStreamMeta2602_1_ra2o;
    return true;
  }
  // NormalBlock
  ObjStreamMeta2602_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(118UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:86:11--86:35",
               ObjStreamMeta2602_2_ra0o, r0);
    ObjStreamMeta2602_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  ObjStreamMeta2602_3: {
    if (ObjStreamMeta2602_3_ra0u.getValue()) {
      ObjStreamMeta2602_1_ra2o = ObjStreamMeta2602_3_ra1o;
      ObjStreamMeta2602_1_ra0o = ObjStreamMeta2602_3_ra2o;
      ObjStreamMeta2602_1_ra1o = ObjStreamMeta2602_3_ra3o;
      goto ObjStreamMeta2602_1;
    } else {
      ObjStreamMeta2602_3_ra2o.free();
      ObjStreamMeta2602_3_ra3o.free();
      ObjStreamMeta2602_2_ra0o = ObjStreamMeta2602_3_ra1o;
      goto ObjStreamMeta2602_2;
    }
  }
  // NormalBlock
  ObjStreamMeta2602_4: {
    DDL::Integer r0 = DDL::Integer("18446744073709551615");
    DDL::Bool r1 = DDL::Bool{ObjStreamMeta2602_4_ra0o <= r0};
    r0.free();
    ObjStreamMeta2602_3_ra1o = ObjStreamMeta2602_4_ra2o;
    ObjStreamMeta2602_3_ra0u = r1;
    ObjStreamMeta2602_3_ra2o = ObjStreamMeta2602_4_ra0o;
    ObjStreamMeta2602_3_ra3o = ObjStreamMeta2602_4_ra1o;
    goto ObjStreamMeta2602_3;
  }
  // NormalBlock
  ObjStreamMeta2602_5: {
    ObjStreamMeta2602_3_ra1o = ObjStreamMeta2602_5_ra2o;
    ObjStreamMeta2602_3_ra0u = DDL::Bool(false);
    ObjStreamMeta2602_3_ra2o = ObjStreamMeta2602_5_ra0o;
    ObjStreamMeta2602_3_ra3o = ObjStreamMeta2602_5_ra1o;
    goto ObjStreamMeta2602_3;
  }
  // ReturnBlock (RetNo NoCapture)
  ObjStreamMeta2602_6: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ObjStreamMeta2602_7: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Bool r1 = DDL::Bool{r0 <= ObjStreamMeta2602_7_ra0o};
    r0.free();
    if (r1.getValue()) {
      ObjStreamMeta2602_4_ra2o = ObjStreamMeta2602_7_ra1o;
      ObjStreamMeta2602_4_ra0o = ObjStreamMeta2602_7_ra0o;
      ObjStreamMeta2602_4_ra1o = ObjStreamMeta2602_7_ra2o;
      goto ObjStreamMeta2602_4;
    } else {
      ObjStreamMeta2602_5_ra2o = ObjStreamMeta2602_7_ra1o;
      ObjStreamMeta2602_5_ra0o = ObjStreamMeta2602_7_ra0o;
      ObjStreamMeta2602_5_ra1o = ObjStreamMeta2602_7_ra2o;
      goto ObjStreamMeta2602_5;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  ObjStreamMeta2602_8: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ObjStreamMeta2602_9: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:86:11--86:23:Token_2543",
                false);
    if (parser_Token_2543(p, &ObjStreamMeta2602_7_ra0o,
                          &ObjStreamMeta2602_7_ra1o, ObjStreamMeta2602_9_ra1o)) {
      ObjStreamMeta2602_7_ra2o = ObjStreamMeta2602_9_ra0o;
      goto ObjStreamMeta2602_7;
    } else {
      ObjStreamMeta2602_9_ra0o.free();
      goto ObjStreamMeta2602_6;
    }
  }
  // NormalBlock
  ObjStreamMeta2602_10: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:85:11--85:23:Token_2543",
                false);
    if (parser_Token_2543(p, &ObjStreamMeta2602_9_ra0o,
                          &ObjStreamMeta2602_9_ra1o, ObjStreamMeta2602_10_ra0o)) {
      goto ObjStreamMeta2602_9;
    } else {
      goto ObjStreamMeta2602_8;
    }
  }
}
bool parser_Many_3124(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<User::ObjStreamMeta>* _result,
                      DDL::Input* _result_input, DDL::Input a1, DDL::UInt<64> a2,
                      DDL::Builder<User::ObjStreamMeta> a3, DDL::UInt<64> a4) {
  
// Parameters for L_1_Many3124
  DDL::Input Many3124_1_ra0o;
  
// Parameters for L_2_Many3124
  User::ObjStreamMeta Many3124_2_ra0o;
  DDL::Input Many3124_2_ra1o;
  DDL::UInt<64> Many3124_2_ra2u;
  DDL::Builder<User::ObjStreamMeta> Many3124_2_ra3o;
  DDL::UInt<64> Many3124_2_ra4u;
  
// Parameters for L_3_Many3124
  DDL::Input Many3124_3_ra0o;
  DDL::UInt<64> Many3124_3_ra1u;
  DDL::Builder<User::ObjStreamMeta> Many3124_3_ra2o;
  DDL::UInt<64> Many3124_3_ra3u;
  
// Parameters for L_4_Many3124
  DDL::Input Many3124_4_ra1o;
  DDL::Builder<User::ObjStreamMeta> Many3124_4_ra0o;
  
// Parameters for L_5_Many3124
  DDL::Input Many3124_5_ra0o;
  DDL::UInt<64> Many3124_5_ra1u;
  DDL::Builder<User::ObjStreamMeta> Many3124_5_ra2o;
  DDL::UInt<64> Many3124_5_ra3u;
  Many3124_5_ra0o = a1;
  Many3124_5_ra1u = a2;
  Many3124_5_ra2o = a3;
  Many3124_5_ra3u = a4;
  goto Many3124_5;
  // ReturnBlock (RetNo NoCapture)
  Many3124_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many3124_1_ra0o, r0);
    Many3124_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Many3124_2: {
    DDL::UInt<64> r0 = Many3124_2_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<User::ObjStreamMeta> r1 = DDL::Builder<User::ObjStreamMeta>(Many3124_2_ra3o,
                                                                             Many3124_2_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:126:7--126:7:Many_3124",
                true);
    Many3124_5_ra0o = Many3124_2_ra1o;
    Many3124_5_ra1u = r0;
    Many3124_5_ra2o = r1;
    Many3124_5_ra3u = Many3124_2_ra4u;
    goto Many3124_5;
  }
  // NormalBlock
  Many3124_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:80:41--80:53:ObjStreamMeta",
                false);
    Many3124_3_ra0o.copy();
    if (parser_ObjStreamMeta(p, &Many3124_2_ra0o, &Many3124_2_ra1o,
                             Many3124_3_ra0o)) {
      Many3124_3_ra0o.free();
      Many3124_2_ra2u = Many3124_3_ra1u;
      Many3124_2_ra3o = Many3124_3_ra2o;
      Many3124_2_ra4u = Many3124_3_ra3u;
      goto Many3124_2;
    } else {
      Many3124_3_ra2o.free();
      Many3124_1_ra0o = Many3124_3_ra0o;
      goto Many3124_1;
    }
  }
  // NormalBlock
  Many3124_4: {
    p.popDebug();
    *_result = Many3124_4_ra0o;
    *_result_input = Many3124_4_ra1o;
    return true;
  }
  // NormalBlock
  Many3124_5: {
    DDL::Bool r0 = DDL::Bool{Many3124_5_ra1u < Many3124_5_ra3u};
    if (r0.getValue()) {
      Many3124_3_ra0o = Many3124_5_ra0o;
      Many3124_3_ra1u = Many3124_5_ra1u;
      Many3124_3_ra2o = Many3124_5_ra2o;
      Many3124_3_ra3u = Many3124_5_ra3u;
      goto Many3124_3;
    } else {
      Many3124_4_ra1o = Many3124_5_ra0o;
      Many3124_4_ra0o = Many3124_5_ra2o;
      goto Many3124_4;
    }
  }
}
bool parser_LookAhead_2603(DDL::ParserStateUser<ReferenceTable> &p,
                           DDL::Array<User::ObjStreamMeta>* _result,
                           DDL::Input* _result_input, DDL::Input a1, DDL::Input a2,
                           DDL::UInt<64> a3) {
  
// Parameters for L_1_LookAhead2603
  DDL::Builder<User::ObjStreamMeta> LookAhead2603_1_ra0o;
  DDL::Input LookAhead2603_1_ra1o;
  DDL::Input LookAhead2603_1_ra2o;
  
// Parameters for L_2_LookAhead2603
  DDL::Input LookAhead2603_2_ra0o;
  DDL::Input LookAhead2603_2_ra1o;
  DDL::UInt<64> LookAhead2603_2_ra2u;
  LookAhead2603_2_ra0o = a1;
  LookAhead2603_2_ra1o = a2;
  LookAhead2603_2_ra2u = a3;
  goto LookAhead2603_2;
  // ReturnBlock (RetNo NoCapture)
  LookAhead2603_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LookAhead2603_1: {
    LookAhead2603_1_ra1o.free();
    DDL::Array<User::ObjStreamMeta> r0 = DDL::Array<User::ObjStreamMeta>(LookAhead2603_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = LookAhead2603_1_ra2o;
    return true;
  }
  // NormalBlock
  LookAhead2603_2: {
    DDL::Builder<User::ObjStreamMeta> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:118:10--118:10:Many_3124",
                false);
    if (parser_Many_3124(p, &LookAhead2603_1_ra0o,
                         &LookAhead2603_1_ra1o, LookAhead2603_2_ra1o,
                         DDL::UInt<64>{UINT64_C(0)}, r0, LookAhead2603_2_ra2u)) {
      LookAhead2603_1_ra2o = LookAhead2603_2_ra0o;
      goto LookAhead2603_1;
    } else {
      LookAhead2603_2_ra0o.free();
      goto LookAhead2603_0;
    }
  }
}
bool parser_WithStream_2604(DDL::ParserStateUser<ReferenceTable> &p,
                            DDL::Array<User::ObjStreamMeta>* _result,
                            DDL::Input* _result_input, DDL::Input a1, DDL::UInt<64> a2,
                            DDL::Input a3) {
  
// Parameters for L_0_WithStream2604
  DDL::Input WithStream2604_0_ra0o;
  DDL::UInt<64> WithStream2604_0_ra1u;
  DDL::Input WithStream2604_0_ra2o;
  WithStream2604_0_ra0o = a1;
  WithStream2604_0_ra1u = a2;
  WithStream2604_0_ra2o = a3;
  goto WithStream2604_0;
  // NormalBlock
  WithStream2604_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:123:3--132:1:LookAhead_2603",
                true);
    return parser_LookAhead_2603(p, _result, _result_input,
                                 WithStream2604_0_ra0o, WithStream2604_0_ra2o,
                                 WithStream2604_0_ra1u);
  }
}
bool parser_ObjStream(DDL::ParserStateUser<ReferenceTable> &p,
                      User::ObjStream* _result, DDL::Input* _result_input, DDL::Input a1,
                      User::Stream a2) {
  
// Parameters for L_1_ObjStream2605
  DDL::Input ObjStream2605_1_ra3o;
  DDL::UInt<64> ObjStream2605_1_ra0u;
  DDL::Input ObjStream2605_1_ra1o;
  DDL::Array<User::ObjStreamMeta> ObjStream2605_1_ra2o;
  
// Parameters for L_2_ObjStream2605
  DDL::Input ObjStream2605_2_ra0o;
  
// Parameters for L_4_ObjStream2605
  DDL::Array<User::ObjStreamMeta> ObjStream2605_4_ra0o;
  DDL::Input ObjStream2605_4_ra1o;
  DDL::UInt<64> ObjStream2605_4_ra2u;
  DDL::Input ObjStream2605_4_ra3o;
  
// Parameters for L_6_ObjStream2605
  DDL::UInt<64> ObjStream2605_6_ra0u;
  DDL::Input ObjStream2605_6_ra1o;
  DDL::UInt<64> ObjStream2605_6_ra2u;
  DDL::Input ObjStream2605_6_ra3o;
  
// Parameters for L_8_ObjStream2605
  DDL::UInt<64> ObjStream2605_8_ra0u;
  DDL::Input ObjStream2605_8_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ObjStream2605_8_ra2o;
  DDL::Input ObjStream2605_8_ra3o;
  
// Parameters for L_10_ObjStream2605
  DDL::Input ObjStream2605_10_ra2o;
  User::ApplyFilter ObjStream2605_10_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ObjStream2605_10_ra1o;
  
// Parameters for L_11_ObjStream2605
  DDL::Input ObjStream2605_11_ra0o;
  
// Parameters for L_13_ObjStream2605
  DDL::Unit ObjStream2605_13_ra0u;
  DDL::Input ObjStream2605_13_ra1o;
  User::Stream ObjStream2605_13_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ObjStream2605_13_ra3o;
  
// Parameters for L_14_ObjStream2605
  DDL::Input ObjStream2605_14_ra0o;
  User::Stream ObjStream2605_14_ra1o;
  ObjStream2605_14_ra0o = a1;
  ObjStream2605_14_ra1o = a2;
  goto ObjStream2605_14;
  // NormalBlock
  ObjStream2605_1: {
    DDL::Input r0 = ObjStream2605_1_ra1o.iDrop(DDL::Size::from(ObjStream2605_1_ra0u.rep()));
    User::ObjStream r1;
    r1.init(ObjStream2605_1_ra2o, r0);
    p.popDebug();
    *_result = r1;
    *_result_input = ObjStream2605_1_ra3o;
    return true;
  }
  // NormalBlock
  ObjStream2605_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:81:17--81:26",
               ObjStream2605_2_ra0o, r0);
    ObjStream2605_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  ObjStream2605_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ObjStream2605_4: {
    DDL::UInt<64> r0 = DDL::UInt<64>{ObjStream2605_4_ra3o.length().rep()};
    DDL::Bool r1 = DDL::Bool{ObjStream2605_4_ra2u <= r0};
    if (r1.getValue()) {
      ObjStream2605_1_ra3o = ObjStream2605_4_ra1o;
      ObjStream2605_1_ra0u = ObjStream2605_4_ra2u;
      ObjStream2605_1_ra1o = ObjStream2605_4_ra3o;
      ObjStream2605_1_ra2o = ObjStream2605_4_ra0o;
      goto ObjStream2605_1;
    } else {
      ObjStream2605_4_ra0o.free();
      ObjStream2605_4_ra3o.free();
      ObjStream2605_2_ra0o = ObjStream2605_4_ra1o;
      goto ObjStream2605_2;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  ObjStream2605_5: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ObjStream2605_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:80:17--80:53:WithStream_2604",
                false);
    ObjStream2605_6_ra3o.copy();
    if (parser_WithStream_2604(p, &ObjStream2605_4_ra0o,
                               &ObjStream2605_4_ra1o, ObjStream2605_6_ra1o, ObjStream2605_6_ra2u,
                               ObjStream2605_6_ra3o)) {
      ObjStream2605_4_ra2u = ObjStream2605_6_ra0u;
      ObjStream2605_4_ra3o = ObjStream2605_6_ra3o;
      goto ObjStream2605_4;
    } else {
      ObjStream2605_6_ra3o.free();
      goto ObjStream2605_3;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  ObjStream2605_7: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ObjStream2605_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(70UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(116UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:78:17--78:36:LookupSize",
                false);
    if (parser_LookupSizze(p, &ObjStream2605_6_ra0u,
                           &ObjStream2605_6_ra1o, ObjStream2605_8_ra1o, r0,
                           ObjStream2605_8_ra2o)) {
      ObjStream2605_6_ra2u = ObjStream2605_8_ra0u;
      ObjStream2605_6_ra3o = ObjStream2605_8_ra3o;
      goto ObjStream2605_6;
    } else {
      ObjStream2605_8_ra3o.free();
      goto ObjStream2605_5;
    }
  }
  // NormalBlock
  ObjStream2605_10: {
    DDL::Input r0 = ObjStream2605_10_ra0o.get_ok();
    ObjStream2605_10_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(78UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:77:17--77:32:LookupSize",
                false);
    ObjStream2605_10_ra1o.copy();
    if (parser_LookupSizze(p, &ObjStream2605_8_ra0u,
                           &ObjStream2605_8_ra1o, ObjStream2605_10_ra2o, r1,
                           ObjStream2605_10_ra1o)) {
      ObjStream2605_8_ra2o = ObjStream2605_10_ra1o;
      ObjStream2605_8_ra3o = r0;
      goto ObjStream2605_8;
    } else {
      ObjStream2605_10_ra1o.free();
      r0.free();
      goto ObjStream2605_7;
    }
  }
  // NormalBlock
  ObjStream2605_11: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:76:17--76:28",
               ObjStream2605_11_ra0o, r0);
    ObjStream2605_11_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  ObjStream2605_12: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ObjStream2605_13: {
    User::ApplyFilter r0 = ObjStream2605_13_ra2o.get_body();
    ObjStream2605_13_ra2o.free();
    switch (r0.getTag()) {
      case DDL::Tag::ApplyFilter::ok:
        ObjStream2605_10_ra2o = ObjStream2605_13_ra1o;
        ObjStream2605_10_ra0o = r0;
        ObjStream2605_10_ra1o = ObjStream2605_13_ra3o;
        goto ObjStream2605_10;
      default:
        ObjStream2605_13_ra3o.free();
        r0.free();
        ObjStream2605_11_ra0o = ObjStream2605_13_ra1o;
        goto ObjStream2605_11;
    }
  }
  // NormalBlock
  ObjStream2605_14: {
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r0 = ObjStream2605_14_ra1o.get_header();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(79UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(106UL),
                                                           DDL::UInt<8>(83UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(109UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:74:5--74:24:CheckType_",
                false);
    r0.copy();
    if (parser_CheckType_(p, &ObjStream2605_13_ra0u,
                          &ObjStream2605_13_ra1o, ObjStream2605_14_ra0o, r1, r0)) {
      ObjStream2605_13_ra2o = ObjStream2605_14_ra1o;
      ObjStream2605_13_ra3o = r0;
      goto ObjStream2605_13;
    } else {
      ObjStream2605_14_ra1o.free();
      r0.free();
      goto ObjStream2605_12;
    }
  }
}
bool parser_LookAhead_2606(DDL::ParserStateUser<ReferenceTable> &p,
                           User::Value* _result, DDL::Input* _result_input, DDL::Input a1,
                           DDL::Input a2) {
  
// Parameters for L_1_LookAhead2606
  User::Value LookAhead2606_1_ra0o;
  DDL::Input LookAhead2606_1_ra1o;
  DDL::Input LookAhead2606_1_ra2o;
  
// Parameters for L_2_LookAhead2606
  DDL::Input LookAhead2606_2_ra0o;
  DDL::Input LookAhead2606_2_ra1o;
  LookAhead2606_2_ra0o = a1;
  LookAhead2606_2_ra1o = a2;
  goto LookAhead2606_2;
  // ReturnBlock (RetNo NoCapture)
  LookAhead2606_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LookAhead2606_1: {
    LookAhead2606_1_ra1o.free();
    p.popDebug();
    *_result = LookAhead2606_1_ra0o;
    *_result_input = LookAhead2606_1_ra2o;
    return true;
  }
  // NormalBlock
  LookAhead2606_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:126:7--126:7:Value",
                false);
    if (parser_Value(p, &LookAhead2606_1_ra0o, &LookAhead2606_1_ra1o,
                     LookAhead2606_2_ra1o)) {
      LookAhead2606_1_ra2o = LookAhead2606_2_ra0o;
      goto LookAhead2606_1;
    } else {
      LookAhead2606_2_ra0o.free();
      goto LookAhead2606_0;
    }
  }
}
bool parser_WithStream_2607(DDL::ParserStateUser<ReferenceTable> &p,
                            User::Value* _result, DDL::Input* _result_input, DDL::Input a1,
                            DDL::Input a2) {
  
// Parameters for L_0_WithStream2607
  DDL::Input WithStream2607_0_ra0o;
  DDL::Input WithStream2607_0_ra1o;
  WithStream2607_0_ra0o = a1;
  WithStream2607_0_ra1o = a2;
  goto WithStream2607_0;
  // NormalBlock
  WithStream2607_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:123:3--132:1:LookAhead_2606",
                true);
    return parser_LookAhead_2606(p, _result, _result_input,
                                 WithStream2607_0_ra0o, WithStream2607_0_ra1o);
  }
}
bool parser_ObjStreamEntry(DDL::ParserStateUser<ReferenceTable> &p,
                           User::TopDecl* _result, DDL::Input* _result_input, DDL::Input a1,
                           User::ObjStream a2, DDL::UInt<64> a3) {
  
// Parameters for L_1_ObjStreamEntry2608
  User::Value ObjStreamEntry2608_1_ra0o;
  DDL::Input ObjStreamEntry2608_1_ra1o;
  DDL::Integer ObjStreamEntry2608_1_ra2o;
  DDL::Integer ObjStreamEntry2608_1_ra3o;
  
// Parameters for L_3_ObjStreamEntry2608
  DDL::Input ObjStreamEntry2608_3_ra4o;
  DDL::UInt<64> ObjStreamEntry2608_3_ra0u;
  DDL::Input ObjStreamEntry2608_3_ra1o;
  DDL::Integer ObjStreamEntry2608_3_ra2o;
  DDL::Integer ObjStreamEntry2608_3_ra3o;
  
// Parameters for L_4_ObjStreamEntry2608
  DDL::Input ObjStreamEntry2608_4_ra0o;
  
// Parameters for L_6_ObjStreamEntry2608
  DDL::Input ObjStreamEntry2608_6_ra0o;
  
// Parameters for L_7_ObjStreamEntry2608
  DDL::Input ObjStreamEntry2608_7_ra5o;
  DDL::Array<User::ObjStreamMeta> ObjStreamEntry2608_7_ra0o;
  DDL::UInt<64> ObjStreamEntry2608_7_ra1u;
  User::ObjStream ObjStreamEntry2608_7_ra2o;
  DDL::Integer ObjStreamEntry2608_7_ra3o;
  DDL::Integer ObjStreamEntry2608_7_ra4o;
  
// Parameters for L_9_ObjStreamEntry2608
  DDL::Input ObjStreamEntry2608_9_ra0o;
  
// Parameters for L_10_ObjStreamEntry2608
  DDL::Input ObjStreamEntry2608_10_ra4o;
  DDL::Array<User::ObjStreamMeta> ObjStreamEntry2608_10_ra0o;
  DDL::UInt<64> ObjStreamEntry2608_10_ra1u;
  User::ObjStream ObjStreamEntry2608_10_ra2o;
  DDL::UInt<64> ObjStreamEntry2608_10_ra3u;
  
// Parameters for L_11_ObjStreamEntry2608
  DDL::Input ObjStreamEntry2608_11_ra0o;
  User::ObjStream ObjStreamEntry2608_11_ra1o;
  DDL::UInt<64> ObjStreamEntry2608_11_ra2u;
  ObjStreamEntry2608_11_ra0o = a1;
  ObjStreamEntry2608_11_ra1o = a2;
  ObjStreamEntry2608_11_ra2u = a3;
  goto ObjStreamEntry2608_11;
  // ReturnBlock (RetNo NoCapture)
  ObjStreamEntry2608_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ObjStreamEntry2608_1: {
    User::TopDeclDef r0;
    r0.init_value(ObjStreamEntry2608_1_ra0o);
    User::TopDecl r1;
    r1.init(ObjStreamEntry2608_1_ra2o, ObjStreamEntry2608_1_ra3o, r0);
    p.popDebug();
    *_result = r1;
    *_result_input = ObjStreamEntry2608_1_ra1o;
    return true;
  }
  // NormalBlock
  ObjStreamEntry2608_3: {
    DDL::Input r0 = ObjStreamEntry2608_3_ra1o.iDrop(DDL::Size::from(ObjStreamEntry2608_3_ra0u.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:96:28--96:67:WithStream_2607",
                false);
    if (parser_WithStream_2607(p, &ObjStreamEntry2608_1_ra0o,
                               &ObjStreamEntry2608_1_ra1o, ObjStreamEntry2608_3_ra4o, r0)) {
      ObjStreamEntry2608_1_ra2o = ObjStreamEntry2608_3_ra2o;
      ObjStreamEntry2608_1_ra3o = ObjStreamEntry2608_3_ra3o;
      goto ObjStreamEntry2608_1;
    } else {
      ObjStreamEntry2608_3_ra2o.free();
      ObjStreamEntry2608_3_ra3o.free();
      goto ObjStreamEntry2608_0;
    }
  }
  // NormalBlock
  ObjStreamEntry2608_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:96:40--96:52",
               ObjStreamEntry2608_4_ra0o, r0);
    ObjStreamEntry2608_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  ObjStreamEntry2608_6: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(120UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:95:17--95:29",
               ObjStreamEntry2608_6_ra0o, r0);
    ObjStreamEntry2608_6_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  ObjStreamEntry2608_7: {
    User::ObjStreamMeta r0 = ObjStreamEntry2608_7_ra0o[DDL::Size::from(ObjStreamEntry2608_7_ra1u.rep())];
    ObjStreamEntry2608_7_ra0o.free();
    DDL::UInt<64> r1 = r0.get_off();
    r0.free();
    DDL::Input r2 = ObjStreamEntry2608_7_ra2o.get_bytes();
    ObjStreamEntry2608_7_ra2o.free();
    DDL::UInt<64> r3 = DDL::UInt<64>{r2.length().rep()};
    DDL::Bool r4 = DDL::Bool{r1 <= r3};
    if (r4.getValue()) {
      ObjStreamEntry2608_3_ra4o = ObjStreamEntry2608_7_ra5o;
      ObjStreamEntry2608_3_ra0u = r1;
      ObjStreamEntry2608_3_ra1o = r2;
      ObjStreamEntry2608_3_ra2o = ObjStreamEntry2608_7_ra3o;
      ObjStreamEntry2608_3_ra3o = ObjStreamEntry2608_7_ra4o;
      goto ObjStreamEntry2608_3;
    } else {
      ObjStreamEntry2608_7_ra3o.free();
      ObjStreamEntry2608_7_ra4o.free();
      r2.free();
      ObjStreamEntry2608_4_ra0o = ObjStreamEntry2608_7_ra5o;
      goto ObjStreamEntry2608_4;
    }
  }
  // NormalBlock
  ObjStreamEntry2608_9: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(120UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:92:17--92:29",
               ObjStreamEntry2608_9_ra0o, r0);
    ObjStreamEntry2608_9_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  ObjStreamEntry2608_10: {
    User::ObjStreamMeta r0 = ObjStreamEntry2608_10_ra0o[DDL::Size::from(ObjStreamEntry2608_10_ra1u.rep())];
    ObjStreamEntry2608_10_ra0o.free();
    DDL::Integer r1 = r0.get_oid();
    r0.free();
    DDL::Integer r2 = DDL::Integer("0");
    DDL::Array<User::ObjStreamMeta> r3 = ObjStreamEntry2608_10_ra2o.get_index();
    DDL::UInt<64> r4 = DDL::UInt<64>{r3.size().rep()};
    DDL::Bool r5 = DDL::Bool{r4 <= ObjStreamEntry2608_10_ra3u};
    if (r5.getValue()) {
      ObjStreamEntry2608_10_ra2o.free();
      r1.free();
      r2.free();
      r3.free();
      ObjStreamEntry2608_6_ra0o = ObjStreamEntry2608_10_ra4o;
      goto ObjStreamEntry2608_6;
    } else {
      ObjStreamEntry2608_7_ra5o = ObjStreamEntry2608_10_ra4o;
      ObjStreamEntry2608_7_ra0o = r3;
      ObjStreamEntry2608_7_ra1u = ObjStreamEntry2608_10_ra3u;
      ObjStreamEntry2608_7_ra2o = ObjStreamEntry2608_10_ra2o;
      ObjStreamEntry2608_7_ra3o = r1;
      ObjStreamEntry2608_7_ra4o = r2;
      goto ObjStreamEntry2608_7;
    }
  }
  // NormalBlock
  ObjStreamEntry2608_11: {
    DDL::Array<User::ObjStreamMeta> r0 = ObjStreamEntry2608_11_ra1o.get_index();
    DDL::UInt<64> r1 = DDL::UInt<64>{r0.size().rep()};
    DDL::Bool r2 = DDL::Bool{r1 <= ObjStreamEntry2608_11_ra2u};
    if (r2.getValue()) {
      ObjStreamEntry2608_11_ra1o.free();
      r0.free();
      ObjStreamEntry2608_9_ra0o = ObjStreamEntry2608_11_ra0o;
      goto ObjStreamEntry2608_9;
    } else {
      ObjStreamEntry2608_10_ra4o = ObjStreamEntry2608_11_ra0o;
      ObjStreamEntry2608_10_ra0o = r0;
      ObjStreamEntry2608_10_ra1u = ObjStreamEntry2608_11_ra2u;
      ObjStreamEntry2608_10_ra2o = ObjStreamEntry2608_11_ra1o;
      ObjStreamEntry2608_10_ra3u = ObjStreamEntry2608_11_ra2u;
      goto ObjStreamEntry2608_10;
    }
  }
}
bool parser_LookupNatDirect(DDL::ParserStateUser<ReferenceTable> &p,
                            DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                            DDL::Array<DDL::UInt<8>> a2,
                            DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a3) {
  
// Parameters for L_1_LookupNatDirect2609
  DDL::Input LookupNatDirect2609_1_ra1o;
  User::Value LookupNatDirect2609_1_ra0o;
  
// Parameters for L_2_LookupNatDirect2609
  DDL::Input LookupNatDirect2609_2_ra0o;
  
// Parameters for L_4_LookupNatDirect2609
  DDL::Input LookupNatDirect2609_4_ra0o;
  
// Parameters for L_5_LookupNatDirect2609
  DDL::Input LookupNatDirect2609_5_ra1o;
  DDL::Maybe<User::Value> LookupNatDirect2609_5_ra0o;
  
// Parameters for L_6_LookupNatDirect2609
  DDL::Input LookupNatDirect2609_6_ra0o;
  DDL::Array<DDL::UInt<8>> LookupNatDirect2609_6_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LookupNatDirect2609_6_ra2o;
  LookupNatDirect2609_6_ra0o = a1;
  LookupNatDirect2609_6_ra1o = a2;
  LookupNatDirect2609_6_ra2o = a3;
  goto LookupNatDirect2609_6;
  // NormalBlock
  LookupNatDirect2609_1: {
    User::Number r0 = LookupNatDirect2609_1_ra0o.get_number();
    LookupNatDirect2609_1_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:278:36--278:68:NumberAsNat",
                true);
    return parser_NumberAsNat(p, _result, _result_input,
                              LookupNatDirect2609_1_ra1o, r0);
  }
  // NormalBlock
  LookupNatDirect2609_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:278:49--278:68",
               LookupNatDirect2609_2_ra0o, r0);
    LookupNatDirect2609_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  LookupNatDirect2609_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:278:49--278:58",
               LookupNatDirect2609_4_ra0o, r0);
    LookupNatDirect2609_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  LookupNatDirect2609_5: {
    User::Value r0 = LookupNatDirect2609_5_ra0o.getValue();
    LookupNatDirect2609_5_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::number:
        LookupNatDirect2609_1_ra1o = LookupNatDirect2609_5_ra1o;
        LookupNatDirect2609_1_ra0o = r0;
        goto LookupNatDirect2609_1;
      default:
        r0.free();
        LookupNatDirect2609_2_ra0o = LookupNatDirect2609_5_ra1o;
        goto LookupNatDirect2609_2;
    }
  }
  // NormalBlock
  LookupNatDirect2609_6: {
    DDL::Maybe<User::Value> r0 = LookupNatDirect2609_6_ra2o.lookup(LookupNatDirect2609_6_ra1o);
    LookupNatDirect2609_6_ra1o.free();
    LookupNatDirect2609_6_ra2o.free();
    if (r0.isJust()) {
      LookupNatDirect2609_5_ra1o = LookupNatDirect2609_6_ra0o;
      LookupNatDirect2609_5_ra0o = r0;
      goto LookupNatDirect2609_5;
    } else {
      r0.free();
      LookupNatDirect2609_4_ra0o = LookupNatDirect2609_6_ra0o;
      goto LookupNatDirect2609_4;
    }
  }
}
bool parser_map_3185(DDL::ParserStateUser<ReferenceTable> &p,
                     DDL::Builder<DDL::Integer>* _result, DDL::Input* _result_input,
                     DDL::Input a1, DDL::Builder<DDL::Integer> a2,
                     DDL::Array<User::Value>::Iterator a3) {
  
// Parameters for L_0_map3185
  DDL::Input map3185_0_ra1o;
  DDL::Builder<DDL::Integer> map3185_0_ra0o;
  
// Parameters for L_2_map3185
  DDL::Integer map3185_2_ra0o;
  DDL::Input map3185_2_ra1o;
  DDL::Builder<DDL::Integer> map3185_2_ra2o;
  DDL::Array<User::Value>::Iterator map3185_2_ra3o;
  
// Parameters for L_4_map3185
  DDL::Input map3185_4_ra3o;
  User::Value map3185_4_ra0o;
  DDL::Builder<DDL::Integer> map3185_4_ra1o;
  DDL::Array<User::Value>::Iterator map3185_4_ra2o;
  
// Parameters for L_5_map3185
  DDL::Input map3185_5_ra0o;
  
// Parameters for L_7_map3185
  User::Value map3185_7_ra0o;
  DDL::Input map3185_7_ra1o;
  DDL::Builder<DDL::Integer> map3185_7_ra2o;
  DDL::Array<User::Value>::Iterator map3185_7_ra3o;
  
// Parameters for L_8_map3185
  DDL::Input map3185_8_ra2o;
  DDL::Array<User::Value>::Iterator map3185_8_ra0o;
  DDL::Builder<DDL::Integer> map3185_8_ra1o;
  
// Parameters for L_9_map3185
  DDL::Input map3185_9_ra0o;
  DDL::Builder<DDL::Integer> map3185_9_ra1o;
  DDL::Array<User::Value>::Iterator map3185_9_ra2o;
  map3185_9_ra0o = a1;
  map3185_9_ra1o = a2;
  map3185_9_ra2o = a3;
  goto map3185_9;
  // NormalBlock
  map3185_0: {
    p.popDebug();
    *_result = map3185_0_ra0o;
    *_result_input = map3185_0_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  map3185_1: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  map3185_2: {
    DDL::Builder<DDL::Integer> r0 = DDL::Builder<DDL::Integer>(map3185_2_ra2o,
                                                               map3185_2_ra0o);
    DDL::Array<User::Value>::Iterator r1 = map3185_2_ra3o.next();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:285:5--286:44:map_3185",
                true);
    map3185_9_ra0o = map3185_2_ra1o;
    map3185_9_ra1o = r0;
    map3185_9_ra2o = r1;
    goto map3185_9;
  }
  // NormalBlock
  map3185_4: {
    User::Number r0 = map3185_4_ra0o.get_number();
    map3185_4_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:286:10--286:44:NumberAsNat",
                false);
    if (parser_NumberAsNat(p, &map3185_2_ra0o, &map3185_2_ra1o,
                           map3185_4_ra3o, r0)) {
      map3185_2_ra2o = map3185_4_ra1o;
      map3185_2_ra3o = map3185_4_ra2o;
      goto map3185_2;
    } else {
      map3185_4_ra1o.free();
      map3185_4_ra2o.free();
      goto map3185_1;
    }
  }
  // NormalBlock
  map3185_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:286:23--286:44",
               map3185_5_ra0o, r0);
    map3185_5_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  map3185_6: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  map3185_7: {
    switch (map3185_7_ra0o.getTag()) {
      case DDL::Tag::Value::number:
        map3185_4_ra3o = map3185_7_ra1o;
        map3185_4_ra0o = map3185_7_ra0o;
        map3185_4_ra1o = map3185_7_ra2o;
        map3185_4_ra2o = map3185_7_ra3o;
        goto map3185_4;
      default:
        map3185_7_ra0o.free();
        map3185_7_ra2o.free();
        map3185_7_ra3o.free();
        map3185_5_ra0o = map3185_7_ra1o;
        goto map3185_5;
    }
  }
  // NormalBlock
  map3185_8: {
    User::Value r0 = map3185_8_ra0o.value();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:286:23--286:34:ResolveVal",
                false);
    if (parser_ResolveVal(p, &map3185_7_ra0o, &map3185_7_ra1o,
                          map3185_8_ra2o, r0)) {
      map3185_7_ra2o = map3185_8_ra1o;
      map3185_7_ra3o = map3185_8_ra0o;
      goto map3185_7;
    } else {
      map3185_8_ra1o.free();
      map3185_8_ra0o.free();
      goto map3185_6;
    }
  }
  // NormalBlock
  map3185_9: {
    DDL::Bool r0 = map3185_9_ra2o.done();
    if (r0.getValue()) {
      map3185_9_ra2o.free();
      map3185_0_ra1o = map3185_9_ra0o;
      map3185_0_ra0o = map3185_9_ra1o;
      goto map3185_0;
    } else {
      map3185_8_ra2o = map3185_9_ra0o;
      map3185_8_ra0o = map3185_9_ra2o;
      map3185_8_ra1o = map3185_9_ra1o;
      goto map3185_8;
    }
  }
}
bool parser_LookupNats(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Array<DDL::Integer>* _result, DDL::Input* _result_input,
                       DDL::Input a1, DDL::Array<DDL::UInt<8>> a2,
                       DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a3) {
  
// Parameters for L_1_LookupNats2610
  DDL::Builder<DDL::Integer> LookupNats2610_1_ra0o;
  DDL::Input LookupNats2610_1_ra1o;
  
// Parameters for L_3_LookupNats2610
  DDL::Input LookupNats2610_3_ra1o;
  User::Value LookupNats2610_3_ra0o;
  
// Parameters for L_4_LookupNats2610
  DDL::Input LookupNats2610_4_ra0o;
  
// Parameters for L_6_LookupNats2610
  User::Value LookupNats2610_6_ra0o;
  DDL::Input LookupNats2610_6_ra1o;
  
// Parameters for L_7_LookupNats2610
  DDL::Input LookupNats2610_7_ra0o;
  DDL::Array<DDL::UInt<8>> LookupNats2610_7_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LookupNats2610_7_ra2o;
  LookupNats2610_7_ra0o = a1;
  LookupNats2610_7_ra1o = a2;
  LookupNats2610_7_ra2o = a3;
  goto LookupNats2610_7;
  // ReturnBlock (RetNo NoCapture)
  LookupNats2610_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LookupNats2610_1: {
    DDL::Array<DDL::Integer> r0 = DDL::Array<DDL::Integer>(LookupNats2610_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = LookupNats2610_1_ra1o;
    return true;
  }
  // NormalBlock
  LookupNats2610_3: {
    DDL::Array<User::Value> r0 = LookupNats2610_3_ra0o.get_array();
    LookupNats2610_3_ra0o.free();
    DDL::Builder<DDL::Integer> r1;
    DDL::Array<User::Value>::Iterator r2 = DDL::Array<User::Value>::Iterator(r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:285:5--286:44:map_3185",
                false);
    if (parser_map_3185(p, &LookupNats2610_1_ra0o,
                        &LookupNats2610_1_ra1o, LookupNats2610_3_ra1o, r1, r2)) {
      goto LookupNats2610_1;
    } else {
      goto LookupNats2610_0;
    }
  }
  // NormalBlock
  LookupNats2610_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:284:14--284:39",
               LookupNats2610_4_ra0o, r0);
    LookupNats2610_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  LookupNats2610_5: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LookupNats2610_6: {
    switch (LookupNats2610_6_ra0o.getTag()) {
      case DDL::Tag::Value::array:
        LookupNats2610_3_ra1o = LookupNats2610_6_ra1o;
        LookupNats2610_3_ra0o = LookupNats2610_6_ra0o;
        goto LookupNats2610_3;
      default:
        LookupNats2610_6_ra0o.free();
        LookupNats2610_4_ra0o = LookupNats2610_6_ra1o;
        goto LookupNats2610_4;
    }
  }
  // NormalBlock
  LookupNats2610_7: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:284:14--284:30:LookupResolve",
                false);
    if (parser_LookupResolve(p, &LookupNats2610_6_ra0o,
                             &LookupNats2610_6_ra1o, LookupNats2610_7_ra0o,
                             LookupNats2610_7_ra1o, LookupNats2610_7_ra2o)) {
      goto LookupNats2610_6;
    } else {
      goto LookupNats2610_5;
    }
  }
}
bool parser_Many_3190(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many3190
  DDL::Input Many3190_0_ra0o;
  
// Parameters for L_1_Many3190
  DDL::Input Many3190_1_ra0o;
  
// Parameters for L_2_Many3190
  DDL::Bool Many3190_2_ra0u;
  DDL::Input Many3190_2_ra1o;
  
// Parameters for L_5_Many3190
  DDL::Input Many3190_5_ra0o;
  
// Parameters for L_7_Many3190
  DDL::Input Many3190_7_ra0o;
  DDL::Input Many3190_7_ra1o;
  
// Parameters for L_10_Many3190
  DDL::Input Many3190_10_ra0o;
  
// Parameters for L_11_Many3190
  DDL::Input Many3190_11_ra0o;
  DDL::Input Many3190_11_ra1o;
  
// Parameters for L_12_Many3190
  DDL::Bool Many3190_12_ra0u;
  DDL::Input Many3190_12_ra2o;
  DDL::Input Many3190_12_ra1o;
  DDL::Input Many3190_12_ra3o;
  
// Parameters for L_13_Many3190
  DDL::Input Many3190_13_ra2o;
  DDL::Input Many3190_13_ra0o;
  DDL::Input Many3190_13_ra1o;
  
// Parameters for L_14_Many3190
  DDL::Input Many3190_14_ra0o;
  Many3190_14_ra0o = a1;
  goto Many3190_14;
  // NormalBlock
  Many3190_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:41:5--41:18:Many_3190",
                true);
    Many3190_14_ra0o = Many3190_0_ra0o;
    goto Many3190_14;
  }
  // NormalBlock
  Many3190_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many3190_1_ra0o;
    return true;
  }
  // NormalBlock
  Many3190_2: {
    if (Many3190_2_ra0u.getValue()) {
      Many3190_0_ra0o = Many3190_2_ra1o;
      goto Many3190_0;
    } else {
      Many3190_1_ra0o = Many3190_2_ra1o;
      goto Many3190_1;
    }
  }
  // NormalBlock
  Many3190_5: {
    Many3190_2_ra0u = DDL::Bool(false);
    Many3190_2_ra1o = Many3190_5_ra0o;
    goto Many3190_2;
  }
  // NormalBlock
  Many3190_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:41:10--41:18",
               Many3190_7_ra0o, r0);
    Many3190_7_ra0o.free();
    r0.free();
    Many3190_5_ra0o = Many3190_7_ra1o;
    goto Many3190_5;
  }
  // NormalBlock
  Many3190_10: {
    DDL::Input r0 = Many3190_10_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    Many3190_2_ra0u = DDL::Bool(true);
    Many3190_2_ra1o = r0;
    goto Many3190_2;
  }
  // NormalBlock
  Many3190_11: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:41:10--41:18",
               Many3190_11_ra0o, r0);
    Many3190_11_ra0o.free();
    r0.free();
    Many3190_5_ra0o = Many3190_11_ra1o;
    goto Many3190_5;
  }
  // ReturnBlock RetPure
  Many3190_12: {
    if (Many3190_12_ra0u.getValue()) {
      Many3190_12_ra1o.free();
      Many3190_12_ra2o.free();
      Many3190_10_ra0o = Many3190_12_ra3o;
      goto Many3190_10;
    } else {
      Many3190_12_ra3o.free();
      Many3190_11_ra0o = Many3190_12_ra2o;
      Many3190_11_ra1o = Many3190_12_ra1o;
      goto Many3190_11;
    }
  }
  // NormalBlock
  Many3190_13: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Many3190_13_ra0o.iHead());
    Many3190_12_ra0u = parser_z24zsimpleWS(r0);
    Many3190_12_ra2o = Many3190_13_ra2o;
    Many3190_12_ra1o = Many3190_13_ra1o;
    Many3190_12_ra3o = Many3190_13_ra0o;
    goto Many3190_12;
  }
  // NormalBlock
  Many3190_14: {
    DDL::Bool r0 = Many3190_14_ra0o.length() == 0;
    Many3190_14_ra0o.copy();
    Many3190_14_ra0o.copy();
    Many3190_14_ra0o.copy();
    if (r0.getValue()) {
      Many3190_14_ra0o.free();
      Many3190_14_ra0o.free();
      Many3190_7_ra0o = Many3190_14_ra0o;
      Many3190_7_ra1o = Many3190_14_ra0o;
      goto Many3190_7;
    } else {
      Many3190_14_ra0o.free();
      Many3190_13_ra2o = Many3190_14_ra0o;
      Many3190_13_ra0o = Many3190_14_ra0o;
      Many3190_13_ra1o = Many3190_14_ra0o;
      goto Many3190_13;
    }
  }
}
bool parser_WhiteTillEOL_(DDL::ParserStateUser<ReferenceTable> &p,
                          DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_WhiteTillEOL_2611
  DDL::Unit WhiteTillEOL_2611_1_ra0u;
  DDL::Input WhiteTillEOL_2611_1_ra1o;
  
// Parameters for L_2_WhiteTillEOL_2611
  DDL::Input WhiteTillEOL_2611_2_ra0o;
  WhiteTillEOL_2611_2_ra0o = a1;
  goto WhiteTillEOL_2611_2;
  // ReturnBlock (RetNo NoCapture)
  WhiteTillEOL_2611_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  WhiteTillEOL_2611_1: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:42:5--42:7:EOL_",
                true);
    return parser_EOL_(p, _result, _result_input,
                       WhiteTillEOL_2611_1_ra1o);
  }
  // NormalBlock
  WhiteTillEOL_2611_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:41:5--41:18:Many_3190",
                false);
    if (parser_Many_3190(p, &WhiteTillEOL_2611_1_ra0u,
                         &WhiteTillEOL_2611_1_ra1o, WhiteTillEOL_2611_2_ra0o)) {
      goto WhiteTillEOL_2611_1;
    } else {
      goto WhiteTillEOL_2611_0;
    }
  }
}
bool parser_Many_3192(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many3192
  DDL::Input Many3192_0_ra0o;
  
// Parameters for L_1_Many3192
  DDL::Input Many3192_1_ra0o;
  
// Parameters for L_2_Many3192
  DDL::Bool Many3192_2_ra0u;
  DDL::Input Many3192_2_ra1o;
  
// Parameters for L_5_Many3192
  DDL::Input Many3192_5_ra0o;
  
// Parameters for L_7_Many3192
  DDL::Input Many3192_7_ra0o;
  DDL::Input Many3192_7_ra1o;
  
// Parameters for L_10_Many3192
  DDL::Input Many3192_10_ra0o;
  
// Parameters for L_11_Many3192
  DDL::Input Many3192_11_ra0o;
  DDL::Input Many3192_11_ra1o;
  
// Parameters for L_12_Many3192
  DDL::Bool Many3192_12_ra0u;
  DDL::Input Many3192_12_ra2o;
  DDL::Input Many3192_12_ra1o;
  DDL::Input Many3192_12_ra3o;
  
// Parameters for L_13_Many3192
  DDL::Input Many3192_13_ra2o;
  DDL::Input Many3192_13_ra0o;
  DDL::Input Many3192_13_ra1o;
  
// Parameters for L_14_Many3192
  DDL::Input Many3192_14_ra0o;
  Many3192_14_ra0o = a1;
  goto Many3192_14;
  // NormalBlock
  Many3192_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:29:5--29:18:Many_3192",
                true);
    Many3192_14_ra0o = Many3192_0_ra0o;
    goto Many3192_14;
  }
  // NormalBlock
  Many3192_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many3192_1_ra0o;
    return true;
  }
  // NormalBlock
  Many3192_2: {
    if (Many3192_2_ra0u.getValue()) {
      Many3192_0_ra0o = Many3192_2_ra1o;
      goto Many3192_0;
    } else {
      Many3192_1_ra0o = Many3192_2_ra1o;
      goto Many3192_1;
    }
  }
  // NormalBlock
  Many3192_5: {
    Many3192_2_ra0u = DDL::Bool(false);
    Many3192_2_ra1o = Many3192_5_ra0o;
    goto Many3192_2;
  }
  // NormalBlock
  Many3192_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:29:10--29:18",
               Many3192_7_ra0o, r0);
    Many3192_7_ra0o.free();
    r0.free();
    Many3192_5_ra0o = Many3192_7_ra1o;
    goto Many3192_5;
  }
  // NormalBlock
  Many3192_10: {
    DDL::Input r0 = Many3192_10_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    Many3192_2_ra0u = DDL::Bool(true);
    Many3192_2_ra1o = r0;
    goto Many3192_2;
  }
  // NormalBlock
  Many3192_11: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:29:10--29:18",
               Many3192_11_ra0o, r0);
    Many3192_11_ra0o.free();
    r0.free();
    Many3192_5_ra0o = Many3192_11_ra1o;
    goto Many3192_5;
  }
  // ReturnBlock RetPure
  Many3192_12: {
    if (Many3192_12_ra0u.getValue()) {
      Many3192_12_ra1o.free();
      Many3192_12_ra2o.free();
      Many3192_10_ra0o = Many3192_12_ra3o;
      goto Many3192_10;
    } else {
      Many3192_12_ra3o.free();
      Many3192_11_ra0o = Many3192_12_ra2o;
      Many3192_11_ra1o = Many3192_12_ra1o;
      goto Many3192_11;
    }
  }
  // NormalBlock
  Many3192_13: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Many3192_13_ra0o.iHead());
    Many3192_12_ra0u = parser_z24zsimpleWS(r0);
    Many3192_12_ra2o = Many3192_13_ra2o;
    Many3192_12_ra1o = Many3192_13_ra1o;
    Many3192_12_ra3o = Many3192_13_ra0o;
    goto Many3192_12;
  }
  // NormalBlock
  Many3192_14: {
    DDL::Bool r0 = Many3192_14_ra0o.length() == 0;
    Many3192_14_ra0o.copy();
    Many3192_14_ra0o.copy();
    Many3192_14_ra0o.copy();
    if (r0.getValue()) {
      Many3192_14_ra0o.free();
      Many3192_14_ra0o.free();
      Many3192_7_ra0o = Many3192_14_ra0o;
      Many3192_7_ra1o = Many3192_14_ra0o;
      goto Many3192_7;
    } else {
      Many3192_14_ra0o.free();
      Many3192_13_ra2o = Many3192_14_ra0o;
      Many3192_13_ra0o = Many3192_14_ra0o;
      Many3192_13_ra1o = Many3192_14_ra0o;
      goto Many3192_13;
    }
  }
}
bool parser_Many_3194(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many3194
  DDL::Input Many3194_0_ra0o;
  
// Parameters for L_1_Many3194
  DDL::Input Many3194_1_ra0o;
  
// Parameters for L_2_Many3194
  DDL::Bool Many3194_2_ra0u;
  DDL::Input Many3194_2_ra1o;
  
// Parameters for L_5_Many3194
  DDL::Input Many3194_5_ra0o;
  
// Parameters for L_7_Many3194
  DDL::Input Many3194_7_ra0o;
  DDL::Input Many3194_7_ra1o;
  
// Parameters for L_10_Many3194
  DDL::Input Many3194_10_ra0o;
  
// Parameters for L_11_Many3194
  DDL::Input Many3194_11_ra0o;
  DDL::Input Many3194_11_ra1o;
  
// Parameters for L_12_Many3194
  DDL::Bool Many3194_12_ra0u;
  DDL::Input Many3194_12_ra2o;
  DDL::Input Many3194_12_ra1o;
  DDL::Input Many3194_12_ra3o;
  
// Parameters for L_13_Many3194
  DDL::Input Many3194_13_ra2o;
  DDL::Input Many3194_13_ra0o;
  DDL::Input Many3194_13_ra1o;
  
// Parameters for L_14_Many3194
  DDL::Input Many3194_14_ra0o;
  Many3194_14_ra0o = a1;
  goto Many3194_14;
  // NormalBlock
  Many3194_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:30:5--30:18:Many_3194",
                true);
    Many3194_14_ra0o = Many3194_0_ra0o;
    goto Many3194_14;
  }
  // NormalBlock
  Many3194_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many3194_1_ra0o;
    return true;
  }
  // NormalBlock
  Many3194_2: {
    if (Many3194_2_ra0u.getValue()) {
      Many3194_0_ra0o = Many3194_2_ra1o;
      goto Many3194_0;
    } else {
      Many3194_1_ra0o = Many3194_2_ra1o;
      goto Many3194_1;
    }
  }
  // NormalBlock
  Many3194_5: {
    Many3194_2_ra0u = DDL::Bool(false);
    Many3194_2_ra1o = Many3194_5_ra0o;
    goto Many3194_2;
  }
  // NormalBlock
  Many3194_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:30:10--30:18",
               Many3194_7_ra0o, r0);
    Many3194_7_ra0o.free();
    r0.free();
    Many3194_5_ra0o = Many3194_7_ra1o;
    goto Many3194_5;
  }
  // NormalBlock
  Many3194_10: {
    DDL::Input r0 = Many3194_10_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    Many3194_2_ra0u = DDL::Bool(true);
    Many3194_2_ra1o = r0;
    goto Many3194_2;
  }
  // NormalBlock
  Many3194_11: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:30:10--30:18",
               Many3194_11_ra0o, r0);
    Many3194_11_ra0o.free();
    r0.free();
    Many3194_5_ra0o = Many3194_11_ra1o;
    goto Many3194_5;
  }
  // ReturnBlock RetPure
  Many3194_12: {
    if (Many3194_12_ra0u.getValue()) {
      Many3194_12_ra1o.free();
      Many3194_12_ra2o.free();
      Many3194_10_ra0o = Many3194_12_ra3o;
      goto Many3194_10;
    } else {
      Many3194_12_ra3o.free();
      Many3194_11_ra0o = Many3194_12_ra2o;
      Many3194_11_ra1o = Many3194_12_ra1o;
      goto Many3194_11;
    }
  }
  // NormalBlock
  Many3194_13: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Many3194_13_ra0o.iHead());
    Many3194_12_ra0u = parser_z24zsimpleWS(r0);
    Many3194_12_ra2o = Many3194_13_ra2o;
    Many3194_12_ra1o = Many3194_13_ra1o;
    Many3194_12_ra3o = Many3194_13_ra0o;
    goto Many3194_12;
  }
  // NormalBlock
  Many3194_14: {
    DDL::Bool r0 = Many3194_14_ra0o.length() == 0;
    Many3194_14_ra0o.copy();
    Many3194_14_ra0o.copy();
    Many3194_14_ra0o.copy();
    if (r0.getValue()) {
      Many3194_14_ra0o.free();
      Many3194_14_ra0o.free();
      Many3194_7_ra0o = Many3194_14_ra0o;
      Many3194_7_ra1o = Many3194_14_ra0o;
      goto Many3194_7;
    } else {
      Many3194_14_ra0o.free();
      Many3194_13_ra2o = Many3194_14_ra0o;
      Many3194_13_ra0o = Many3194_14_ra0o;
      Many3194_13_ra1o = Many3194_14_ra0o;
      goto Many3194_13;
    }
  }
}
bool parser_Many_3200(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many3200
  DDL::Input Many3200_0_ra0o;
  
// Parameters for L_1_Many3200
  DDL::Input Many3200_1_ra0o;
  
// Parameters for L_2_Many3200
  DDL::Bool Many3200_2_ra0u;
  DDL::Input Many3200_2_ra1o;
  
// Parameters for L_5_Many3200
  DDL::Input Many3200_5_ra0o;
  
// Parameters for L_7_Many3200
  DDL::Input Many3200_7_ra0o;
  DDL::Input Many3200_7_ra1o;
  
// Parameters for L_10_Many3200
  DDL::Input Many3200_10_ra0o;
  
// Parameters for L_11_Many3200
  DDL::Input Many3200_11_ra0o;
  DDL::Input Many3200_11_ra1o;
  
// Parameters for L_12_Many3200
  DDL::Bool Many3200_12_ra0u;
  DDL::Input Many3200_12_ra2o;
  DDL::Input Many3200_12_ra1o;
  DDL::Input Many3200_12_ra3o;
  
// Parameters for L_13_Many3200
  DDL::Input Many3200_13_ra2o;
  DDL::Input Many3200_13_ra0o;
  DDL::Input Many3200_13_ra1o;
  
// Parameters for L_14_Many3200
  DDL::Input Many3200_14_ra0o;
  Many3200_14_ra0o = a1;
  goto Many3200_14;
  // NormalBlock
  Many3200_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:31:5--31:18:Many_3200",
                true);
    Many3200_14_ra0o = Many3200_0_ra0o;
    goto Many3200_14;
  }
  // NormalBlock
  Many3200_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many3200_1_ra0o;
    return true;
  }
  // NormalBlock
  Many3200_2: {
    if (Many3200_2_ra0u.getValue()) {
      Many3200_0_ra0o = Many3200_2_ra1o;
      goto Many3200_0;
    } else {
      Many3200_1_ra0o = Many3200_2_ra1o;
      goto Many3200_1;
    }
  }
  // NormalBlock
  Many3200_5: {
    Many3200_2_ra0u = DDL::Bool(false);
    Many3200_2_ra1o = Many3200_5_ra0o;
    goto Many3200_2;
  }
  // NormalBlock
  Many3200_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:31:10--31:18",
               Many3200_7_ra0o, r0);
    Many3200_7_ra0o.free();
    r0.free();
    Many3200_5_ra0o = Many3200_7_ra1o;
    goto Many3200_5;
  }
  // NormalBlock
  Many3200_10: {
    DDL::Input r0 = Many3200_10_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    Many3200_2_ra0u = DDL::Bool(true);
    Many3200_2_ra1o = r0;
    goto Many3200_2;
  }
  // NormalBlock
  Many3200_11: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:31:10--31:18",
               Many3200_11_ra0o, r0);
    Many3200_11_ra0o.free();
    r0.free();
    Many3200_5_ra0o = Many3200_11_ra1o;
    goto Many3200_5;
  }
  // ReturnBlock RetPure
  Many3200_12: {
    if (Many3200_12_ra0u.getValue()) {
      Many3200_12_ra1o.free();
      Many3200_12_ra2o.free();
      Many3200_10_ra0o = Many3200_12_ra3o;
      goto Many3200_10;
    } else {
      Many3200_12_ra3o.free();
      Many3200_11_ra0o = Many3200_12_ra2o;
      Many3200_11_ra1o = Many3200_12_ra1o;
      goto Many3200_11;
    }
  }
  // NormalBlock
  Many3200_13: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Many3200_13_ra0o.iHead());
    Many3200_12_ra0u = parser_z24zsimpleWS(r0);
    Many3200_12_ra2o = Many3200_13_ra2o;
    Many3200_12_ra1o = Many3200_13_ra1o;
    Many3200_12_ra3o = Many3200_13_ra0o;
    goto Many3200_12;
  }
  // NormalBlock
  Many3200_14: {
    DDL::Bool r0 = Many3200_14_ra0o.length() == 0;
    Many3200_14_ra0o.copy();
    Many3200_14_ra0o.copy();
    Many3200_14_ra0o.copy();
    if (r0.getValue()) {
      Many3200_14_ra0o.free();
      Many3200_14_ra0o.free();
      Many3200_7_ra0o = Many3200_14_ra0o;
      Many3200_7_ra1o = Many3200_14_ra0o;
      goto Many3200_7;
    } else {
      Many3200_14_ra0o.free();
      Many3200_13_ra2o = Many3200_14_ra0o;
      Many3200_13_ra0o = Many3200_14_ra0o;
      Many3200_13_ra1o = Many3200_14_ra0o;
      goto Many3200_13;
    }
  }
}
bool parser_PdfEnd(DDL::ParserStateUser<ReferenceTable> &p,
                   DDL::UInt<64>* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_PdfEnd2612
  DDL::Array<DDL::UInt<8>> PdfEnd2612_1_ra0o;
  DDL::Input PdfEnd2612_1_ra1o;
  DDL::UInt<64> PdfEnd2612_1_ra2u;
  
// Parameters for L_2_PdfEnd2612
  DDL::Input PdfEnd2612_2_ra0o;
  
// Parameters for L_4_PdfEnd2612
  DDL::Unit PdfEnd2612_4_ra0u;
  DDL::Input PdfEnd2612_4_ra1o;
  DDL::UInt<64> PdfEnd2612_4_ra2u;
  
// Parameters for L_6_PdfEnd2612
  DDL::Unit PdfEnd2612_6_ra0u;
  DDL::Input PdfEnd2612_6_ra1o;
  DDL::UInt<64> PdfEnd2612_6_ra2u;
  
// Parameters for L_8_PdfEnd2612
  DDL::Input PdfEnd2612_8_ra1o;
  DDL::Integer PdfEnd2612_8_ra0o;
  
// Parameters for L_9_PdfEnd2612
  DDL::Input PdfEnd2612_9_ra0o;
  
// Parameters for L_10_PdfEnd2612
  DDL::Input PdfEnd2612_10_ra1o;
  DDL::Bool PdfEnd2612_10_ra0u;
  DDL::Integer PdfEnd2612_10_ra2o;
  
// Parameters for L_11_PdfEnd2612
  DDL::Input PdfEnd2612_11_ra1o;
  DDL::Integer PdfEnd2612_11_ra0o;
  
// Parameters for L_12_PdfEnd2612
  DDL::Input PdfEnd2612_12_ra1o;
  DDL::Integer PdfEnd2612_12_ra0o;
  
// Parameters for L_14_PdfEnd2612
  DDL::Integer PdfEnd2612_14_ra0o;
  DDL::Input PdfEnd2612_14_ra1o;
  
// Parameters for L_16_PdfEnd2612
  DDL::Unit PdfEnd2612_16_ra0u;
  DDL::Input PdfEnd2612_16_ra1o;
  
// Parameters for L_18_PdfEnd2612
  DDL::Unit PdfEnd2612_18_ra0u;
  DDL::Input PdfEnd2612_18_ra1o;
  
// Parameters for L_20_PdfEnd2612
  DDL::Array<DDL::UInt<8>> PdfEnd2612_20_ra0o;
  DDL::Input PdfEnd2612_20_ra1o;
  
// Parameters for L_21_PdfEnd2612
  DDL::Input PdfEnd2612_21_ra0o;
  
// Parameters for L_23_PdfEnd2612
  DDL::Unit PdfEnd2612_23_ra0u;
  DDL::Input PdfEnd2612_23_ra1o;
  
// Parameters for L_24_PdfEnd2612
  DDL::Input PdfEnd2612_24_ra0o;
  PdfEnd2612_24_ra0o = a1;
  goto PdfEnd2612_24;
  // NormalBlock
  PdfEnd2612_1: {
    DDL::UInt<64> r0 = DDL::UInt<64>{PdfEnd2612_1_ra0o.size().rep()};
    PdfEnd2612_1_ra0o.free();
    DDL::Input r1 = PdfEnd2612_1_ra1o.iDrop(DDL::Size::from(r0.rep()));
    p.popDebug();
    *_result = PdfEnd2612_1_ra2u;
    *_result_input = r1;
    return true;
  }
  // NormalBlock
  PdfEnd2612_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(37UL),
                                                           DDL::UInt<8>(37UL), DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(79UL), DDL::UInt<8>(70UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:31:21--31:33",
               PdfEnd2612_2_ra0o, r3);
    PdfEnd2612_2_ra0o.free();
    r3.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  PdfEnd2612_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  PdfEnd2612_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(37UL),
                                                           DDL::UInt<8>(37UL), DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(79UL), DDL::UInt<8>(70UL)};
    DDL::Bool r1 = PdfEnd2612_4_ra1o.hasPrefix(r0);
    if (r1.getValue()) {
      PdfEnd2612_1_ra0o = r0;
      PdfEnd2612_1_ra1o = PdfEnd2612_4_ra1o;
      PdfEnd2612_1_ra2u = PdfEnd2612_4_ra2u;
      goto PdfEnd2612_1;
    } else {
      r0.free();
      PdfEnd2612_2_ra0o = PdfEnd2612_4_ra1o;
      goto PdfEnd2612_2;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  PdfEnd2612_5: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  PdfEnd2612_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:31:5--31:18:Many_3200",
                false);
    if (parser_Many_3200(p, &PdfEnd2612_4_ra0u, &PdfEnd2612_4_ra1o,
                         PdfEnd2612_6_ra1o)) {
      PdfEnd2612_4_ra2u = PdfEnd2612_6_ra2u;
      goto PdfEnd2612_4;
    } else {
      goto PdfEnd2612_3;
    }
  }
  // NormalBlock
  PdfEnd2612_8: {
    DDL::UInt<64> r0 = DDL::integer_to_uint<64>(PdfEnd2612_8_ra0o);
    PdfEnd2612_8_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:30:47--30:58:WhiteTillEOL_",
                false);
    if (parser_WhiteTillEOL_(p, &PdfEnd2612_6_ra0u, &PdfEnd2612_6_ra1o,
                             PdfEnd2612_8_ra1o)) {
      PdfEnd2612_6_ra2u = r0;
      goto PdfEnd2612_6;
    } else {
      goto PdfEnd2612_5;
    }
  }
  // NormalBlock
  PdfEnd2612_9: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(118UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:30:26--30:44",
               PdfEnd2612_9_ra0o, r0);
    PdfEnd2612_9_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  PdfEnd2612_10: {
    if (PdfEnd2612_10_ra0u.getValue()) {
      PdfEnd2612_8_ra1o = PdfEnd2612_10_ra1o;
      PdfEnd2612_8_ra0o = PdfEnd2612_10_ra2o;
      goto PdfEnd2612_8;
    } else {
      PdfEnd2612_10_ra2o.free();
      PdfEnd2612_9_ra0o = PdfEnd2612_10_ra1o;
      goto PdfEnd2612_9;
    }
  }
  // NormalBlock
  PdfEnd2612_11: {
    DDL::Integer r0 = DDL::Integer("18446744073709551615");
    DDL::Bool r1 = DDL::Bool{PdfEnd2612_11_ra0o <= r0};
    r0.free();
    PdfEnd2612_10_ra1o = PdfEnd2612_11_ra1o;
    PdfEnd2612_10_ra0u = r1;
    PdfEnd2612_10_ra2o = PdfEnd2612_11_ra0o;
    goto PdfEnd2612_10;
  }
  // NormalBlock
  PdfEnd2612_12: {
    PdfEnd2612_10_ra1o = PdfEnd2612_12_ra1o;
    PdfEnd2612_10_ra0u = DDL::Bool(false);
    PdfEnd2612_10_ra2o = PdfEnd2612_12_ra0o;
    goto PdfEnd2612_10;
  }
  // ReturnBlock (RetNo NoCapture)
  PdfEnd2612_13: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  PdfEnd2612_14: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Bool r1 = DDL::Bool{r0 <= PdfEnd2612_14_ra0o};
    r0.free();
    if (r1.getValue()) {
      PdfEnd2612_11_ra1o = PdfEnd2612_14_ra1o;
      PdfEnd2612_11_ra0o = PdfEnd2612_14_ra0o;
      goto PdfEnd2612_11;
    } else {
      PdfEnd2612_12_ra1o = PdfEnd2612_14_ra1o;
      PdfEnd2612_12_ra0o = PdfEnd2612_14_ra0o;
      goto PdfEnd2612_12;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  PdfEnd2612_15: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  PdfEnd2612_16: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:30:26--30:32:Natural",
                false);
    if (parser_Natural(p, &PdfEnd2612_14_ra0o, &PdfEnd2612_14_ra1o,
                       PdfEnd2612_16_ra1o)) {
      goto PdfEnd2612_14;
    } else {
      goto PdfEnd2612_13;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  PdfEnd2612_17: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  PdfEnd2612_18: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:30:5--30:18:Many_3194",
                false);
    if (parser_Many_3194(p, &PdfEnd2612_16_ra0u, &PdfEnd2612_16_ra1o,
                         PdfEnd2612_18_ra1o)) {
      goto PdfEnd2612_16;
    } else {
      goto PdfEnd2612_15;
    }
  }
  // NormalBlock
  PdfEnd2612_20: {
    DDL::UInt<64> r0 = DDL::UInt<64>{PdfEnd2612_20_ra0o.size().rep()};
    PdfEnd2612_20_ra0o.free();
    DDL::Input r1 = PdfEnd2612_20_ra1o.iDrop(DDL::Size::from(r0.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:29:47--29:58:WhiteTillEOL_",
                false);
    if (parser_WhiteTillEOL_(p, &PdfEnd2612_18_ra0u,
                             &PdfEnd2612_18_ra1o, r1)) {
      goto PdfEnd2612_18;
    } else {
      goto PdfEnd2612_17;
    }
  }
  // NormalBlock
  PdfEnd2612_21: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(102UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:29:21--29:37",
               PdfEnd2612_21_ra0o, r3);
    PdfEnd2612_21_ra0o.free();
    r3.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  PdfEnd2612_22: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  PdfEnd2612_23: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(102UL)};
    DDL::Bool r1 = PdfEnd2612_23_ra1o.hasPrefix(r0);
    if (r1.getValue()) {
      PdfEnd2612_20_ra0o = r0;
      PdfEnd2612_20_ra1o = PdfEnd2612_23_ra1o;
      goto PdfEnd2612_20;
    } else {
      r0.free();
      PdfEnd2612_21_ra0o = PdfEnd2612_23_ra1o;
      goto PdfEnd2612_21;
    }
  }
  // NormalBlock
  PdfEnd2612_24: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:29:5--29:18:Many_3192",
                false);
    if (parser_Many_3192(p, &PdfEnd2612_23_ra0u, &PdfEnd2612_23_ra1o,
                         PdfEnd2612_24_ra0o)) {
      goto PdfEnd2612_23;
    } else {
      goto PdfEnd2612_22;
    }
  }
}
bool parser_UsedEntry(DDL::ParserStateUser<ReferenceTable> &p,
                      User::UsedEntry* _result, DDL::Input* _result_input, DDL::Input a1,
                      DDL::Integer a2, DDL::Integer a3) {
  
// Parameters for L_1_UsedEntry2613
  DDL::Input UsedEntry2613_1_ra0o;
  
// Parameters for L_3_UsedEntry2613
  DDL::Input UsedEntry2613_3_ra0o;
  DDL::Integer UsedEntry2613_3_ra1o;
  DDL::Integer UsedEntry2613_3_ra2o;
  
// Parameters for L_4_UsedEntry2613
  DDL::Input UsedEntry2613_4_ra0o;
  
// Parameters for L_5_UsedEntry2613
  DDL::Input UsedEntry2613_5_ra1o;
  DDL::Input UsedEntry2613_5_ra0o;
  DDL::Integer UsedEntry2613_5_ra2o;
  DDL::Integer UsedEntry2613_5_ra3o;
  
// Parameters for L_6_UsedEntry2613
  DDL::Input UsedEntry2613_6_ra0o;
  DDL::Integer UsedEntry2613_6_ra1o;
  DDL::Integer UsedEntry2613_6_ra2o;
  UsedEntry2613_6_ra0o = a1;
  UsedEntry2613_6_ra1o = a2;
  UsedEntry2613_6_ra2o = a3;
  goto UsedEntry2613_6;
  // NormalBlock
  UsedEntry2613_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:83:5--83:10",
               UsedEntry2613_1_ra0o, r0);
    UsedEntry2613_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  UsedEntry2613_3: {
    DDL::Input r0 = UsedEntry2613_3_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    User::UsedEntry r1;
    r1.init(UsedEntry2613_3_ra1o, UsedEntry2613_3_ra2o);
    p.popDebug();
    *_result = r1;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  UsedEntry2613_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:83:5--83:10",
               UsedEntry2613_4_ra0o, r0);
    UsedEntry2613_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  UsedEntry2613_5: {
    DDL::UInt<8> r0 = DDL::UInt<8>(UsedEntry2613_5_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(110)} == r0};
    if (r1.getValue()) {
      UsedEntry2613_5_ra1o.free();
      UsedEntry2613_3_ra0o = UsedEntry2613_5_ra0o;
      UsedEntry2613_3_ra1o = UsedEntry2613_5_ra2o;
      UsedEntry2613_3_ra2o = UsedEntry2613_5_ra3o;
      goto UsedEntry2613_3;
    } else {
      UsedEntry2613_5_ra0o.free();
      UsedEntry2613_5_ra2o.free();
      UsedEntry2613_5_ra3o.free();
      UsedEntry2613_4_ra0o = UsedEntry2613_5_ra1o;
      goto UsedEntry2613_4;
    }
  }
  // NormalBlock
  UsedEntry2613_6: {
    DDL::Bool r0 = UsedEntry2613_6_ra0o.length() == 0;
    UsedEntry2613_6_ra0o.copy();
    if (r0.getValue()) {
      UsedEntry2613_6_ra1o.free();
      UsedEntry2613_6_ra2o.free();
      UsedEntry2613_6_ra0o.free();
      UsedEntry2613_1_ra0o = UsedEntry2613_6_ra0o;
      goto UsedEntry2613_1;
    } else {
      UsedEntry2613_5_ra1o = UsedEntry2613_6_ra0o;
      UsedEntry2613_5_ra0o = UsedEntry2613_6_ra0o;
      UsedEntry2613_5_ra2o = UsedEntry2613_6_ra1o;
      UsedEntry2613_5_ra3o = UsedEntry2613_6_ra2o;
      goto UsedEntry2613_5;
    }
  }
}
bool parser_FreeEntry(DDL::ParserStateUser<ReferenceTable> &p,
                      User::FreeEntry* _result, DDL::Input* _result_input, DDL::Input a1,
                      DDL::Integer a2, DDL::Integer a3) {
  
// Parameters for L_1_FreeEntry2614
  DDL::Input FreeEntry2614_1_ra0o;
  
// Parameters for L_3_FreeEntry2614
  DDL::Input FreeEntry2614_3_ra0o;
  DDL::Integer FreeEntry2614_3_ra1o;
  DDL::Integer FreeEntry2614_3_ra2o;
  
// Parameters for L_4_FreeEntry2614
  DDL::Input FreeEntry2614_4_ra0o;
  
// Parameters for L_5_FreeEntry2614
  DDL::Input FreeEntry2614_5_ra1o;
  DDL::Input FreeEntry2614_5_ra0o;
  DDL::Integer FreeEntry2614_5_ra2o;
  DDL::Integer FreeEntry2614_5_ra3o;
  
// Parameters for L_6_FreeEntry2614
  DDL::Input FreeEntry2614_6_ra0o;
  DDL::Integer FreeEntry2614_6_ra1o;
  DDL::Integer FreeEntry2614_6_ra2o;
  FreeEntry2614_6_ra0o = a1;
  FreeEntry2614_6_ra1o = a2;
  FreeEntry2614_6_ra2o = a3;
  goto FreeEntry2614_6;
  // NormalBlock
  FreeEntry2614_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:89:5--89:10",
               FreeEntry2614_1_ra0o, r0);
    FreeEntry2614_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  FreeEntry2614_3: {
    DDL::Input r0 = FreeEntry2614_3_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    User::FreeEntry r1;
    r1.init(FreeEntry2614_3_ra1o, FreeEntry2614_3_ra2o);
    p.popDebug();
    *_result = r1;
    *_result_input = r0;
    return true;
  }
  // NormalBlock
  FreeEntry2614_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:89:5--89:10",
               FreeEntry2614_4_ra0o, r0);
    FreeEntry2614_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  FreeEntry2614_5: {
    DDL::UInt<8> r0 = DDL::UInt<8>(FreeEntry2614_5_ra0o.iHead());
    DDL::Bool r1 = DDL::Bool{DDL::UInt<8>{UINT8_C(102)} == r0};
    if (r1.getValue()) {
      FreeEntry2614_5_ra1o.free();
      FreeEntry2614_3_ra0o = FreeEntry2614_5_ra0o;
      FreeEntry2614_3_ra1o = FreeEntry2614_5_ra2o;
      FreeEntry2614_3_ra2o = FreeEntry2614_5_ra3o;
      goto FreeEntry2614_3;
    } else {
      FreeEntry2614_5_ra0o.free();
      FreeEntry2614_5_ra2o.free();
      FreeEntry2614_5_ra3o.free();
      FreeEntry2614_4_ra0o = FreeEntry2614_5_ra1o;
      goto FreeEntry2614_4;
    }
  }
  // NormalBlock
  FreeEntry2614_6: {
    DDL::Bool r0 = FreeEntry2614_6_ra0o.length() == 0;
    FreeEntry2614_6_ra0o.copy();
    if (r0.getValue()) {
      FreeEntry2614_6_ra1o.free();
      FreeEntry2614_6_ra2o.free();
      FreeEntry2614_6_ra0o.free();
      FreeEntry2614_1_ra0o = FreeEntry2614_6_ra0o;
      goto FreeEntry2614_1;
    } else {
      FreeEntry2614_5_ra1o = FreeEntry2614_6_ra0o;
      FreeEntry2614_5_ra0o = FreeEntry2614_6_ra0o;
      FreeEntry2614_5_ra2o = FreeEntry2614_6_ra1o;
      FreeEntry2614_5_ra3o = FreeEntry2614_6_ra2o;
      goto FreeEntry2614_5;
    }
  }
}
bool parser_Many_3212(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::Integer>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::UInt<64> a2, DDL::Builder<DDL::Integer> a3,
                      DDL::UInt<64> a4) {
  
// Parameters for L_1_Many3212
  DDL::Input Many3212_1_ra0o;
  
// Parameters for L_2_Many3212
  DDL::Integer Many3212_2_ra0o;
  DDL::Input Many3212_2_ra1o;
  DDL::UInt<64> Many3212_2_ra2u;
  DDL::Builder<DDL::Integer> Many3212_2_ra3o;
  DDL::UInt<64> Many3212_2_ra4u;
  
// Parameters for L_3_Many3212
  DDL::Input Many3212_3_ra0o;
  DDL::UInt<64> Many3212_3_ra1u;
  DDL::Builder<DDL::Integer> Many3212_3_ra2o;
  DDL::UInt<64> Many3212_3_ra3u;
  
// Parameters for L_4_Many3212
  DDL::Input Many3212_4_ra1o;
  DDL::Builder<DDL::Integer> Many3212_4_ra0o;
  
// Parameters for L_5_Many3212
  DDL::Input Many3212_5_ra0o;
  DDL::UInt<64> Many3212_5_ra1u;
  DDL::Builder<DDL::Integer> Many3212_5_ra2o;
  DDL::UInt<64> Many3212_5_ra3u;
  Many3212_5_ra0o = a1;
  Many3212_5_ra1u = a2;
  Many3212_5_ra2o = a3;
  Many3212_5_ra3u = a4;
  goto Many3212_5;
  // ReturnBlock (RetNo NoCapture)
  Many3212_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many3212_1_ra0o, r0);
    Many3212_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Many3212_2: {
    DDL::UInt<64> r0 = Many3212_2_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<DDL::Integer> r1 = DDL::Builder<DDL::Integer>(Many3212_2_ra3o,
                                                               Many3212_2_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:93:26--93:37:Many_3212",
                true);
    Many3212_5_ra0o = Many3212_2_ra1o;
    Many3212_5_ra1u = r0;
    Many3212_5_ra2o = r1;
    Many3212_5_ra3u = Many3212_2_ra4u;
    goto Many3212_5;
  }
  // NormalBlock
  Many3212_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:93:33--93:37:Digit",
                false);
    Many3212_3_ra0o.copy();
    if (parser_Digit(p, &Many3212_2_ra0o, &Many3212_2_ra1o,
                     Many3212_3_ra0o)) {
      Many3212_3_ra0o.free();
      Many3212_2_ra2u = Many3212_3_ra1u;
      Many3212_2_ra3o = Many3212_3_ra2o;
      Many3212_2_ra4u = Many3212_3_ra3u;
      goto Many3212_2;
    } else {
      Many3212_3_ra2o.free();
      Many3212_1_ra0o = Many3212_3_ra0o;
      goto Many3212_1;
    }
  }
  // NormalBlock
  Many3212_4: {
    p.popDebug();
    *_result = Many3212_4_ra0o;
    *_result_input = Many3212_4_ra1o;
    return true;
  }
  // NormalBlock
  Many3212_5: {
    DDL::Bool r0 = DDL::Bool{Many3212_5_ra1u < Many3212_5_ra3u};
    if (r0.getValue()) {
      Many3212_3_ra0o = Many3212_5_ra0o;
      Many3212_3_ra1u = Many3212_5_ra1u;
      Many3212_3_ra2o = Many3212_5_ra2o;
      Many3212_3_ra3u = Many3212_5_ra3u;
      goto Many3212_3;
    } else {
      Many3212_4_ra1o = Many3212_5_ra0o;
      Many3212_4_ra0o = Many3212_5_ra2o;
      goto Many3212_4;
    }
  }
}
bool parser_NatN(DDL::ParserStateUser<ReferenceTable> &p,
                 DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                 DDL::UInt<64> a2) {
  
// Parameters for L_0_NatN2615
  DDL::Integer NatN2615_0_ra0o;
  DDL::Input NatN2615_0_ra1o;
  
// Parameters for L_2_NatN2615
  DDL::Builder<DDL::Integer> NatN2615_2_ra0o;
  DDL::Input NatN2615_2_ra1o;
  
// Parameters for L_3_NatN2615
  DDL::Input NatN2615_3_ra0o;
  DDL::UInt<64> NatN2615_3_ra1u;
  NatN2615_3_ra0o = a1;
  NatN2615_3_ra1u = a2;
  goto NatN2615_3;
  // ReturnBlock RetPure
  NatN2615_0: {
    p.popDebug();
    *_result = NatN2615_0_ra0o;
    *_result_input = NatN2615_0_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  NatN2615_1: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  NatN2615_2: {
    DDL::Array<DDL::Integer> r0 = DDL::Array<DDL::Integer>(NatN2615_2_ra0o);
    DDL::Integer r1 = DDL::Integer("10");
    NatN2615_0_ra0o = parser_numBase_2507(r1, r0);
    NatN2615_0_ra1o = NatN2615_2_ra1o;
    goto NatN2615_0;
  }
  // NormalBlock
  NatN2615_3: {
    DDL::Builder<DDL::Integer> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:93:26--93:37:Many_3212",
                false);
    if (parser_Many_3212(p, &NatN2615_2_ra0o, &NatN2615_2_ra1o,
                         NatN2615_3_ra0o, DDL::UInt<64>{UINT64_C(0)}, r0,
                         NatN2615_3_ra1u)) {
      goto NatN2615_2;
    } else {
      goto NatN2615_1;
    }
  }
}
bool parser_CrossRefEntry(DDL::ParserStateUser<ReferenceTable> &p,
                          User::CrossRefEntry* _result, DDL::Input* _result_input,
                          DDL::Input a1) {
  
// Parameters for L_0_CrossRefEntry2616
  DDL::Unit CrossRefEntry2616_0_ra0u;
  DDL::Input CrossRefEntry2616_0_ra2o;
  User::CrossRefEntry CrossRefEntry2616_0_ra1o;
  
// Parameters for L_1_CrossRefEntry2616
  DDL::Unit CrossRefEntry2616_1_ra0u;
  DDL::Input CrossRefEntry2616_1_ra2o;
  User::CrossRefEntry CrossRefEntry2616_1_ra1o;
  
// Parameters for L_2_CrossRefEntry2616
  DDL::Unit CrossRefEntry2616_2_ra0u;
  DDL::Input CrossRefEntry2616_2_ra2o;
  User::CrossRefEntry CrossRefEntry2616_2_ra1o;
  
// Parameters for L_3_CrossRefEntry2616
  DDL::Unit CrossRefEntry2616_3_ra0u;
  DDL::Input CrossRefEntry2616_3_ra2o;
  User::CrossRefEntry CrossRefEntry2616_3_ra1o;
  
// Parameters for L_5_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_5_ra0o;
  
// Parameters for L_7_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_7_ra0o;
  User::CrossRefEntry CrossRefEntry2616_7_ra1o;
  
// Parameters for L_8_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_8_ra0o;
  
// Parameters for L_9_CrossRefEntry2616
  DDL::Bool CrossRefEntry2616_9_ra0u;
  DDL::Input CrossRefEntry2616_9_ra1o;
  DDL::Input CrossRefEntry2616_9_ra2o;
  User::CrossRefEntry CrossRefEntry2616_9_ra3o;
  
// Parameters for L_10_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_10_ra2o;
  DDL::Input CrossRefEntry2616_10_ra0o;
  User::CrossRefEntry CrossRefEntry2616_10_ra1o;
  
// Parameters for L_12_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_12_ra0o;
  User::CrossRefEntry CrossRefEntry2616_12_ra1o;
  
// Parameters for L_14_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_14_ra0o;
  DDL::Input CrossRefEntry2616_14_ra1o;
  User::CrossRefEntry CrossRefEntry2616_14_ra2o;
  
// Parameters for L_17_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_17_ra0o;
  User::CrossRefEntry CrossRefEntry2616_17_ra1o;
  
// Parameters for L_18_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_18_ra0o;
  DDL::Input CrossRefEntry2616_18_ra1o;
  User::CrossRefEntry CrossRefEntry2616_18_ra2o;
  
// Parameters for L_19_CrossRefEntry2616
  DDL::Bool CrossRefEntry2616_19_ra0u;
  DDL::Input CrossRefEntry2616_19_ra3o;
  DDL::Input CrossRefEntry2616_19_ra1o;
  User::CrossRefEntry CrossRefEntry2616_19_ra2o;
  DDL::Input CrossRefEntry2616_19_ra4o;
  
// Parameters for L_20_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_20_ra3o;
  DDL::Input CrossRefEntry2616_20_ra0o;
  DDL::Input CrossRefEntry2616_20_ra1o;
  User::CrossRefEntry CrossRefEntry2616_20_ra2o;
  
// Parameters for L_21_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_21_ra0o;
  User::CrossRefEntry CrossRefEntry2616_21_ra1o;
  
// Parameters for L_23_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_23_ra0o;
  User::CrossRefEntry CrossRefEntry2616_23_ra1o;
  
// Parameters for L_25_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_25_ra0o;
  DDL::Input CrossRefEntry2616_25_ra1o;
  User::CrossRefEntry CrossRefEntry2616_25_ra2o;
  
// Parameters for L_28_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_28_ra0o;
  User::CrossRefEntry CrossRefEntry2616_28_ra1o;
  
// Parameters for L_29_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_29_ra0o;
  DDL::Input CrossRefEntry2616_29_ra1o;
  User::CrossRefEntry CrossRefEntry2616_29_ra2o;
  
// Parameters for L_30_CrossRefEntry2616
  DDL::Bool CrossRefEntry2616_30_ra0u;
  DDL::Input CrossRefEntry2616_30_ra3o;
  DDL::Input CrossRefEntry2616_30_ra1o;
  User::CrossRefEntry CrossRefEntry2616_30_ra2o;
  DDL::Input CrossRefEntry2616_30_ra4o;
  
// Parameters for L_31_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_31_ra3o;
  DDL::Input CrossRefEntry2616_31_ra0o;
  DDL::Input CrossRefEntry2616_31_ra1o;
  User::CrossRefEntry CrossRefEntry2616_31_ra2o;
  
// Parameters for L_33_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_33_ra0o;
  User::CrossRefEntry CrossRefEntry2616_33_ra1o;
  
// Parameters for L_35_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_35_ra0o;
  DDL::Input CrossRefEntry2616_35_ra1o;
  User::CrossRefEntry CrossRefEntry2616_35_ra2o;
  
// Parameters for L_38_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_38_ra0o;
  DDL::Input CrossRefEntry2616_38_ra1o;
  User::CrossRefEntry CrossRefEntry2616_38_ra2o;
  
// Parameters for L_39_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_39_ra0o;
  DDL::Input CrossRefEntry2616_39_ra1o;
  User::CrossRefEntry CrossRefEntry2616_39_ra2o;
  
// Parameters for L_40_CrossRefEntry2616
  DDL::Bool CrossRefEntry2616_40_ra0u;
  DDL::Input CrossRefEntry2616_40_ra3o;
  DDL::Input CrossRefEntry2616_40_ra1o;
  User::CrossRefEntry CrossRefEntry2616_40_ra2o;
  DDL::Input CrossRefEntry2616_40_ra4o;
  
// Parameters for L_41_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_41_ra3o;
  DDL::Input CrossRefEntry2616_41_ra0o;
  DDL::Input CrossRefEntry2616_41_ra1o;
  User::CrossRefEntry CrossRefEntry2616_41_ra2o;
  
// Parameters for L_42_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_42_ra0o;
  User::CrossRefEntry CrossRefEntry2616_42_ra1o;
  
// Parameters for L_44_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_44_ra0o;
  User::CrossRefEntry CrossRefEntry2616_44_ra1o;
  
// Parameters for L_46_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_46_ra0o;
  DDL::Input CrossRefEntry2616_46_ra1o;
  User::CrossRefEntry CrossRefEntry2616_46_ra2o;
  
// Parameters for L_49_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_49_ra0o;
  User::CrossRefEntry CrossRefEntry2616_49_ra1o;
  
// Parameters for L_50_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_50_ra0o;
  DDL::Input CrossRefEntry2616_50_ra1o;
  User::CrossRefEntry CrossRefEntry2616_50_ra2o;
  
// Parameters for L_51_CrossRefEntry2616
  DDL::Bool CrossRefEntry2616_51_ra0u;
  DDL::Input CrossRefEntry2616_51_ra3o;
  DDL::Input CrossRefEntry2616_51_ra1o;
  User::CrossRefEntry CrossRefEntry2616_51_ra2o;
  DDL::Input CrossRefEntry2616_51_ra4o;
  
// Parameters for L_52_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_52_ra3o;
  DDL::Input CrossRefEntry2616_52_ra0o;
  DDL::Input CrossRefEntry2616_52_ra1o;
  User::CrossRefEntry CrossRefEntry2616_52_ra2o;
  
// Parameters for L_54_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_54_ra0o;
  User::CrossRefEntry CrossRefEntry2616_54_ra1o;
  
// Parameters for L_56_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_56_ra0o;
  DDL::Input CrossRefEntry2616_56_ra1o;
  User::CrossRefEntry CrossRefEntry2616_56_ra2o;
  
// Parameters for L_59_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_59_ra0o;
  DDL::Input CrossRefEntry2616_59_ra1o;
  User::CrossRefEntry CrossRefEntry2616_59_ra2o;
  
// Parameters for L_60_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_60_ra0o;
  DDL::Input CrossRefEntry2616_60_ra1o;
  User::CrossRefEntry CrossRefEntry2616_60_ra2o;
  
// Parameters for L_61_CrossRefEntry2616
  DDL::Bool CrossRefEntry2616_61_ra0u;
  DDL::Input CrossRefEntry2616_61_ra3o;
  DDL::Input CrossRefEntry2616_61_ra1o;
  User::CrossRefEntry CrossRefEntry2616_61_ra2o;
  DDL::Input CrossRefEntry2616_61_ra4o;
  
// Parameters for L_62_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_62_ra3o;
  DDL::Input CrossRefEntry2616_62_ra0o;
  DDL::Input CrossRefEntry2616_62_ra1o;
  User::CrossRefEntry CrossRefEntry2616_62_ra2o;
  
// Parameters for L_63_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_63_ra0o;
  User::CrossRefEntry CrossRefEntry2616_63_ra1o;
  
// Parameters for L_65_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_65_ra0o;
  User::CrossRefEntry CrossRefEntry2616_65_ra1o;
  
// Parameters for L_67_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_67_ra0o;
  DDL::Input CrossRefEntry2616_67_ra1o;
  User::CrossRefEntry CrossRefEntry2616_67_ra2o;
  
// Parameters for L_70_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_70_ra0o;
  User::CrossRefEntry CrossRefEntry2616_70_ra1o;
  
// Parameters for L_71_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_71_ra0o;
  DDL::Input CrossRefEntry2616_71_ra1o;
  User::CrossRefEntry CrossRefEntry2616_71_ra2o;
  
// Parameters for L_72_CrossRefEntry2616
  DDL::Bool CrossRefEntry2616_72_ra0u;
  DDL::Input CrossRefEntry2616_72_ra3o;
  DDL::Input CrossRefEntry2616_72_ra1o;
  User::CrossRefEntry CrossRefEntry2616_72_ra2o;
  DDL::Input CrossRefEntry2616_72_ra4o;
  
// Parameters for L_73_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_73_ra3o;
  DDL::Input CrossRefEntry2616_73_ra0o;
  DDL::Input CrossRefEntry2616_73_ra1o;
  User::CrossRefEntry CrossRefEntry2616_73_ra2o;
  
// Parameters for L_75_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_75_ra0o;
  User::CrossRefEntry CrossRefEntry2616_75_ra1o;
  
// Parameters for L_77_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_77_ra0o;
  DDL::Input CrossRefEntry2616_77_ra1o;
  User::CrossRefEntry CrossRefEntry2616_77_ra2o;
  
// Parameters for L_80_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_80_ra0o;
  DDL::Input CrossRefEntry2616_80_ra1o;
  User::CrossRefEntry CrossRefEntry2616_80_ra2o;
  
// Parameters for L_81_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_81_ra0o;
  DDL::Input CrossRefEntry2616_81_ra1o;
  User::CrossRefEntry CrossRefEntry2616_81_ra2o;
  
// Parameters for L_82_CrossRefEntry2616
  DDL::Bool CrossRefEntry2616_82_ra0u;
  DDL::Input CrossRefEntry2616_82_ra3o;
  DDL::Input CrossRefEntry2616_82_ra1o;
  User::CrossRefEntry CrossRefEntry2616_82_ra2o;
  DDL::Input CrossRefEntry2616_82_ra4o;
  
// Parameters for L_83_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_83_ra3o;
  DDL::Input CrossRefEntry2616_83_ra0o;
  DDL::Input CrossRefEntry2616_83_ra1o;
  User::CrossRefEntry CrossRefEntry2616_83_ra2o;
  
// Parameters for L_84_CrossRefEntry2616
  User::CrossRefEntry CrossRefEntry2616_84_ra0o;
  DDL::Input CrossRefEntry2616_84_ra1o;
  
// Parameters for L_86_CrossRefEntry2616
  User::FreeEntry CrossRefEntry2616_86_ra0o;
  DDL::Input CrossRefEntry2616_86_ra1o;
  
// Parameters for L_88_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_88_ra0o;
  DDL::Integer CrossRefEntry2616_88_ra1o;
  DDL::Integer CrossRefEntry2616_88_ra2o;
  
// Parameters for L_89_CrossRefEntry2616
  User::UsedEntry CrossRefEntry2616_89_ra0o;
  DDL::Input CrossRefEntry2616_89_ra1o;
  
// Parameters for L_91_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_91_ra0o;
  
// Parameters for L_93_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_93_ra0o;
  DDL::Integer CrossRefEntry2616_93_ra1o;
  DDL::Integer CrossRefEntry2616_93_ra2o;
  
// Parameters for L_94_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_94_ra0o;
  
// Parameters for L_95_CrossRefEntry2616
  DDL::Bool CrossRefEntry2616_95_ra0u;
  DDL::Input CrossRefEntry2616_95_ra1o;
  DDL::Input CrossRefEntry2616_95_ra2o;
  DDL::Integer CrossRefEntry2616_95_ra3o;
  DDL::Integer CrossRefEntry2616_95_ra4o;
  
// Parameters for L_96_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_96_ra3o;
  DDL::Input CrossRefEntry2616_96_ra0o;
  DDL::Integer CrossRefEntry2616_96_ra1o;
  DDL::Integer CrossRefEntry2616_96_ra2o;
  
// Parameters for L_98_CrossRefEntry2616
  DDL::Integer CrossRefEntry2616_98_ra0o;
  DDL::Input CrossRefEntry2616_98_ra1o;
  DDL::Integer CrossRefEntry2616_98_ra2o;
  
// Parameters for L_100_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_100_ra0o;
  
// Parameters for L_102_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_102_ra0o;
  DDL::Integer CrossRefEntry2616_102_ra1o;
  
// Parameters for L_103_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_103_ra0o;
  
// Parameters for L_104_CrossRefEntry2616
  DDL::Bool CrossRefEntry2616_104_ra0u;
  DDL::Input CrossRefEntry2616_104_ra1o;
  DDL::Input CrossRefEntry2616_104_ra2o;
  DDL::Integer CrossRefEntry2616_104_ra3o;
  
// Parameters for L_105_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_105_ra2o;
  DDL::Input CrossRefEntry2616_105_ra0o;
  DDL::Integer CrossRefEntry2616_105_ra1o;
  
// Parameters for L_107_CrossRefEntry2616
  DDL::Integer CrossRefEntry2616_107_ra0o;
  DDL::Input CrossRefEntry2616_107_ra1o;
  
// Parameters for L_108_CrossRefEntry2616
  DDL::Input CrossRefEntry2616_108_ra0o;
  CrossRefEntry2616_108_ra0o = a1;
  goto CrossRefEntry2616_108;
  // NormalBlock
  CrossRefEntry2616_0: {
    p.popDebug();
    *_result = CrossRefEntry2616_0_ra1o;
    *_result_input = CrossRefEntry2616_0_ra2o;
    return true;
  }
  // NormalBlock
  CrossRefEntry2616_1: {
    CrossRefEntry2616_0_ra0u = CrossRefEntry2616_1_ra0u;
    CrossRefEntry2616_0_ra2o = CrossRefEntry2616_1_ra2o;
    CrossRefEntry2616_0_ra1o = CrossRefEntry2616_1_ra1o;
    goto CrossRefEntry2616_0;
  }
  // NormalBlock
  CrossRefEntry2616_2: {
    CrossRefEntry2616_1_ra0u = CrossRefEntry2616_2_ra0u;
    CrossRefEntry2616_1_ra2o = CrossRefEntry2616_2_ra2o;
    CrossRefEntry2616_1_ra1o = CrossRefEntry2616_2_ra1o;
    goto CrossRefEntry2616_1;
  }
  // NormalBlock
  CrossRefEntry2616_3: {
    CrossRefEntry2616_2_ra0u = CrossRefEntry2616_3_ra0u;
    CrossRefEntry2616_2_ra2o = CrossRefEntry2616_3_ra2o;
    CrossRefEntry2616_2_ra1o = CrossRefEntry2616_3_ra1o;
    goto CrossRefEntry2616_2;
  }
  // NormalBlock
  CrossRefEntry2616_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:79:7--79:9",
               CrossRefEntry2616_5_ra0o, r0);
    CrossRefEntry2616_5_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  CrossRefEntry2616_7: {
    DDL::Input r0 = CrossRefEntry2616_7_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    CrossRefEntry2616_3_ra0u = DDL::Unit();
    CrossRefEntry2616_3_ra2o = r0;
    CrossRefEntry2616_3_ra1o = CrossRefEntry2616_7_ra1o;
    goto CrossRefEntry2616_3;
  }
  // NormalBlock
  CrossRefEntry2616_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:79:7--79:9",
               CrossRefEntry2616_8_ra0o, r0);
    CrossRefEntry2616_8_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock RetPure
  CrossRefEntry2616_9: {
    if (CrossRefEntry2616_9_ra0u.getValue()) {
      CrossRefEntry2616_9_ra1o.free();
      CrossRefEntry2616_7_ra0o = CrossRefEntry2616_9_ra2o;
      CrossRefEntry2616_7_ra1o = CrossRefEntry2616_9_ra3o;
      goto CrossRefEntry2616_7;
    } else {
      CrossRefEntry2616_9_ra2o.free();
      CrossRefEntry2616_9_ra3o.free();
      CrossRefEntry2616_8_ra0o = CrossRefEntry2616_9_ra1o;
      goto CrossRefEntry2616_8;
    }
  }
  // NormalBlock
  CrossRefEntry2616_10: {
    DDL::UInt<8> r0 = DDL::UInt<8>(CrossRefEntry2616_10_ra0o.iHead());
    CrossRefEntry2616_9_ra0u = parser_z24zlf(r0);
    CrossRefEntry2616_9_ra1o = CrossRefEntry2616_10_ra2o;
    CrossRefEntry2616_9_ra2o = CrossRefEntry2616_10_ra0o;
    CrossRefEntry2616_9_ra3o = CrossRefEntry2616_10_ra1o;
    goto CrossRefEntry2616_9;
  }
  // NormalBlock
  CrossRefEntry2616_12: {
    DDL::Bool r0 = CrossRefEntry2616_12_ra0o.length() == 0;
    CrossRefEntry2616_12_ra0o.copy();
    if (r0.getValue()) {
      CrossRefEntry2616_12_ra1o.free();
      CrossRefEntry2616_12_ra0o.free();
      CrossRefEntry2616_5_ra0o = CrossRefEntry2616_12_ra0o;
      goto CrossRefEntry2616_5;
    } else {
      CrossRefEntry2616_10_ra2o = CrossRefEntry2616_12_ra0o;
      CrossRefEntry2616_10_ra0o = CrossRefEntry2616_12_ra0o;
      CrossRefEntry2616_10_ra1o = CrossRefEntry2616_12_ra1o;
      goto CrossRefEntry2616_10;
    }
  }
  // NormalBlock
  CrossRefEntry2616_14: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:78:7--78:9",
               CrossRefEntry2616_14_ra0o, r0);
    CrossRefEntry2616_14_ra0o.free();
    r0.free();
    CrossRefEntry2616_12_ra0o = CrossRefEntry2616_14_ra1o;
    CrossRefEntry2616_12_ra1o = CrossRefEntry2616_14_ra2o;
    goto CrossRefEntry2616_12;
  }
  // NormalBlock
  CrossRefEntry2616_17: {
    DDL::Input r0 = CrossRefEntry2616_17_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    CrossRefEntry2616_3_ra0u = DDL::Unit();
    CrossRefEntry2616_3_ra2o = r0;
    CrossRefEntry2616_3_ra1o = CrossRefEntry2616_17_ra1o;
    goto CrossRefEntry2616_3;
  }
  // NormalBlock
  CrossRefEntry2616_18: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:78:7--78:9",
               CrossRefEntry2616_18_ra0o, r0);
    CrossRefEntry2616_18_ra0o.free();
    r0.free();
    CrossRefEntry2616_12_ra0o = CrossRefEntry2616_18_ra1o;
    CrossRefEntry2616_12_ra1o = CrossRefEntry2616_18_ra2o;
    goto CrossRefEntry2616_12;
  }
  // ReturnBlock RetPure
  CrossRefEntry2616_19: {
    if (CrossRefEntry2616_19_ra0u.getValue()) {
      CrossRefEntry2616_19_ra1o.free();
      CrossRefEntry2616_19_ra3o.free();
      CrossRefEntry2616_17_ra0o = CrossRefEntry2616_19_ra4o;
      CrossRefEntry2616_17_ra1o = CrossRefEntry2616_19_ra2o;
      goto CrossRefEntry2616_17;
    } else {
      CrossRefEntry2616_19_ra4o.free();
      CrossRefEntry2616_18_ra0o = CrossRefEntry2616_19_ra3o;
      CrossRefEntry2616_18_ra1o = CrossRefEntry2616_19_ra1o;
      CrossRefEntry2616_18_ra2o = CrossRefEntry2616_19_ra2o;
      goto CrossRefEntry2616_18;
    }
  }
  // NormalBlock
  CrossRefEntry2616_20: {
    DDL::UInt<8> r0 = DDL::UInt<8>(CrossRefEntry2616_20_ra0o.iHead());
    CrossRefEntry2616_19_ra0u = parser_z24zcr(r0);
    CrossRefEntry2616_19_ra3o = CrossRefEntry2616_20_ra3o;
    CrossRefEntry2616_19_ra1o = CrossRefEntry2616_20_ra1o;
    CrossRefEntry2616_19_ra2o = CrossRefEntry2616_20_ra2o;
    CrossRefEntry2616_19_ra4o = CrossRefEntry2616_20_ra0o;
    goto CrossRefEntry2616_19;
  }
  // NormalBlock
  CrossRefEntry2616_21: {
    DDL::Bool r0 = CrossRefEntry2616_21_ra0o.length() == 0;
    CrossRefEntry2616_21_ra0o.copy();
    CrossRefEntry2616_21_ra0o.copy();
    CrossRefEntry2616_21_ra0o.copy();
    if (r0.getValue()) {
      CrossRefEntry2616_21_ra0o.free();
      CrossRefEntry2616_21_ra0o.free();
      CrossRefEntry2616_14_ra0o = CrossRefEntry2616_21_ra0o;
      CrossRefEntry2616_14_ra1o = CrossRefEntry2616_21_ra0o;
      CrossRefEntry2616_14_ra2o = CrossRefEntry2616_21_ra1o;
      goto CrossRefEntry2616_14;
    } else {
      CrossRefEntry2616_21_ra0o.free();
      CrossRefEntry2616_20_ra3o = CrossRefEntry2616_21_ra0o;
      CrossRefEntry2616_20_ra0o = CrossRefEntry2616_21_ra0o;
      CrossRefEntry2616_20_ra1o = CrossRefEntry2616_21_ra0o;
      CrossRefEntry2616_20_ra2o = CrossRefEntry2616_21_ra1o;
      goto CrossRefEntry2616_20;
    }
  }
  // NormalBlock
  CrossRefEntry2616_23: {
    CrossRefEntry2616_21_ra0o = CrossRefEntry2616_23_ra0o;
    CrossRefEntry2616_21_ra1o = CrossRefEntry2616_23_ra1o;
    goto CrossRefEntry2616_21;
  }
  // NormalBlock
  CrossRefEntry2616_25: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:77:17--77:19",
               CrossRefEntry2616_25_ra0o, r0);
    CrossRefEntry2616_25_ra0o.free();
    r0.free();
    CrossRefEntry2616_23_ra0o = CrossRefEntry2616_25_ra1o;
    CrossRefEntry2616_23_ra1o = CrossRefEntry2616_25_ra2o;
    goto CrossRefEntry2616_23;
  }
  // NormalBlock
  CrossRefEntry2616_28: {
    DDL::Input r0 = CrossRefEntry2616_28_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    CrossRefEntry2616_2_ra0u = DDL::Unit();
    CrossRefEntry2616_2_ra2o = r0;
    CrossRefEntry2616_2_ra1o = CrossRefEntry2616_28_ra1o;
    goto CrossRefEntry2616_2;
  }
  // NormalBlock
  CrossRefEntry2616_29: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:77:17--77:19",
               CrossRefEntry2616_29_ra0o, r0);
    CrossRefEntry2616_29_ra0o.free();
    r0.free();
    CrossRefEntry2616_23_ra0o = CrossRefEntry2616_29_ra1o;
    CrossRefEntry2616_23_ra1o = CrossRefEntry2616_29_ra2o;
    goto CrossRefEntry2616_23;
  }
  // ReturnBlock RetPure
  CrossRefEntry2616_30: {
    if (CrossRefEntry2616_30_ra0u.getValue()) {
      CrossRefEntry2616_30_ra1o.free();
      CrossRefEntry2616_30_ra3o.free();
      CrossRefEntry2616_28_ra0o = CrossRefEntry2616_30_ra4o;
      CrossRefEntry2616_28_ra1o = CrossRefEntry2616_30_ra2o;
      goto CrossRefEntry2616_28;
    } else {
      CrossRefEntry2616_30_ra4o.free();
      CrossRefEntry2616_29_ra0o = CrossRefEntry2616_30_ra3o;
      CrossRefEntry2616_29_ra1o = CrossRefEntry2616_30_ra1o;
      CrossRefEntry2616_29_ra2o = CrossRefEntry2616_30_ra2o;
      goto CrossRefEntry2616_29;
    }
  }
  // NormalBlock
  CrossRefEntry2616_31: {
    DDL::UInt<8> r0 = DDL::UInt<8>(CrossRefEntry2616_31_ra0o.iHead());
    CrossRefEntry2616_30_ra0u = parser_z24zlf(r0);
    CrossRefEntry2616_30_ra3o = CrossRefEntry2616_31_ra3o;
    CrossRefEntry2616_30_ra1o = CrossRefEntry2616_31_ra1o;
    CrossRefEntry2616_30_ra2o = CrossRefEntry2616_31_ra2o;
    CrossRefEntry2616_30_ra4o = CrossRefEntry2616_31_ra0o;
    goto CrossRefEntry2616_30;
  }
  // NormalBlock
  CrossRefEntry2616_33: {
    CrossRefEntry2616_21_ra0o = CrossRefEntry2616_33_ra0o;
    CrossRefEntry2616_21_ra1o = CrossRefEntry2616_33_ra1o;
    goto CrossRefEntry2616_21;
  }
  // NormalBlock
  CrossRefEntry2616_35: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:77:9--77:14",
               CrossRefEntry2616_35_ra0o, r0);
    CrossRefEntry2616_35_ra0o.free();
    r0.free();
    CrossRefEntry2616_33_ra0o = CrossRefEntry2616_35_ra1o;
    CrossRefEntry2616_33_ra1o = CrossRefEntry2616_35_ra2o;
    goto CrossRefEntry2616_33;
  }
  // NormalBlock
  CrossRefEntry2616_38: {
    DDL::Input r0 = CrossRefEntry2616_38_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Bool r1 = r0.length() == 0;
    r0.copy();
    if (r1.getValue()) {
      r0.free();
      CrossRefEntry2616_25_ra0o = r0;
      CrossRefEntry2616_25_ra1o = CrossRefEntry2616_38_ra1o;
      CrossRefEntry2616_25_ra2o = CrossRefEntry2616_38_ra2o;
      goto CrossRefEntry2616_25;
    } else {
      CrossRefEntry2616_31_ra3o = r0;
      CrossRefEntry2616_31_ra0o = r0;
      CrossRefEntry2616_31_ra1o = CrossRefEntry2616_38_ra1o;
      CrossRefEntry2616_31_ra2o = CrossRefEntry2616_38_ra2o;
      goto CrossRefEntry2616_31;
    }
  }
  // NormalBlock
  CrossRefEntry2616_39: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:77:9--77:14",
               CrossRefEntry2616_39_ra0o, r0);
    CrossRefEntry2616_39_ra0o.free();
    r0.free();
    CrossRefEntry2616_33_ra0o = CrossRefEntry2616_39_ra1o;
    CrossRefEntry2616_33_ra1o = CrossRefEntry2616_39_ra2o;
    goto CrossRefEntry2616_33;
  }
  // ReturnBlock RetPure
  CrossRefEntry2616_40: {
    if (CrossRefEntry2616_40_ra0u.getValue()) {
      CrossRefEntry2616_40_ra3o.free();
      CrossRefEntry2616_38_ra0o = CrossRefEntry2616_40_ra4o;
      CrossRefEntry2616_38_ra1o = CrossRefEntry2616_40_ra1o;
      CrossRefEntry2616_38_ra2o = CrossRefEntry2616_40_ra2o;
      goto CrossRefEntry2616_38;
    } else {
      CrossRefEntry2616_40_ra4o.free();
      CrossRefEntry2616_39_ra0o = CrossRefEntry2616_40_ra3o;
      CrossRefEntry2616_39_ra1o = CrossRefEntry2616_40_ra1o;
      CrossRefEntry2616_39_ra2o = CrossRefEntry2616_40_ra2o;
      goto CrossRefEntry2616_39;
    }
  }
  // NormalBlock
  CrossRefEntry2616_41: {
    DDL::UInt<8> r0 = DDL::UInt<8>(CrossRefEntry2616_41_ra0o.iHead());
    CrossRefEntry2616_40_ra0u = parser_z24zspace(r0);
    CrossRefEntry2616_40_ra3o = CrossRefEntry2616_41_ra3o;
    CrossRefEntry2616_40_ra1o = CrossRefEntry2616_41_ra1o;
    CrossRefEntry2616_40_ra2o = CrossRefEntry2616_41_ra2o;
    CrossRefEntry2616_40_ra4o = CrossRefEntry2616_41_ra0o;
    goto CrossRefEntry2616_40;
  }
  // NormalBlock
  CrossRefEntry2616_42: {
    DDL::Bool r0 = CrossRefEntry2616_42_ra0o.length() == 0;
    CrossRefEntry2616_42_ra0o.copy();
    CrossRefEntry2616_42_ra0o.copy();
    CrossRefEntry2616_42_ra0o.copy();
    if (r0.getValue()) {
      CrossRefEntry2616_42_ra0o.free();
      CrossRefEntry2616_42_ra0o.free();
      CrossRefEntry2616_35_ra0o = CrossRefEntry2616_42_ra0o;
      CrossRefEntry2616_35_ra1o = CrossRefEntry2616_42_ra0o;
      CrossRefEntry2616_35_ra2o = CrossRefEntry2616_42_ra1o;
      goto CrossRefEntry2616_35;
    } else {
      CrossRefEntry2616_42_ra0o.free();
      CrossRefEntry2616_41_ra3o = CrossRefEntry2616_42_ra0o;
      CrossRefEntry2616_41_ra0o = CrossRefEntry2616_42_ra0o;
      CrossRefEntry2616_41_ra1o = CrossRefEntry2616_42_ra0o;
      CrossRefEntry2616_41_ra2o = CrossRefEntry2616_42_ra1o;
      goto CrossRefEntry2616_41;
    }
  }
  // NormalBlock
  CrossRefEntry2616_44: {
    CrossRefEntry2616_42_ra0o = CrossRefEntry2616_44_ra0o;
    CrossRefEntry2616_42_ra1o = CrossRefEntry2616_44_ra1o;
    goto CrossRefEntry2616_42;
  }
  // NormalBlock
  CrossRefEntry2616_46: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:76:17--76:19",
               CrossRefEntry2616_46_ra0o, r0);
    CrossRefEntry2616_46_ra0o.free();
    r0.free();
    CrossRefEntry2616_44_ra0o = CrossRefEntry2616_46_ra1o;
    CrossRefEntry2616_44_ra1o = CrossRefEntry2616_46_ra2o;
    goto CrossRefEntry2616_44;
  }
  // NormalBlock
  CrossRefEntry2616_49: {
    DDL::Input r0 = CrossRefEntry2616_49_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    CrossRefEntry2616_1_ra0u = DDL::Unit();
    CrossRefEntry2616_1_ra2o = r0;
    CrossRefEntry2616_1_ra1o = CrossRefEntry2616_49_ra1o;
    goto CrossRefEntry2616_1;
  }
  // NormalBlock
  CrossRefEntry2616_50: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:76:17--76:19",
               CrossRefEntry2616_50_ra0o, r0);
    CrossRefEntry2616_50_ra0o.free();
    r0.free();
    CrossRefEntry2616_44_ra0o = CrossRefEntry2616_50_ra1o;
    CrossRefEntry2616_44_ra1o = CrossRefEntry2616_50_ra2o;
    goto CrossRefEntry2616_44;
  }
  // ReturnBlock RetPure
  CrossRefEntry2616_51: {
    if (CrossRefEntry2616_51_ra0u.getValue()) {
      CrossRefEntry2616_51_ra1o.free();
      CrossRefEntry2616_51_ra3o.free();
      CrossRefEntry2616_49_ra0o = CrossRefEntry2616_51_ra4o;
      CrossRefEntry2616_49_ra1o = CrossRefEntry2616_51_ra2o;
      goto CrossRefEntry2616_49;
    } else {
      CrossRefEntry2616_51_ra4o.free();
      CrossRefEntry2616_50_ra0o = CrossRefEntry2616_51_ra3o;
      CrossRefEntry2616_50_ra1o = CrossRefEntry2616_51_ra1o;
      CrossRefEntry2616_50_ra2o = CrossRefEntry2616_51_ra2o;
      goto CrossRefEntry2616_50;
    }
  }
  // NormalBlock
  CrossRefEntry2616_52: {
    DDL::UInt<8> r0 = DDL::UInt<8>(CrossRefEntry2616_52_ra0o.iHead());
    CrossRefEntry2616_51_ra0u = parser_z24zcr(r0);
    CrossRefEntry2616_51_ra3o = CrossRefEntry2616_52_ra3o;
    CrossRefEntry2616_51_ra1o = CrossRefEntry2616_52_ra1o;
    CrossRefEntry2616_51_ra2o = CrossRefEntry2616_52_ra2o;
    CrossRefEntry2616_51_ra4o = CrossRefEntry2616_52_ra0o;
    goto CrossRefEntry2616_51;
  }
  // NormalBlock
  CrossRefEntry2616_54: {
    CrossRefEntry2616_42_ra0o = CrossRefEntry2616_54_ra0o;
    CrossRefEntry2616_42_ra1o = CrossRefEntry2616_54_ra1o;
    goto CrossRefEntry2616_42;
  }
  // NormalBlock
  CrossRefEntry2616_56: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:76:9--76:14",
               CrossRefEntry2616_56_ra0o, r0);
    CrossRefEntry2616_56_ra0o.free();
    r0.free();
    CrossRefEntry2616_54_ra0o = CrossRefEntry2616_56_ra1o;
    CrossRefEntry2616_54_ra1o = CrossRefEntry2616_56_ra2o;
    goto CrossRefEntry2616_54;
  }
  // NormalBlock
  CrossRefEntry2616_59: {
    DDL::Input r0 = CrossRefEntry2616_59_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Bool r1 = r0.length() == 0;
    r0.copy();
    if (r1.getValue()) {
      r0.free();
      CrossRefEntry2616_46_ra0o = r0;
      CrossRefEntry2616_46_ra1o = CrossRefEntry2616_59_ra1o;
      CrossRefEntry2616_46_ra2o = CrossRefEntry2616_59_ra2o;
      goto CrossRefEntry2616_46;
    } else {
      CrossRefEntry2616_52_ra3o = r0;
      CrossRefEntry2616_52_ra0o = r0;
      CrossRefEntry2616_52_ra1o = CrossRefEntry2616_59_ra1o;
      CrossRefEntry2616_52_ra2o = CrossRefEntry2616_59_ra2o;
      goto CrossRefEntry2616_52;
    }
  }
  // NormalBlock
  CrossRefEntry2616_60: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:76:9--76:14",
               CrossRefEntry2616_60_ra0o, r0);
    CrossRefEntry2616_60_ra0o.free();
    r0.free();
    CrossRefEntry2616_54_ra0o = CrossRefEntry2616_60_ra1o;
    CrossRefEntry2616_54_ra1o = CrossRefEntry2616_60_ra2o;
    goto CrossRefEntry2616_54;
  }
  // ReturnBlock RetPure
  CrossRefEntry2616_61: {
    if (CrossRefEntry2616_61_ra0u.getValue()) {
      CrossRefEntry2616_61_ra3o.free();
      CrossRefEntry2616_59_ra0o = CrossRefEntry2616_61_ra4o;
      CrossRefEntry2616_59_ra1o = CrossRefEntry2616_61_ra1o;
      CrossRefEntry2616_59_ra2o = CrossRefEntry2616_61_ra2o;
      goto CrossRefEntry2616_59;
    } else {
      CrossRefEntry2616_61_ra4o.free();
      CrossRefEntry2616_60_ra0o = CrossRefEntry2616_61_ra3o;
      CrossRefEntry2616_60_ra1o = CrossRefEntry2616_61_ra1o;
      CrossRefEntry2616_60_ra2o = CrossRefEntry2616_61_ra2o;
      goto CrossRefEntry2616_60;
    }
  }
  // NormalBlock
  CrossRefEntry2616_62: {
    DDL::UInt<8> r0 = DDL::UInt<8>(CrossRefEntry2616_62_ra0o.iHead());
    CrossRefEntry2616_61_ra0u = parser_z24zspace(r0);
    CrossRefEntry2616_61_ra3o = CrossRefEntry2616_62_ra3o;
    CrossRefEntry2616_61_ra1o = CrossRefEntry2616_62_ra1o;
    CrossRefEntry2616_61_ra2o = CrossRefEntry2616_62_ra2o;
    CrossRefEntry2616_61_ra4o = CrossRefEntry2616_62_ra0o;
    goto CrossRefEntry2616_61;
  }
  // NormalBlock
  CrossRefEntry2616_63: {
    DDL::Bool r0 = CrossRefEntry2616_63_ra0o.length() == 0;
    CrossRefEntry2616_63_ra0o.copy();
    CrossRefEntry2616_63_ra0o.copy();
    CrossRefEntry2616_63_ra0o.copy();
    if (r0.getValue()) {
      CrossRefEntry2616_63_ra0o.free();
      CrossRefEntry2616_63_ra0o.free();
      CrossRefEntry2616_56_ra0o = CrossRefEntry2616_63_ra0o;
      CrossRefEntry2616_56_ra1o = CrossRefEntry2616_63_ra0o;
      CrossRefEntry2616_56_ra2o = CrossRefEntry2616_63_ra1o;
      goto CrossRefEntry2616_56;
    } else {
      CrossRefEntry2616_63_ra0o.free();
      CrossRefEntry2616_62_ra3o = CrossRefEntry2616_63_ra0o;
      CrossRefEntry2616_62_ra0o = CrossRefEntry2616_63_ra0o;
      CrossRefEntry2616_62_ra1o = CrossRefEntry2616_63_ra0o;
      CrossRefEntry2616_62_ra2o = CrossRefEntry2616_63_ra1o;
      goto CrossRefEntry2616_62;
    }
  }
  // NormalBlock
  CrossRefEntry2616_65: {
    CrossRefEntry2616_63_ra0o = CrossRefEntry2616_65_ra0o;
    CrossRefEntry2616_63_ra1o = CrossRefEntry2616_65_ra1o;
    goto CrossRefEntry2616_63;
  }
  // NormalBlock
  CrossRefEntry2616_67: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:75:17--75:19",
               CrossRefEntry2616_67_ra0o, r0);
    CrossRefEntry2616_67_ra0o.free();
    r0.free();
    CrossRefEntry2616_65_ra0o = CrossRefEntry2616_67_ra1o;
    CrossRefEntry2616_65_ra1o = CrossRefEntry2616_67_ra2o;
    goto CrossRefEntry2616_65;
  }
  // NormalBlock
  CrossRefEntry2616_70: {
    DDL::Input r0 = CrossRefEntry2616_70_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    CrossRefEntry2616_0_ra0u = DDL::Unit();
    CrossRefEntry2616_0_ra2o = r0;
    CrossRefEntry2616_0_ra1o = CrossRefEntry2616_70_ra1o;
    goto CrossRefEntry2616_0;
  }
  // NormalBlock
  CrossRefEntry2616_71: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:75:17--75:19",
               CrossRefEntry2616_71_ra0o, r0);
    CrossRefEntry2616_71_ra0o.free();
    r0.free();
    CrossRefEntry2616_65_ra0o = CrossRefEntry2616_71_ra1o;
    CrossRefEntry2616_65_ra1o = CrossRefEntry2616_71_ra2o;
    goto CrossRefEntry2616_65;
  }
  // ReturnBlock RetPure
  CrossRefEntry2616_72: {
    if (CrossRefEntry2616_72_ra0u.getValue()) {
      CrossRefEntry2616_72_ra1o.free();
      CrossRefEntry2616_72_ra3o.free();
      CrossRefEntry2616_70_ra0o = CrossRefEntry2616_72_ra4o;
      CrossRefEntry2616_70_ra1o = CrossRefEntry2616_72_ra2o;
      goto CrossRefEntry2616_70;
    } else {
      CrossRefEntry2616_72_ra4o.free();
      CrossRefEntry2616_71_ra0o = CrossRefEntry2616_72_ra3o;
      CrossRefEntry2616_71_ra1o = CrossRefEntry2616_72_ra1o;
      CrossRefEntry2616_71_ra2o = CrossRefEntry2616_72_ra2o;
      goto CrossRefEntry2616_71;
    }
  }
  // NormalBlock
  CrossRefEntry2616_73: {
    DDL::UInt<8> r0 = DDL::UInt<8>(CrossRefEntry2616_73_ra0o.iHead());
    CrossRefEntry2616_72_ra0u = parser_z24zlf(r0);
    CrossRefEntry2616_72_ra3o = CrossRefEntry2616_73_ra3o;
    CrossRefEntry2616_72_ra1o = CrossRefEntry2616_73_ra1o;
    CrossRefEntry2616_72_ra2o = CrossRefEntry2616_73_ra2o;
    CrossRefEntry2616_72_ra4o = CrossRefEntry2616_73_ra0o;
    goto CrossRefEntry2616_72;
  }
  // NormalBlock
  CrossRefEntry2616_75: {
    CrossRefEntry2616_63_ra0o = CrossRefEntry2616_75_ra0o;
    CrossRefEntry2616_63_ra1o = CrossRefEntry2616_75_ra1o;
    goto CrossRefEntry2616_63;
  }
  // NormalBlock
  CrossRefEntry2616_77: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:75:9--75:11",
               CrossRefEntry2616_77_ra0o, r0);
    CrossRefEntry2616_77_ra0o.free();
    r0.free();
    CrossRefEntry2616_75_ra0o = CrossRefEntry2616_77_ra1o;
    CrossRefEntry2616_75_ra1o = CrossRefEntry2616_77_ra2o;
    goto CrossRefEntry2616_75;
  }
  // NormalBlock
  CrossRefEntry2616_80: {
    DDL::Input r0 = CrossRefEntry2616_80_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::Bool r1 = r0.length() == 0;
    r0.copy();
    if (r1.getValue()) {
      r0.free();
      CrossRefEntry2616_67_ra0o = r0;
      CrossRefEntry2616_67_ra1o = CrossRefEntry2616_80_ra1o;
      CrossRefEntry2616_67_ra2o = CrossRefEntry2616_80_ra2o;
      goto CrossRefEntry2616_67;
    } else {
      CrossRefEntry2616_73_ra3o = r0;
      CrossRefEntry2616_73_ra0o = r0;
      CrossRefEntry2616_73_ra1o = CrossRefEntry2616_80_ra1o;
      CrossRefEntry2616_73_ra2o = CrossRefEntry2616_80_ra2o;
      goto CrossRefEntry2616_73;
    }
  }
  // NormalBlock
  CrossRefEntry2616_81: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:75:9--75:11",
               CrossRefEntry2616_81_ra0o, r0);
    CrossRefEntry2616_81_ra0o.free();
    r0.free();
    CrossRefEntry2616_75_ra0o = CrossRefEntry2616_81_ra1o;
    CrossRefEntry2616_75_ra1o = CrossRefEntry2616_81_ra2o;
    goto CrossRefEntry2616_75;
  }
  // ReturnBlock RetPure
  CrossRefEntry2616_82: {
    if (CrossRefEntry2616_82_ra0u.getValue()) {
      CrossRefEntry2616_82_ra3o.free();
      CrossRefEntry2616_80_ra0o = CrossRefEntry2616_82_ra4o;
      CrossRefEntry2616_80_ra1o = CrossRefEntry2616_82_ra1o;
      CrossRefEntry2616_80_ra2o = CrossRefEntry2616_82_ra2o;
      goto CrossRefEntry2616_80;
    } else {
      CrossRefEntry2616_82_ra4o.free();
      CrossRefEntry2616_81_ra0o = CrossRefEntry2616_82_ra3o;
      CrossRefEntry2616_81_ra1o = CrossRefEntry2616_82_ra1o;
      CrossRefEntry2616_81_ra2o = CrossRefEntry2616_82_ra2o;
      goto CrossRefEntry2616_81;
    }
  }
  // NormalBlock
  CrossRefEntry2616_83: {
    DDL::UInt<8> r0 = DDL::UInt<8>(CrossRefEntry2616_83_ra0o.iHead());
    CrossRefEntry2616_82_ra0u = parser_z24zcr(r0);
    CrossRefEntry2616_82_ra3o = CrossRefEntry2616_83_ra3o;
    CrossRefEntry2616_82_ra1o = CrossRefEntry2616_83_ra1o;
    CrossRefEntry2616_82_ra2o = CrossRefEntry2616_83_ra2o;
    CrossRefEntry2616_82_ra4o = CrossRefEntry2616_83_ra0o;
    goto CrossRefEntry2616_82;
  }
  // NormalBlock
  CrossRefEntry2616_84: {
    DDL::Bool r0 = CrossRefEntry2616_84_ra1o.length() == 0;
    CrossRefEntry2616_84_ra1o.copy();
    CrossRefEntry2616_84_ra1o.copy();
    CrossRefEntry2616_84_ra1o.copy();
    if (r0.getValue()) {
      CrossRefEntry2616_84_ra1o.free();
      CrossRefEntry2616_84_ra1o.free();
      CrossRefEntry2616_77_ra0o = CrossRefEntry2616_84_ra1o;
      CrossRefEntry2616_77_ra1o = CrossRefEntry2616_84_ra1o;
      CrossRefEntry2616_77_ra2o = CrossRefEntry2616_84_ra0o;
      goto CrossRefEntry2616_77;
    } else {
      CrossRefEntry2616_84_ra1o.free();
      CrossRefEntry2616_83_ra3o = CrossRefEntry2616_84_ra1o;
      CrossRefEntry2616_83_ra0o = CrossRefEntry2616_84_ra1o;
      CrossRefEntry2616_83_ra1o = CrossRefEntry2616_84_ra1o;
      CrossRefEntry2616_83_ra2o = CrossRefEntry2616_84_ra0o;
      goto CrossRefEntry2616_83;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefEntry2616_85: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefEntry2616_86: {
    User::CrossRefEntry r0;
    r0.init_free(CrossRefEntry2616_86_ra0o);
    CrossRefEntry2616_84_ra0o = r0;
    CrossRefEntry2616_84_ra1o = CrossRefEntry2616_86_ra1o;
    goto CrossRefEntry2616_84;
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefEntry2616_88: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:72:20--72:36:FreeEntry",
                false);
    if (parser_FreeEntry(p, &CrossRefEntry2616_86_ra0o,
                         &CrossRefEntry2616_86_ra1o, CrossRefEntry2616_88_ra0o,
                         CrossRefEntry2616_88_ra1o, CrossRefEntry2616_88_ra2o)) {
      goto CrossRefEntry2616_86;
    } else {
      goto CrossRefEntry2616_85;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefEntry2616_89: {
    User::CrossRefEntry r0;
    r0.init_inUse(CrossRefEntry2616_89_ra0o);
    CrossRefEntry2616_84_ra0o = r0;
    CrossRefEntry2616_84_ra1o = CrossRefEntry2616_89_ra1o;
    goto CrossRefEntry2616_84;
  }
  // NormalBlock
  CrossRefEntry2616_91: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:69:24--69:29",
               CrossRefEntry2616_91_ra0o, r0);
    CrossRefEntry2616_91_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  CrossRefEntry2616_93: {
    DDL::Input r0 = CrossRefEntry2616_93_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:71:20--71:36:UsedEntry",
                false);
    r0.copy();
    CrossRefEntry2616_93_ra1o.copy();
    CrossRefEntry2616_93_ra2o.copy();
    if (parser_UsedEntry(p, &CrossRefEntry2616_89_ra0o,
                         &CrossRefEntry2616_89_ra1o, r0, CrossRefEntry2616_93_ra1o,
                         CrossRefEntry2616_93_ra2o)) {
      r0.free();
      CrossRefEntry2616_93_ra1o.free();
      CrossRefEntry2616_93_ra2o.free();
      goto CrossRefEntry2616_89;
    } else {
      CrossRefEntry2616_88_ra0o = r0;
      CrossRefEntry2616_88_ra1o = CrossRefEntry2616_93_ra1o;
      CrossRefEntry2616_88_ra2o = CrossRefEntry2616_93_ra2o;
      goto CrossRefEntry2616_88;
    }
  }
  // NormalBlock
  CrossRefEntry2616_94: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:69:24--69:29",
               CrossRefEntry2616_94_ra0o, r0);
    CrossRefEntry2616_94_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock RetPure
  CrossRefEntry2616_95: {
    if (CrossRefEntry2616_95_ra0u.getValue()) {
      CrossRefEntry2616_95_ra1o.free();
      CrossRefEntry2616_93_ra0o = CrossRefEntry2616_95_ra2o;
      CrossRefEntry2616_93_ra1o = CrossRefEntry2616_95_ra3o;
      CrossRefEntry2616_93_ra2o = CrossRefEntry2616_95_ra4o;
      goto CrossRefEntry2616_93;
    } else {
      CrossRefEntry2616_95_ra2o.free();
      CrossRefEntry2616_95_ra3o.free();
      CrossRefEntry2616_95_ra4o.free();
      CrossRefEntry2616_94_ra0o = CrossRefEntry2616_95_ra1o;
      goto CrossRefEntry2616_94;
    }
  }
  // NormalBlock
  CrossRefEntry2616_96: {
    DDL::UInt<8> r0 = DDL::UInt<8>(CrossRefEntry2616_96_ra0o.iHead());
    CrossRefEntry2616_95_ra0u = parser_z24zspace(r0);
    CrossRefEntry2616_95_ra1o = CrossRefEntry2616_96_ra3o;
    CrossRefEntry2616_95_ra2o = CrossRefEntry2616_96_ra0o;
    CrossRefEntry2616_95_ra3o = CrossRefEntry2616_96_ra1o;
    CrossRefEntry2616_95_ra4o = CrossRefEntry2616_96_ra2o;
    goto CrossRefEntry2616_95;
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefEntry2616_97: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefEntry2616_98: {
    DDL::Bool r0 = CrossRefEntry2616_98_ra1o.length() == 0;
    CrossRefEntry2616_98_ra1o.copy();
    if (r0.getValue()) {
      CrossRefEntry2616_98_ra0o.free();
      CrossRefEntry2616_98_ra2o.free();
      CrossRefEntry2616_98_ra1o.free();
      CrossRefEntry2616_91_ra0o = CrossRefEntry2616_98_ra1o;
      goto CrossRefEntry2616_91;
    } else {
      CrossRefEntry2616_96_ra3o = CrossRefEntry2616_98_ra1o;
      CrossRefEntry2616_96_ra0o = CrossRefEntry2616_98_ra1o;
      CrossRefEntry2616_96_ra1o = CrossRefEntry2616_98_ra2o;
      CrossRefEntry2616_96_ra2o = CrossRefEntry2616_98_ra0o;
      goto CrossRefEntry2616_96;
    }
  }
  // NormalBlock
  CrossRefEntry2616_100: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:68:24--68:29",
               CrossRefEntry2616_100_ra0o, r0);
    CrossRefEntry2616_100_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  CrossRefEntry2616_102: {
    DDL::Input r0 = CrossRefEntry2616_102_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:69:15--69:20:NatN",
                false);
    if (parser_NatN(p, &CrossRefEntry2616_98_ra0o,
                    &CrossRefEntry2616_98_ra1o, r0, DDL::UInt<64>{UINT64_C(5)})) {
      CrossRefEntry2616_98_ra2o = CrossRefEntry2616_102_ra1o;
      goto CrossRefEntry2616_98;
    } else {
      CrossRefEntry2616_102_ra1o.free();
      goto CrossRefEntry2616_97;
    }
  }
  // NormalBlock
  CrossRefEntry2616_103: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:68:24--68:29",
               CrossRefEntry2616_103_ra0o, r0);
    CrossRefEntry2616_103_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock RetPure
  CrossRefEntry2616_104: {
    if (CrossRefEntry2616_104_ra0u.getValue()) {
      CrossRefEntry2616_104_ra1o.free();
      CrossRefEntry2616_102_ra0o = CrossRefEntry2616_104_ra2o;
      CrossRefEntry2616_102_ra1o = CrossRefEntry2616_104_ra3o;
      goto CrossRefEntry2616_102;
    } else {
      CrossRefEntry2616_104_ra2o.free();
      CrossRefEntry2616_104_ra3o.free();
      CrossRefEntry2616_103_ra0o = CrossRefEntry2616_104_ra1o;
      goto CrossRefEntry2616_103;
    }
  }
  // NormalBlock
  CrossRefEntry2616_105: {
    DDL::UInt<8> r0 = DDL::UInt<8>(CrossRefEntry2616_105_ra0o.iHead());
    CrossRefEntry2616_104_ra0u = parser_z24zspace(r0);
    CrossRefEntry2616_104_ra1o = CrossRefEntry2616_105_ra2o;
    CrossRefEntry2616_104_ra2o = CrossRefEntry2616_105_ra0o;
    CrossRefEntry2616_104_ra3o = CrossRefEntry2616_105_ra1o;
    goto CrossRefEntry2616_104;
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefEntry2616_106: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefEntry2616_107: {
    DDL::Bool r0 = CrossRefEntry2616_107_ra1o.length() == 0;
    CrossRefEntry2616_107_ra1o.copy();
    if (r0.getValue()) {
      CrossRefEntry2616_107_ra0o.free();
      CrossRefEntry2616_107_ra1o.free();
      CrossRefEntry2616_100_ra0o = CrossRefEntry2616_107_ra1o;
      goto CrossRefEntry2616_100;
    } else {
      CrossRefEntry2616_105_ra2o = CrossRefEntry2616_107_ra1o;
      CrossRefEntry2616_105_ra0o = CrossRefEntry2616_107_ra1o;
      CrossRefEntry2616_105_ra1o = CrossRefEntry2616_107_ra0o;
      goto CrossRefEntry2616_105;
    }
  }
  // NormalBlock
  CrossRefEntry2616_108: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:68:15--68:21:NatN",
                false);
    if (parser_NatN(p, &CrossRefEntry2616_107_ra0o,
                    &CrossRefEntry2616_107_ra1o, CrossRefEntry2616_108_ra0o,
                    DDL::UInt<64>{UINT64_C(10)})) {
      goto CrossRefEntry2616_107;
    } else {
      goto CrossRefEntry2616_106;
    }
  }
}
bool parser_Many_3229(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<User::CrossRefEntry>* _result,
                      DDL::Input* _result_input, DDL::Input a1, DDL::UInt<64> a2,
                      DDL::Builder<User::CrossRefEntry> a3, DDL::UInt<64> a4) {
  
// Parameters for L_1_Many3229
  DDL::Input Many3229_1_ra0o;
  
// Parameters for L_2_Many3229
  User::CrossRefEntry Many3229_2_ra0o;
  DDL::Input Many3229_2_ra1o;
  DDL::UInt<64> Many3229_2_ra2u;
  DDL::Builder<User::CrossRefEntry> Many3229_2_ra3o;
  DDL::UInt<64> Many3229_2_ra4u;
  
// Parameters for L_3_Many3229
  DDL::Input Many3229_3_ra0o;
  DDL::UInt<64> Many3229_3_ra1u;
  DDL::Builder<User::CrossRefEntry> Many3229_3_ra2o;
  DDL::UInt<64> Many3229_3_ra3u;
  
// Parameters for L_4_Many3229
  DDL::Input Many3229_4_ra1o;
  DDL::Builder<User::CrossRefEntry> Many3229_4_ra0o;
  
// Parameters for L_5_Many3229
  DDL::Input Many3229_5_ra0o;
  DDL::UInt<64> Many3229_5_ra1u;
  DDL::Builder<User::CrossRefEntry> Many3229_5_ra2o;
  DDL::UInt<64> Many3229_5_ra3u;
  Many3229_5_ra0o = a1;
  Many3229_5_ra1u = a2;
  Many3229_5_ra2o = a3;
  Many3229_5_ra3u = a4;
  goto Many3229_5;
  // ReturnBlock (RetNo NoCapture)
  Many3229_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many3229_1_ra0o, r0);
    Many3229_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Many3229_2: {
    DDL::UInt<64> r0 = Many3229_2_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<User::CrossRefEntry> r1 = DDL::Builder<User::CrossRefEntry>(Many3229_2_ra3o,
                                                                             Many3229_2_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:64:15--64:36:Many_3229",
                true);
    Many3229_5_ra0o = Many3229_2_ra1o;
    Many3229_5_ra1u = r0;
    Many3229_5_ra2o = r1;
    Many3229_5_ra3u = Many3229_2_ra4u;
    goto Many3229_5;
  }
  // NormalBlock
  Many3229_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:64:24--64:36:CrossRefEntry",
                false);
    Many3229_3_ra0o.copy();
    if (parser_CrossRefEntry(p, &Many3229_2_ra0o, &Many3229_2_ra1o,
                             Many3229_3_ra0o)) {
      Many3229_3_ra0o.free();
      Many3229_2_ra2u = Many3229_3_ra1u;
      Many3229_2_ra3o = Many3229_3_ra2o;
      Many3229_2_ra4u = Many3229_3_ra3u;
      goto Many3229_2;
    } else {
      Many3229_3_ra2o.free();
      Many3229_1_ra0o = Many3229_3_ra0o;
      goto Many3229_1;
    }
  }
  // NormalBlock
  Many3229_4: {
    p.popDebug();
    *_result = Many3229_4_ra0o;
    *_result_input = Many3229_4_ra1o;
    return true;
  }
  // NormalBlock
  Many3229_5: {
    DDL::Bool r0 = DDL::Bool{Many3229_5_ra1u < Many3229_5_ra3u};
    if (r0.getValue()) {
      Many3229_3_ra0o = Many3229_5_ra0o;
      Many3229_3_ra1u = Many3229_5_ra1u;
      Many3229_3_ra2o = Many3229_5_ra2o;
      Many3229_3_ra3u = Many3229_5_ra3u;
      goto Many3229_3;
    } else {
      Many3229_4_ra1o = Many3229_5_ra0o;
      Many3229_4_ra0o = Many3229_5_ra2o;
      goto Many3229_4;
    }
  }
}
bool parser_CrossRefSubSection(DDL::ParserStateUser<ReferenceTable> &p,
                               User::CrossRefSubSection* _result, DDL::Input* _result_input,
                               DDL::Input a1) {
  
// Parameters for L_1_CrossRefSubSection2617
  DDL::Builder<User::CrossRefEntry> CrossRefSubSection2617_1_ra0o;
  DDL::Input CrossRefSubSection2617_1_ra1o;
  DDL::Integer CrossRefSubSection2617_1_ra2o;
  
// Parameters for L_3_CrossRefSubSection2617
  DDL::Unit CrossRefSubSection2617_3_ra0u;
  DDL::Input CrossRefSubSection2617_3_ra1o;
  DDL::UInt<64> CrossRefSubSection2617_3_ra2u;
  DDL::Integer CrossRefSubSection2617_3_ra3o;
  
// Parameters for L_5_CrossRefSubSection2617
  DDL::Input CrossRefSubSection2617_5_ra2o;
  DDL::Integer CrossRefSubSection2617_5_ra0o;
  DDL::Integer CrossRefSubSection2617_5_ra1o;
  
// Parameters for L_6_CrossRefSubSection2617
  DDL::Input CrossRefSubSection2617_6_ra0o;
  
// Parameters for L_7_CrossRefSubSection2617
  DDL::Input CrossRefSubSection2617_7_ra1o;
  DDL::Bool CrossRefSubSection2617_7_ra0u;
  DDL::Integer CrossRefSubSection2617_7_ra2o;
  DDL::Integer CrossRefSubSection2617_7_ra3o;
  
// Parameters for L_8_CrossRefSubSection2617
  DDL::Input CrossRefSubSection2617_8_ra2o;
  DDL::Integer CrossRefSubSection2617_8_ra0o;
  DDL::Integer CrossRefSubSection2617_8_ra1o;
  
// Parameters for L_9_CrossRefSubSection2617
  DDL::Input CrossRefSubSection2617_9_ra2o;
  DDL::Integer CrossRefSubSection2617_9_ra0o;
  DDL::Integer CrossRefSubSection2617_9_ra1o;
  
// Parameters for L_11_CrossRefSubSection2617
  DDL::Integer CrossRefSubSection2617_11_ra0o;
  DDL::Input CrossRefSubSection2617_11_ra1o;
  DDL::Integer CrossRefSubSection2617_11_ra2o;
  
// Parameters for L_13_CrossRefSubSection2617
  DDL::Input CrossRefSubSection2617_13_ra0o;
  
// Parameters for L_15_CrossRefSubSection2617
  DDL::Input CrossRefSubSection2617_15_ra0o;
  DDL::Integer CrossRefSubSection2617_15_ra1o;
  
// Parameters for L_16_CrossRefSubSection2617
  DDL::Input CrossRefSubSection2617_16_ra0o;
  
// Parameters for L_17_CrossRefSubSection2617
  DDL::Bool CrossRefSubSection2617_17_ra0u;
  DDL::Input CrossRefSubSection2617_17_ra1o;
  DDL::Input CrossRefSubSection2617_17_ra2o;
  DDL::Integer CrossRefSubSection2617_17_ra3o;
  
// Parameters for L_18_CrossRefSubSection2617
  DDL::Input CrossRefSubSection2617_18_ra2o;
  DDL::Input CrossRefSubSection2617_18_ra0o;
  DDL::Integer CrossRefSubSection2617_18_ra1o;
  
// Parameters for L_20_CrossRefSubSection2617
  DDL::Integer CrossRefSubSection2617_20_ra0o;
  DDL::Input CrossRefSubSection2617_20_ra1o;
  
// Parameters for L_21_CrossRefSubSection2617
  DDL::Input CrossRefSubSection2617_21_ra0o;
  CrossRefSubSection2617_21_ra0o = a1;
  goto CrossRefSubSection2617_21;
  // ReturnBlock (RetNo NoCapture)
  CrossRefSubSection2617_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefSubSection2617_1: {
    DDL::Array<User::CrossRefEntry> r0 = DDL::Array<User::CrossRefEntry>(CrossRefSubSection2617_1_ra0o);
    User::CrossRefSubSection r1;
    r1.init(CrossRefSubSection2617_1_ra2o, r0);
    p.popDebug();
    *_result = r1;
    *_result_input = CrossRefSubSection2617_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefSubSection2617_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefSubSection2617_3: {
    DDL::Builder<User::CrossRefEntry> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:64:15--64:36:Many_3229",
                false);
    if (parser_Many_3229(p, &CrossRefSubSection2617_1_ra0o,
                         &CrossRefSubSection2617_1_ra1o, CrossRefSubSection2617_3_ra1o,
                         DDL::UInt<64>{UINT64_C(0)}, r0, CrossRefSubSection2617_3_ra2u)) {
      CrossRefSubSection2617_1_ra2o = CrossRefSubSection2617_3_ra3o;
      goto CrossRefSubSection2617_1;
    } else {
      CrossRefSubSection2617_3_ra3o.free();
      goto CrossRefSubSection2617_0;
    }
  }
  // NormalBlock
  CrossRefSubSection2617_5: {
    DDL::UInt<64> r0 = DDL::integer_to_uint<64>(CrossRefSubSection2617_5_ra0o);
    CrossRefSubSection2617_5_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:63:36--63:47:WhiteTillEOL_",
                false);
    if (parser_WhiteTillEOL_(p, &CrossRefSubSection2617_3_ra0u,
                             &CrossRefSubSection2617_3_ra1o, CrossRefSubSection2617_5_ra2o)) {
      CrossRefSubSection2617_3_ra2u = r0;
      CrossRefSubSection2617_3_ra3o = CrossRefSubSection2617_5_ra1o;
      goto CrossRefSubSection2617_3;
    } else {
      CrossRefSubSection2617_5_ra1o.free();
      goto CrossRefSubSection2617_2;
    }
  }
  // NormalBlock
  CrossRefSubSection2617_6: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(118UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:63:15--63:33",
               CrossRefSubSection2617_6_ra0o, r0);
    CrossRefSubSection2617_6_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  CrossRefSubSection2617_7: {
    if (CrossRefSubSection2617_7_ra0u.getValue()) {
      CrossRefSubSection2617_5_ra2o = CrossRefSubSection2617_7_ra1o;
      CrossRefSubSection2617_5_ra0o = CrossRefSubSection2617_7_ra2o;
      CrossRefSubSection2617_5_ra1o = CrossRefSubSection2617_7_ra3o;
      goto CrossRefSubSection2617_5;
    } else {
      CrossRefSubSection2617_7_ra2o.free();
      CrossRefSubSection2617_7_ra3o.free();
      CrossRefSubSection2617_6_ra0o = CrossRefSubSection2617_7_ra1o;
      goto CrossRefSubSection2617_6;
    }
  }
  // NormalBlock
  CrossRefSubSection2617_8: {
    DDL::Integer r0 = DDL::Integer("18446744073709551615");
    DDL::Bool r1 = DDL::Bool{CrossRefSubSection2617_8_ra0o <= r0};
    r0.free();
    CrossRefSubSection2617_7_ra1o = CrossRefSubSection2617_8_ra2o;
    CrossRefSubSection2617_7_ra0u = r1;
    CrossRefSubSection2617_7_ra2o = CrossRefSubSection2617_8_ra0o;
    CrossRefSubSection2617_7_ra3o = CrossRefSubSection2617_8_ra1o;
    goto CrossRefSubSection2617_7;
  }
  // NormalBlock
  CrossRefSubSection2617_9: {
    CrossRefSubSection2617_7_ra1o = CrossRefSubSection2617_9_ra2o;
    CrossRefSubSection2617_7_ra0u = DDL::Bool(false);
    CrossRefSubSection2617_7_ra2o = CrossRefSubSection2617_9_ra0o;
    CrossRefSubSection2617_7_ra3o = CrossRefSubSection2617_9_ra1o;
    goto CrossRefSubSection2617_7;
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefSubSection2617_10: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefSubSection2617_11: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Bool r1 = DDL::Bool{r0 <= CrossRefSubSection2617_11_ra0o};
    r0.free();
    if (r1.getValue()) {
      CrossRefSubSection2617_8_ra2o = CrossRefSubSection2617_11_ra1o;
      CrossRefSubSection2617_8_ra0o = CrossRefSubSection2617_11_ra0o;
      CrossRefSubSection2617_8_ra1o = CrossRefSubSection2617_11_ra2o;
      goto CrossRefSubSection2617_8;
    } else {
      CrossRefSubSection2617_9_ra2o = CrossRefSubSection2617_11_ra1o;
      CrossRefSubSection2617_9_ra0o = CrossRefSubSection2617_11_ra0o;
      CrossRefSubSection2617_9_ra1o = CrossRefSubSection2617_11_ra2o;
      goto CrossRefSubSection2617_9;
    }
  }
  // NormalBlock
  CrossRefSubSection2617_13: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:62:24--62:29",
               CrossRefSubSection2617_13_ra0o, r0);
    CrossRefSubSection2617_13_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  CrossRefSubSection2617_15: {
    DDL::Input r0 = CrossRefSubSection2617_15_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:63:15--63:21:Natural",
                false);
    if (parser_Natural(p, &CrossRefSubSection2617_11_ra0o,
                       &CrossRefSubSection2617_11_ra1o, r0)) {
      CrossRefSubSection2617_11_ra2o = CrossRefSubSection2617_15_ra1o;
      goto CrossRefSubSection2617_11;
    } else {
      CrossRefSubSection2617_15_ra1o.free();
      goto CrossRefSubSection2617_10;
    }
  }
  // NormalBlock
  CrossRefSubSection2617_16: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:62:24--62:29",
               CrossRefSubSection2617_16_ra0o, r0);
    CrossRefSubSection2617_16_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock RetPure
  CrossRefSubSection2617_17: {
    if (CrossRefSubSection2617_17_ra0u.getValue()) {
      CrossRefSubSection2617_17_ra1o.free();
      CrossRefSubSection2617_15_ra0o = CrossRefSubSection2617_17_ra2o;
      CrossRefSubSection2617_15_ra1o = CrossRefSubSection2617_17_ra3o;
      goto CrossRefSubSection2617_15;
    } else {
      CrossRefSubSection2617_17_ra2o.free();
      CrossRefSubSection2617_17_ra3o.free();
      CrossRefSubSection2617_16_ra0o = CrossRefSubSection2617_17_ra1o;
      goto CrossRefSubSection2617_16;
    }
  }
  // NormalBlock
  CrossRefSubSection2617_18: {
    DDL::UInt<8> r0 = DDL::UInt<8>(CrossRefSubSection2617_18_ra0o.iHead());
    CrossRefSubSection2617_17_ra0u = parser_z24zspace(r0);
    CrossRefSubSection2617_17_ra1o = CrossRefSubSection2617_18_ra2o;
    CrossRefSubSection2617_17_ra2o = CrossRefSubSection2617_18_ra0o;
    CrossRefSubSection2617_17_ra3o = CrossRefSubSection2617_18_ra1o;
    goto CrossRefSubSection2617_17;
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefSubSection2617_19: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefSubSection2617_20: {
    DDL::Bool r0 = CrossRefSubSection2617_20_ra1o.length() == 0;
    CrossRefSubSection2617_20_ra1o.copy();
    if (r0.getValue()) {
      CrossRefSubSection2617_20_ra0o.free();
      CrossRefSubSection2617_20_ra1o.free();
      CrossRefSubSection2617_13_ra0o = CrossRefSubSection2617_20_ra1o;
      goto CrossRefSubSection2617_13;
    } else {
      CrossRefSubSection2617_18_ra2o = CrossRefSubSection2617_20_ra1o;
      CrossRefSubSection2617_18_ra0o = CrossRefSubSection2617_20_ra1o;
      CrossRefSubSection2617_18_ra1o = CrossRefSubSection2617_20_ra0o;
      goto CrossRefSubSection2617_18;
    }
  }
  // NormalBlock
  CrossRefSubSection2617_21: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:62:15--62:21:Natural",
                false);
    if (parser_Natural(p, &CrossRefSubSection2617_20_ra0o,
                       &CrossRefSubSection2617_20_ra1o, CrossRefSubSection2617_21_ra0o)) {
      goto CrossRefSubSection2617_20;
    } else {
      goto CrossRefSubSection2617_19;
    }
  }
}
bool parser_Many_3237(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<User::CrossRefSubSection>* _result,
                      DDL::Input* _result_input, DDL::Input a1, DDL::UInt<64> a2,
                      DDL::Builder<User::CrossRefSubSection> a3) {
  
// Parameters for L_1_Many3237
  DDL::Input Many3237_1_ra0o;
  
// Parameters for L_2_Many3237
  User::CrossRefSubSection Many3237_2_ra0o;
  DDL::Input Many3237_2_ra1o;
  DDL::UInt<64> Many3237_2_ra2u;
  DDL::Builder<User::CrossRefSubSection> Many3237_2_ra3o;
  
// Parameters for L_3_Many3237
  DDL::Input Many3237_3_ra0o;
  DDL::UInt<64> Many3237_3_ra1u;
  DDL::Builder<User::CrossRefSubSection> Many3237_3_ra2o;
  
// Parameters for L_4_Many3237
  DDL::Input Many3237_4_ra1o;
  DDL::Builder<User::CrossRefSubSection> Many3237_4_ra0o;
  
// Parameters for L_5_Many3237
  DDL::Input Many3237_5_ra0o;
  DDL::UInt<64> Many3237_5_ra1u;
  DDL::Builder<User::CrossRefSubSection> Many3237_5_ra2o;
  Many3237_5_ra0o = a1;
  Many3237_5_ra1u = a2;
  Many3237_5_ra2o = a3;
  goto Many3237_5;
  // ReturnBlock (RetNo NoCapture)
  Many3237_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many3237_1_ra0o, r0);
    Many3237_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Many3237_2: {
    DDL::UInt<64> r0 = Many3237_2_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<User::CrossRefSubSection> r1 = DDL::Builder<User::CrossRefSubSection>(Many3237_2_ra3o,
                                                                                       Many3237_2_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:58:5--58:33:Many_3237",
                true);
    Many3237_5_ra0o = Many3237_2_ra1o;
    Many3237_5_ra1u = r0;
    Many3237_5_ra2o = r1;
    goto Many3237_5;
  }
  // NormalBlock
  Many3237_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:58:16--58:33:CrossRefSubSection",
                false);
    Many3237_3_ra0o.copy();
    if (parser_CrossRefSubSection(p, &Many3237_2_ra0o,
                                  &Many3237_2_ra1o, Many3237_3_ra0o)) {
      Many3237_3_ra0o.free();
      Many3237_2_ra2u = Many3237_3_ra1u;
      Many3237_2_ra3o = Many3237_3_ra2o;
      goto Many3237_2;
    } else {
      Many3237_3_ra2o.free();
      Many3237_1_ra0o = Many3237_3_ra0o;
      goto Many3237_1;
    }
  }
  // NormalBlock
  Many3237_4: {
    p.popDebug();
    *_result = Many3237_4_ra0o;
    *_result_input = Many3237_4_ra1o;
    return true;
  }
  // NormalBlock
  Many3237_5: {
    DDL::Bool r0 = DDL::Bool{Many3237_5_ra1u < DDL::UInt<64>{UINT64_C(1)}};
    if (r0.getValue()) {
      Many3237_3_ra0o = Many3237_5_ra0o;
      Many3237_3_ra1u = Many3237_5_ra1u;
      Many3237_3_ra2o = Many3237_5_ra2o;
      goto Many3237_3;
    } else {
      Many3237_4_ra1o = Many3237_5_ra0o;
      Many3237_4_ra0o = Many3237_5_ra2o;
      goto Many3237_4;
    }
  }
}
bool parser_Many_3242(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<User::CrossRefSubSection>* _result,
                      DDL::Input* _result_input, DDL::Input a1,
                      DDL::Builder<User::CrossRefSubSection> a2) {
  
// Parameters for L_0_Many3242
  DDL::Input Many3242_0_ra2o;
  DDL::Builder<User::CrossRefSubSection> Many3242_0_ra0o;
  DDL::Maybe<User::CrossRefSubSection> Many3242_0_ra1o;
  
// Parameters for L_1_Many3242
  DDL::Input Many3242_1_ra1o;
  DDL::Builder<User::CrossRefSubSection> Many3242_1_ra0o;
  
// Parameters for L_2_Many3242
  DDL::Maybe<User::CrossRefSubSection> Many3242_2_ra0o;
  DDL::Input Many3242_2_ra2o;
  DDL::Builder<User::CrossRefSubSection> Many3242_2_ra1o;
  
// Parameters for L_4_Many3242
  DDL::Input Many3242_4_ra0o;
  DDL::Builder<User::CrossRefSubSection> Many3242_4_ra1o;
  
// Parameters for L_5_Many3242
  User::CrossRefSubSection Many3242_5_ra0o;
  DDL::Input Many3242_5_ra1o;
  DDL::Builder<User::CrossRefSubSection> Many3242_5_ra2o;
  
// Parameters for L_6_Many3242
  DDL::Input Many3242_6_ra0o;
  DDL::Builder<User::CrossRefSubSection> Many3242_6_ra1o;
  Many3242_6_ra0o = a1;
  Many3242_6_ra1o = a2;
  goto Many3242_6;
  // NormalBlock
  Many3242_0: {
    User::CrossRefSubSection r0 = Many3242_0_ra1o.getValue();
    Many3242_0_ra1o.free();
    DDL::Builder<User::CrossRefSubSection> r1 = DDL::Builder<User::CrossRefSubSection>(Many3242_0_ra0o,
                                                                                       r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:58:5--58:33:Many_3242",
                true);
    Many3242_6_ra0o = Many3242_0_ra2o;
    Many3242_6_ra1o = r1;
    goto Many3242_6;
  }
  // NormalBlock
  Many3242_1: {
    p.popDebug();
    *_result = Many3242_1_ra0o;
    *_result_input = Many3242_1_ra1o;
    return true;
  }
  // NormalBlock
  Many3242_2: {
    if (Many3242_2_ra0o.isJust()) {
      Many3242_0_ra2o = Many3242_2_ra2o;
      Many3242_0_ra0o = Many3242_2_ra1o;
      Many3242_0_ra1o = Many3242_2_ra0o;
      goto Many3242_0;
    } else {
      Many3242_2_ra0o.free();
      Many3242_1_ra1o = Many3242_2_ra2o;
      Many3242_1_ra0o = Many3242_2_ra1o;
      goto Many3242_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many3242_4: {
    Many3242_2_ra0o = (DDL::Maybe<User::CrossRefSubSection>());
    Many3242_2_ra2o = Many3242_4_ra0o;
    Many3242_2_ra1o = Many3242_4_ra1o;
    goto Many3242_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many3242_5: {
    DDL::Maybe<User::CrossRefSubSection> r0 = DDL::Maybe<User::CrossRefSubSection>(Many3242_5_ra0o);
    Many3242_2_ra0o = r0;
    Many3242_2_ra2o = Many3242_5_ra1o;
    Many3242_2_ra1o = Many3242_5_ra2o;
    goto Many3242_2;
  }
  // NormalBlock
  Many3242_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:58:16--58:33:CrossRefSubSection",
                false);
    Many3242_6_ra0o.copy();
    Many3242_6_ra1o.copy();
    if (parser_CrossRefSubSection(p, &Many3242_5_ra0o,
                                  &Many3242_5_ra1o, Many3242_6_ra0o)) {
      Many3242_6_ra0o.free();
      Many3242_6_ra1o.free();
      Many3242_5_ra2o = Many3242_6_ra1o;
      goto Many3242_5;
    } else {
      Many3242_6_ra1o.free();
      Many3242_4_ra0o = Many3242_6_ra0o;
      Many3242_4_ra1o = Many3242_6_ra1o;
      goto Many3242_4;
    }
  }
}
bool parser_CrossRefSection(DDL::ParserStateUser<ReferenceTable> &p,
                            DDL::Array<User::CrossRefSubSection>* _result,
                            DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_1_CrossRefSection2618
  DDL::Builder<User::CrossRefSubSection> CrossRefSection2618_1_ra0o;
  DDL::Input CrossRefSection2618_1_ra1o;
  
// Parameters for L_3_CrossRefSection2618
  DDL::Builder<User::CrossRefSubSection> CrossRefSection2618_3_ra0o;
  DDL::Input CrossRefSection2618_3_ra1o;
  
// Parameters for L_5_CrossRefSection2618
  DDL::Unit CrossRefSection2618_5_ra0u;
  DDL::Input CrossRefSection2618_5_ra1o;
  
// Parameters for L_7_CrossRefSection2618
  DDL::Array<DDL::UInt<8>> CrossRefSection2618_7_ra0o;
  DDL::Input CrossRefSection2618_7_ra1o;
  
// Parameters for L_8_CrossRefSection2618
  DDL::Input CrossRefSection2618_8_ra0o;
  
// Parameters for L_10_CrossRefSection2618
  DDL::Unit CrossRefSection2618_10_ra0u;
  DDL::Input CrossRefSection2618_10_ra1o;
  
// Parameters for L_11_CrossRefSection2618
  DDL::Input CrossRefSection2618_11_ra0o;
  CrossRefSection2618_11_ra0o = a1;
  goto CrossRefSection2618_11;
  // ReturnBlock (RetNo NoCapture)
  CrossRefSection2618_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefSection2618_1: {
    DDL::Array<User::CrossRefSubSection> r0 = DDL::Array<User::CrossRefSubSection>(CrossRefSection2618_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = CrossRefSection2618_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefSection2618_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefSection2618_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:58:5--58:33:Many_3242",
                false);
    if (parser_Many_3242(p, &CrossRefSection2618_1_ra0o,
                         &CrossRefSection2618_1_ra1o, CrossRefSection2618_3_ra1o,
                         CrossRefSection2618_3_ra0o)) {
      goto CrossRefSection2618_1;
    } else {
      goto CrossRefSection2618_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefSection2618_4: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefSection2618_5: {
    DDL::Builder<User::CrossRefSubSection> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:58:5--58:33:Many_3237",
                false);
    if (parser_Many_3237(p, &CrossRefSection2618_3_ra0o,
                         &CrossRefSection2618_3_ra1o, CrossRefSection2618_5_ra1o,
                         DDL::UInt<64>{UINT64_C(0)}, r0)) {
      goto CrossRefSection2618_3;
    } else {
      goto CrossRefSection2618_2;
    }
  }
  // NormalBlock
  CrossRefSection2618_7: {
    DDL::UInt<64> r0 = DDL::UInt<64>{CrossRefSection2618_7_ra0o.size().rep()};
    CrossRefSection2618_7_ra0o.free();
    DDL::Input r1 = CrossRefSection2618_7_ra1o.iDrop(DDL::Size::from(r0.rep()));
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:57:19--57:30:WhiteTillEOL_",
                false);
    if (parser_WhiteTillEOL_(p, &CrossRefSection2618_5_ra0u,
                             &CrossRefSection2618_5_ra1o, r1)) {
      goto CrossRefSection2618_5;
    } else {
      goto CrossRefSection2618_4;
    }
  }
  // NormalBlock
  CrossRefSection2618_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL)};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(120UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(102UL)};
    DDL::Array<DDL::Array<DDL::UInt<8>>> r2 = DDL::Array<DDL::Array<DDL::UInt<8>>>{r0,
                                                                                   r1};
    DDL::Array<DDL::UInt<8>> r3 = DDL::Array<DDL::UInt<8>>(r2);
    r2.free();
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:57:5--57:16",
               CrossRefSection2618_8_ra0o, r3);
    CrossRefSection2618_8_ra0o.free();
    r3.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefSection2618_9: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefSection2618_10: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(120UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(102UL)};
    DDL::Bool r1 = CrossRefSection2618_10_ra1o.hasPrefix(r0);
    if (r1.getValue()) {
      CrossRefSection2618_7_ra0o = r0;
      CrossRefSection2618_7_ra1o = CrossRefSection2618_10_ra1o;
      goto CrossRefSection2618_7;
    } else {
      r0.free();
      CrossRefSection2618_8_ra0o = CrossRefSection2618_10_ra1o;
      goto CrossRefSection2618_8;
    }
  }
  // NormalBlock
  CrossRefSection2618_11: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:56:5--56:10:ManyWS_",
                false);
    if (parser_ManyWS_(p, &CrossRefSection2618_10_ra0u,
                       &CrossRefSection2618_10_ra1o, CrossRefSection2618_11_ra0o)) {
      goto CrossRefSection2618_10;
    } else {
      goto CrossRefSection2618_9;
    }
  }
}
bool parser_TrailerIds(DDL::ParserStateUser<ReferenceTable> &p,
                       User::TrailerIds* _result, DDL::Input* _result_input,
                       DDL::Input a1,
                       DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2) {
  
// Parameters for L_0_TrailerIds2619
  DDL::Input TrailerIds2619_0_ra0o;
  
// Parameters for L_2_TrailerIds2619
  DDL::Input TrailerIds2619_2_ra2o;
  User::Value TrailerIds2619_2_ra0o;
  DDL::Array<DDL::UInt<8>> TrailerIds2619_2_ra1o;
  
// Parameters for L_3_TrailerIds2619
  DDL::Input TrailerIds2619_3_ra0o;
  
// Parameters for L_5_TrailerIds2619
  DDL::Input TrailerIds2619_5_ra0o;
  
// Parameters for L_6_TrailerIds2619
  DDL::Input TrailerIds2619_6_ra3o;
  DDL::Array<User::Value> TrailerIds2619_6_ra0o;
  DDL::UInt<64> TrailerIds2619_6_ra1u;
  DDL::Array<DDL::UInt<8>> TrailerIds2619_6_ra2o;
  
// Parameters for L_8_TrailerIds2619
  DDL::Input TrailerIds2619_8_ra2o;
  User::Value TrailerIds2619_8_ra0o;
  DDL::Array<User::Value> TrailerIds2619_8_ra1o;
  
// Parameters for L_9_TrailerIds2619
  DDL::Input TrailerIds2619_9_ra0o;
  
// Parameters for L_11_TrailerIds2619
  DDL::Input TrailerIds2619_11_ra0o;
  
// Parameters for L_12_TrailerIds2619
  DDL::Input TrailerIds2619_12_ra3o;
  DDL::Array<User::Value> TrailerIds2619_12_ra0o;
  DDL::UInt<64> TrailerIds2619_12_ra1u;
  DDL::Array<User::Value> TrailerIds2619_12_ra2o;
  
// Parameters for L_14_TrailerIds2619
  DDL::Input TrailerIds2619_14_ra1o;
  DDL::Array<User::Value> TrailerIds2619_14_ra0o;
  
// Parameters for L_15_TrailerIds2619
  DDL::Input TrailerIds2619_15_ra0o;
  
// Parameters for L_17_TrailerIds2619
  DDL::Input TrailerIds2619_17_ra1o;
  User::Value TrailerIds2619_17_ra0o;
  
// Parameters for L_18_TrailerIds2619
  DDL::Input TrailerIds2619_18_ra0o;
  
// Parameters for L_19_TrailerIds2619
  DDL::Input TrailerIds2619_19_ra1o;
  DDL::Maybe<User::Value> TrailerIds2619_19_ra0o;
  
// Parameters for L_20_TrailerIds2619
  DDL::Input TrailerIds2619_20_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerIds2619_20_ra1o;
  TrailerIds2619_20_ra0o = a1;
  TrailerIds2619_20_ra1o = a2;
  goto TrailerIds2619_20;
  // NormalBlock
  TrailerIds2619_0: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{};
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{};
    User::TrailerIds r2;
    r2.init(r0, r1);
    p.popDebug();
    *_result = r2;
    *_result_input = TrailerIds2619_0_ra0o;
    return true;
  }
  // NormalBlock
  TrailerIds2619_2: {
    DDL::Array<DDL::UInt<8>> r0 = TrailerIds2619_2_ra0o.get_string();
    TrailerIds2619_2_ra0o.free();
    User::TrailerIds r1;
    r1.init(TrailerIds2619_2_ra1o, r0);
    p.popDebug();
    *_result = r1;
    *_result_input = TrailerIds2619_2_ra2o;
    return true;
  }
  // NormalBlock
  TrailerIds2619_3: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:255:15--255:35",
               TrailerIds2619_3_ra0o, r0);
    TrailerIds2619_3_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  TrailerIds2619_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(120UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:255:15--255:23",
               TrailerIds2619_5_ra0o, r0);
    TrailerIds2619_5_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  TrailerIds2619_6: {
    User::Value r0 = TrailerIds2619_6_ra0o[DDL::Size::from(TrailerIds2619_6_ra1u.rep())];
    TrailerIds2619_6_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::string:
        TrailerIds2619_2_ra2o = TrailerIds2619_6_ra3o;
        TrailerIds2619_2_ra0o = r0;
        TrailerIds2619_2_ra1o = TrailerIds2619_6_ra2o;
        goto TrailerIds2619_2;
      default:
        TrailerIds2619_6_ra2o.free();
        r0.free();
        TrailerIds2619_3_ra0o = TrailerIds2619_6_ra3o;
        goto TrailerIds2619_3;
    }
  }
  // NormalBlock
  TrailerIds2619_8: {
    DDL::Array<DDL::UInt<8>> r0 = TrailerIds2619_8_ra0o.get_string();
    TrailerIds2619_8_ra0o.free();
    DDL::UInt<64> r1 = DDL::UInt<64>{TrailerIds2619_8_ra1o.size().rep()};
    DDL::Bool r2 = DDL::Bool{r1 <= DDL::UInt<64>{UINT64_C(1)}};
    if (r2.getValue()) {
      TrailerIds2619_8_ra1o.free();
      r0.free();
      TrailerIds2619_5_ra0o = TrailerIds2619_8_ra2o;
      goto TrailerIds2619_5;
    } else {
      TrailerIds2619_6_ra3o = TrailerIds2619_8_ra2o;
      TrailerIds2619_6_ra0o = TrailerIds2619_8_ra1o;
      TrailerIds2619_6_ra1u = DDL::UInt<64>{UINT64_C(1)};
      TrailerIds2619_6_ra2o = r0;
      goto TrailerIds2619_6;
    }
  }
  // NormalBlock
  TrailerIds2619_9: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:254:15--254:35",
               TrailerIds2619_9_ra0o, r0);
    TrailerIds2619_9_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  TrailerIds2619_11: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(120UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:254:15--254:23",
               TrailerIds2619_11_ra0o, r0);
    TrailerIds2619_11_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  TrailerIds2619_12: {
    User::Value r0 = TrailerIds2619_12_ra0o[DDL::Size::from(TrailerIds2619_12_ra1u.rep())];
    TrailerIds2619_12_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::string:
        TrailerIds2619_8_ra2o = TrailerIds2619_12_ra3o;
        TrailerIds2619_8_ra0o = r0;
        TrailerIds2619_8_ra1o = TrailerIds2619_12_ra2o;
        goto TrailerIds2619_8;
      default:
        TrailerIds2619_12_ra2o.free();
        r0.free();
        TrailerIds2619_9_ra0o = TrailerIds2619_12_ra3o;
        goto TrailerIds2619_9;
    }
  }
  // NormalBlock
  TrailerIds2619_14: {
    DDL::UInt<64> r0 = DDL::UInt<64>{TrailerIds2619_14_ra0o.size().rep()};
    DDL::Bool r1 = DDL::Bool{r0 <= DDL::UInt<64>{UINT64_C(0)}};
    TrailerIds2619_14_ra0o.copy();
    if (r1.getValue()) {
      TrailerIds2619_14_ra0o.free();
      TrailerIds2619_14_ra0o.free();
      TrailerIds2619_11_ra0o = TrailerIds2619_14_ra1o;
      goto TrailerIds2619_11;
    } else {
      TrailerIds2619_12_ra3o = TrailerIds2619_14_ra1o;
      TrailerIds2619_12_ra0o = TrailerIds2619_14_ra0o;
      TrailerIds2619_12_ra1u = DDL::UInt<64>{UINT64_C(0)};
      TrailerIds2619_12_ra2o = TrailerIds2619_14_ra0o;
      goto TrailerIds2619_12;
    }
  }
  // NormalBlock
  TrailerIds2619_15: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:253:10--253:33",
               TrailerIds2619_15_ra0o, r0);
    TrailerIds2619_15_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  TrailerIds2619_17: {
    DDL::Array<User::Value> r0 = TrailerIds2619_17_ra0o.get_array();
    TrailerIds2619_17_ra0o.free();
    DDL::UInt<64> r1 = DDL::UInt<64>{r0.size().rep()};
    DDL::Bool r2 = DDL::Bool{r1 == DDL::UInt<64>{UINT64_C(2)}};
    if (r2.getValue()) {
      TrailerIds2619_14_ra1o = TrailerIds2619_17_ra1o;
      TrailerIds2619_14_ra0o = r0;
      goto TrailerIds2619_14;
    } else {
      r0.free();
      TrailerIds2619_15_ra0o = TrailerIds2619_17_ra1o;
      goto TrailerIds2619_15;
    }
  }
  // NormalBlock
  TrailerIds2619_18: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:252:19--252:28",
               TrailerIds2619_18_ra0o, r0);
    TrailerIds2619_18_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  TrailerIds2619_19: {
    User::Value r0 = TrailerIds2619_19_ra0o.getValue();
    TrailerIds2619_19_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::array:
        TrailerIds2619_17_ra1o = TrailerIds2619_19_ra1o;
        TrailerIds2619_17_ra0o = r0;
        goto TrailerIds2619_17;
      default:
        r0.free();
        TrailerIds2619_18_ra0o = TrailerIds2619_19_ra1o;
        goto TrailerIds2619_18;
    }
  }
  // NormalBlock
  TrailerIds2619_20: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(73UL),
                                                           DDL::UInt<8>(68UL)};
    DDL::Maybe<User::Value> r1 = TrailerIds2619_20_ra1o.lookup(r0);
    TrailerIds2619_20_ra1o.free();
    r0.free();
    if (r1.isJust()) {
      TrailerIds2619_19_ra1o = TrailerIds2619_20_ra0o;
      TrailerIds2619_19_ra0o = r1;
      goto TrailerIds2619_19;
    } else {
      r1.free();
      TrailerIds2619_0_ra0o = TrailerIds2619_20_ra0o;
      goto TrailerIds2619_0;
    }
  }
}
bool parser_TrailerDictEncrypt(DDL::ParserStateUser<ReferenceTable> &p,
                               User::TrailerDictEncrypt* _result, DDL::Input* _result_input,
                               DDL::Input a1, DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2,
                               User::Value a3) {
  
// Parameters for L_1_TrailerDictEncrypt2620
  User::TrailerIds TrailerDictEncrypt2620_1_ra0o;
  DDL::Input TrailerDictEncrypt2620_1_ra1o;
  User::Value TrailerDictEncrypt2620_1_ra2o;
  User::Ref TrailerDictEncrypt2620_1_ra3o;
  
// Parameters for L_3_TrailerDictEncrypt2620
  DDL::Input TrailerDictEncrypt2620_3_ra2o;
  User::Value TrailerDictEncrypt2620_3_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDictEncrypt2620_3_ra1o;
  
// Parameters for L_4_TrailerDictEncrypt2620
  DDL::Input TrailerDictEncrypt2620_4_ra0o;
  
// Parameters for L_5_TrailerDictEncrypt2620
  DDL::Input TrailerDictEncrypt2620_5_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDictEncrypt2620_5_ra1o;
  User::Value TrailerDictEncrypt2620_5_ra2o;
  TrailerDictEncrypt2620_5_ra0o = a1;
  TrailerDictEncrypt2620_5_ra1o = a2;
  TrailerDictEncrypt2620_5_ra2o = a3;
  goto TrailerDictEncrypt2620_5;
  // ReturnBlock (RetNo NoCapture)
  TrailerDictEncrypt2620_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  TrailerDictEncrypt2620_1: {
    DDL::Array<DDL::UInt<8>> r0 = TrailerDictEncrypt2620_1_ra0o.get_id0();
    DDL::Array<DDL::UInt<8>> r1 = TrailerDictEncrypt2620_1_ra0o.get_id1();
    TrailerDictEncrypt2620_1_ra0o.free();
    User::TrailerDictEncrypt r2;
    r2.init(TrailerDictEncrypt2620_1_ra2o,
            TrailerDictEncrypt2620_1_ra3o, r0, r1);
    p.popDebug();
    *_result = r2;
    *_result_input = TrailerDictEncrypt2620_1_ra1o;
    return true;
  }
  // NormalBlock
  TrailerDictEncrypt2620_3: {
    User::Ref r0 = TrailerDictEncrypt2620_3_ra0o.get_ref();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:238:13--238:30:TrailerIds",
                false);
    if (parser_TrailerIds(p, &TrailerDictEncrypt2620_1_ra0o,
                          &TrailerDictEncrypt2620_1_ra1o, TrailerDictEncrypt2620_3_ra2o,
                          TrailerDictEncrypt2620_3_ra1o)) {
      TrailerDictEncrypt2620_1_ra2o = TrailerDictEncrypt2620_3_ra0o;
      TrailerDictEncrypt2620_1_ra3o = r0;
      goto TrailerDictEncrypt2620_1;
    } else {
      TrailerDictEncrypt2620_3_ra0o.free();
      r0.free();
      goto TrailerDictEncrypt2620_0;
    }
  }
  // NormalBlock
  TrailerDictEncrypt2620_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:237:12--237:19",
               TrailerDictEncrypt2620_4_ra0o, r0);
    TrailerDictEncrypt2620_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  TrailerDictEncrypt2620_5: {
    switch (TrailerDictEncrypt2620_5_ra2o.getTag()) {
      case DDL::Tag::Value::ref:
        TrailerDictEncrypt2620_3_ra2o = TrailerDictEncrypt2620_5_ra0o;
        TrailerDictEncrypt2620_3_ra0o = TrailerDictEncrypt2620_5_ra2o;
        TrailerDictEncrypt2620_3_ra1o = TrailerDictEncrypt2620_5_ra1o;
        goto TrailerDictEncrypt2620_3;
      default:
        TrailerDictEncrypt2620_5_ra1o.free();
        TrailerDictEncrypt2620_5_ra2o.free();
        TrailerDictEncrypt2620_4_ra0o = TrailerDictEncrypt2620_5_ra0o;
        goto TrailerDictEncrypt2620_4;
    }
  }
}
bool parser_TrailerDict(DDL::ParserStateUser<ReferenceTable> &p,
                        User::TrailerDict* _result, DDL::Input* _result_input,
                        DDL::Input a1,
                        DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2) {
  
// Parameters for L_0_TrailerDict2621
  DDL::Maybe<User::TrailerDictEncrypt> TrailerDict2621_0_ra0o;
  DDL::Input TrailerDict2621_0_ra6o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_0_ra1o;
  DDL::Integer TrailerDict2621_0_ra2o;
  DDL::Maybe<User::Ref> TrailerDict2621_0_ra3o;
  DDL::Maybe<DDL::Integer> TrailerDict2621_0_ra4o;
  DDL::Maybe<DDL::Integer> TrailerDict2621_0_ra5o;
  
// Parameters for L_1_TrailerDict2621
  DDL::Input TrailerDict2621_1_ra5o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_1_ra0o;
  DDL::Integer TrailerDict2621_1_ra1o;
  DDL::Maybe<User::Ref> TrailerDict2621_1_ra2o;
  DDL::Maybe<DDL::Integer> TrailerDict2621_1_ra3o;
  DDL::Maybe<DDL::Integer> TrailerDict2621_1_ra4o;
  
// Parameters for L_3_TrailerDict2621
  User::TrailerDictEncrypt TrailerDict2621_3_ra0o;
  DDL::Input TrailerDict2621_3_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_3_ra2o;
  DDL::Integer TrailerDict2621_3_ra3o;
  DDL::Maybe<User::Ref> TrailerDict2621_3_ra4o;
  DDL::Maybe<DDL::Integer> TrailerDict2621_3_ra5o;
  DDL::Maybe<DDL::Integer> TrailerDict2621_3_ra6o;
  
// Parameters for L_4_TrailerDict2621
  DDL::Input TrailerDict2621_4_ra6o;
  DDL::Maybe<User::Value> TrailerDict2621_4_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_4_ra1o;
  DDL::Integer TrailerDict2621_4_ra2o;
  DDL::Maybe<User::Ref> TrailerDict2621_4_ra3o;
  DDL::Maybe<DDL::Integer> TrailerDict2621_4_ra4o;
  DDL::Maybe<DDL::Integer> TrailerDict2621_4_ra5o;
  
// Parameters for L_5_TrailerDict2621
  DDL::Maybe<DDL::Integer> TrailerDict2621_5_ra0o;
  DDL::Input TrailerDict2621_5_ra5o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_5_ra1o;
  DDL::Integer TrailerDict2621_5_ra2o;
  DDL::Maybe<User::Ref> TrailerDict2621_5_ra3o;
  DDL::Maybe<DDL::Integer> TrailerDict2621_5_ra4o;
  
// Parameters for L_7_TrailerDict2621
  DDL::Input TrailerDict2621_7_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_7_ra1o;
  DDL::Integer TrailerDict2621_7_ra2o;
  DDL::Maybe<User::Ref> TrailerDict2621_7_ra3o;
  DDL::Maybe<DDL::Integer> TrailerDict2621_7_ra4o;
  
// Parameters for L_8_TrailerDict2621
  DDL::Integer TrailerDict2621_8_ra0o;
  DDL::Input TrailerDict2621_8_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_8_ra2o;
  DDL::Integer TrailerDict2621_8_ra3o;
  DDL::Maybe<User::Ref> TrailerDict2621_8_ra4o;
  DDL::Maybe<DDL::Integer> TrailerDict2621_8_ra5o;
  
// Parameters for L_9_TrailerDict2621
  DDL::Maybe<DDL::Integer> TrailerDict2621_9_ra0o;
  DDL::Input TrailerDict2621_9_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_9_ra2o;
  DDL::Integer TrailerDict2621_9_ra3o;
  DDL::Maybe<User::Ref> TrailerDict2621_9_ra4o;
  
// Parameters for L_11_TrailerDict2621
  DDL::Input TrailerDict2621_11_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_11_ra1o;
  DDL::Integer TrailerDict2621_11_ra2o;
  DDL::Maybe<User::Ref> TrailerDict2621_11_ra3o;
  
// Parameters for L_12_TrailerDict2621
  DDL::Integer TrailerDict2621_12_ra0o;
  DDL::Input TrailerDict2621_12_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_12_ra2o;
  DDL::Integer TrailerDict2621_12_ra3o;
  DDL::Maybe<User::Ref> TrailerDict2621_12_ra4o;
  
// Parameters for L_13_TrailerDict2621
  DDL::Maybe<User::Ref> TrailerDict2621_13_ra0o;
  DDL::Input TrailerDict2621_13_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_13_ra2o;
  DDL::Integer TrailerDict2621_13_ra3o;
  
// Parameters for L_14_TrailerDict2621
  DDL::Input TrailerDict2621_14_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_14_ra0o;
  DDL::Integer TrailerDict2621_14_ra1o;
  
// Parameters for L_16_TrailerDict2621
  DDL::Input TrailerDict2621_16_ra3o;
  User::Value TrailerDict2621_16_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_16_ra1o;
  DDL::Integer TrailerDict2621_16_ra2o;
  
// Parameters for L_17_TrailerDict2621
  DDL::Input TrailerDict2621_17_ra0o;
  
// Parameters for L_18_TrailerDict2621
  DDL::Input TrailerDict2621_18_ra3o;
  DDL::Maybe<User::Value> TrailerDict2621_18_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_18_ra1o;
  DDL::Integer TrailerDict2621_18_ra2o;
  
// Parameters for L_20_TrailerDict2621
  DDL::Integer TrailerDict2621_20_ra0o;
  DDL::Input TrailerDict2621_20_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_20_ra2o;
  
// Parameters for L_21_TrailerDict2621
  DDL::Input TrailerDict2621_21_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> TrailerDict2621_21_ra1o;
  TrailerDict2621_21_ra0o = a1;
  TrailerDict2621_21_ra1o = a2;
  goto TrailerDict2621_21;
  // NormalBlock
  TrailerDict2621_0: {
    User::TrailerDict r0;
    r0.init(TrailerDict2621_0_ra2o, TrailerDict2621_0_ra3o,
            TrailerDict2621_0_ra4o, TrailerDict2621_0_ra5o,
            TrailerDict2621_0_ra0o, TrailerDict2621_0_ra1o);
    p.popDebug();
    *_result = r0;
    *_result_input = TrailerDict2621_0_ra6o;
    return true;
  }
  // NormalBlock
  TrailerDict2621_1: {
    TrailerDict2621_0_ra0o = (DDL::Maybe<User::TrailerDictEncrypt>());
    TrailerDict2621_0_ra6o = TrailerDict2621_1_ra5o;
    TrailerDict2621_0_ra1o = TrailerDict2621_1_ra0o;
    TrailerDict2621_0_ra2o = TrailerDict2621_1_ra1o;
    TrailerDict2621_0_ra3o = TrailerDict2621_1_ra2o;
    TrailerDict2621_0_ra4o = TrailerDict2621_1_ra3o;
    TrailerDict2621_0_ra5o = TrailerDict2621_1_ra4o;
    goto TrailerDict2621_0;
  }
  // ReturnBlock (RetNo NoCapture)
  TrailerDict2621_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  TrailerDict2621_3: {
    DDL::Maybe<User::TrailerDictEncrypt> r0 = DDL::Maybe<User::TrailerDictEncrypt>(TrailerDict2621_3_ra0o);
    TrailerDict2621_0_ra0o = r0;
    TrailerDict2621_0_ra6o = TrailerDict2621_3_ra1o;
    TrailerDict2621_0_ra1o = TrailerDict2621_3_ra2o;
    TrailerDict2621_0_ra2o = TrailerDict2621_3_ra3o;
    TrailerDict2621_0_ra3o = TrailerDict2621_3_ra4o;
    TrailerDict2621_0_ra4o = TrailerDict2621_3_ra5o;
    TrailerDict2621_0_ra5o = TrailerDict2621_3_ra6o;
    goto TrailerDict2621_0;
  }
  // NormalBlock
  TrailerDict2621_4: {
    User::Value r0 = TrailerDict2621_4_ra0o.getValue();
    TrailerDict2621_4_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:228:34--228:58:TrailerDictEncrypt",
                false);
    TrailerDict2621_4_ra1o.copy();
    if (parser_TrailerDictEncrypt(p, &TrailerDict2621_3_ra0o,
                                  &TrailerDict2621_3_ra1o, TrailerDict2621_4_ra6o,
                                  TrailerDict2621_4_ra1o, r0)) {
      TrailerDict2621_3_ra2o = TrailerDict2621_4_ra1o;
      TrailerDict2621_3_ra3o = TrailerDict2621_4_ra2o;
      TrailerDict2621_3_ra4o = TrailerDict2621_4_ra3o;
      TrailerDict2621_3_ra5o = TrailerDict2621_4_ra4o;
      TrailerDict2621_3_ra6o = TrailerDict2621_4_ra5o;
      goto TrailerDict2621_3;
    } else {
      TrailerDict2621_4_ra1o.free();
      TrailerDict2621_4_ra2o.free();
      TrailerDict2621_4_ra3o.free();
      TrailerDict2621_4_ra4o.free();
      TrailerDict2621_4_ra5o.free();
      goto TrailerDict2621_2;
    }
  }
  // NormalBlock
  TrailerDict2621_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(69UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(116UL)};
    DDL::Maybe<User::Value> r1 = TrailerDict2621_5_ra1o.lookup(r0);
    r0.free();
    if (r1.isJust()) {
      TrailerDict2621_4_ra6o = TrailerDict2621_5_ra5o;
      TrailerDict2621_4_ra0o = r1;
      TrailerDict2621_4_ra1o = TrailerDict2621_5_ra1o;
      TrailerDict2621_4_ra2o = TrailerDict2621_5_ra2o;
      TrailerDict2621_4_ra3o = TrailerDict2621_5_ra3o;
      TrailerDict2621_4_ra4o = TrailerDict2621_5_ra4o;
      TrailerDict2621_4_ra5o = TrailerDict2621_5_ra0o;
      goto TrailerDict2621_4;
    } else {
      r1.free();
      TrailerDict2621_1_ra5o = TrailerDict2621_5_ra5o;
      TrailerDict2621_1_ra0o = TrailerDict2621_5_ra1o;
      TrailerDict2621_1_ra1o = TrailerDict2621_5_ra2o;
      TrailerDict2621_1_ra2o = TrailerDict2621_5_ra3o;
      TrailerDict2621_1_ra3o = TrailerDict2621_5_ra4o;
      TrailerDict2621_1_ra4o = TrailerDict2621_5_ra0o;
      goto TrailerDict2621_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  TrailerDict2621_7: {
    TrailerDict2621_5_ra0o = (DDL::Maybe<DDL::Integer>());
    TrailerDict2621_5_ra5o = TrailerDict2621_7_ra0o;
    TrailerDict2621_5_ra1o = TrailerDict2621_7_ra1o;
    TrailerDict2621_5_ra2o = TrailerDict2621_7_ra2o;
    TrailerDict2621_5_ra3o = TrailerDict2621_7_ra3o;
    TrailerDict2621_5_ra4o = TrailerDict2621_7_ra4o;
    goto TrailerDict2621_5;
  }
  // ReturnBlock (RetYes NoCapture)
  TrailerDict2621_8: {
    DDL::Maybe<DDL::Integer> r0 = DDL::Maybe<DDL::Integer>(TrailerDict2621_8_ra0o);
    TrailerDict2621_5_ra0o = r0;
    TrailerDict2621_5_ra5o = TrailerDict2621_8_ra1o;
    TrailerDict2621_5_ra1o = TrailerDict2621_8_ra2o;
    TrailerDict2621_5_ra2o = TrailerDict2621_8_ra3o;
    TrailerDict2621_5_ra3o = TrailerDict2621_8_ra4o;
    TrailerDict2621_5_ra4o = TrailerDict2621_8_ra5o;
    goto TrailerDict2621_5;
  }
  // NormalBlock
  TrailerDict2621_9: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(88UL),
                                                           DDL::UInt<8>(82UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(83UL),
                                                           DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(109UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:225:25--225:48:LookupNat",
                false);
    TrailerDict2621_9_ra1o.copy();
    TrailerDict2621_9_ra2o.copy();
    TrailerDict2621_9_ra2o.copy();
    TrailerDict2621_9_ra3o.copy();
    TrailerDict2621_9_ra4o.copy();
    TrailerDict2621_9_ra0o.copy();
    if (parser_LookupNat(p, &TrailerDict2621_8_ra0o,
                         &TrailerDict2621_8_ra1o, TrailerDict2621_9_ra1o, r0,
                         TrailerDict2621_9_ra2o)) {
      TrailerDict2621_9_ra1o.free();
      TrailerDict2621_9_ra2o.free();
      TrailerDict2621_9_ra3o.free();
      TrailerDict2621_9_ra4o.free();
      TrailerDict2621_9_ra0o.free();
      TrailerDict2621_8_ra2o = TrailerDict2621_9_ra2o;
      TrailerDict2621_8_ra3o = TrailerDict2621_9_ra3o;
      TrailerDict2621_8_ra4o = TrailerDict2621_9_ra4o;
      TrailerDict2621_8_ra5o = TrailerDict2621_9_ra0o;
      goto TrailerDict2621_8;
    } else {
      TrailerDict2621_9_ra2o.free();
      TrailerDict2621_9_ra3o.free();
      TrailerDict2621_9_ra4o.free();
      TrailerDict2621_9_ra0o.free();
      TrailerDict2621_7_ra0o = TrailerDict2621_9_ra1o;
      TrailerDict2621_7_ra1o = TrailerDict2621_9_ra2o;
      TrailerDict2621_7_ra2o = TrailerDict2621_9_ra3o;
      TrailerDict2621_7_ra3o = TrailerDict2621_9_ra4o;
      TrailerDict2621_7_ra4o = TrailerDict2621_9_ra0o;
      goto TrailerDict2621_7;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  TrailerDict2621_11: {
    TrailerDict2621_9_ra0o = (DDL::Maybe<DDL::Integer>());
    TrailerDict2621_9_ra1o = TrailerDict2621_11_ra0o;
    TrailerDict2621_9_ra2o = TrailerDict2621_11_ra1o;
    TrailerDict2621_9_ra3o = TrailerDict2621_11_ra2o;
    TrailerDict2621_9_ra4o = TrailerDict2621_11_ra3o;
    goto TrailerDict2621_9;
  }
  // ReturnBlock (RetYes NoCapture)
  TrailerDict2621_12: {
    DDL::Maybe<DDL::Integer> r0 = DDL::Maybe<DDL::Integer>(TrailerDict2621_12_ra0o);
    TrailerDict2621_9_ra0o = r0;
    TrailerDict2621_9_ra1o = TrailerDict2621_12_ra1o;
    TrailerDict2621_9_ra2o = TrailerDict2621_12_ra2o;
    TrailerDict2621_9_ra3o = TrailerDict2621_12_ra3o;
    TrailerDict2621_9_ra4o = TrailerDict2621_12_ra4o;
    goto TrailerDict2621_9;
  }
  // NormalBlock
  TrailerDict2621_13: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(118UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:223:25--223:51:LookupNatDirect",
                false);
    TrailerDict2621_13_ra1o.copy();
    TrailerDict2621_13_ra2o.copy();
    TrailerDict2621_13_ra2o.copy();
    TrailerDict2621_13_ra3o.copy();
    TrailerDict2621_13_ra0o.copy();
    if (parser_LookupNatDirect(p, &TrailerDict2621_12_ra0o,
                               &TrailerDict2621_12_ra1o, TrailerDict2621_13_ra1o, r0,
                               TrailerDict2621_13_ra2o)) {
      TrailerDict2621_13_ra1o.free();
      TrailerDict2621_13_ra2o.free();
      TrailerDict2621_13_ra3o.free();
      TrailerDict2621_13_ra0o.free();
      TrailerDict2621_12_ra2o = TrailerDict2621_13_ra2o;
      TrailerDict2621_12_ra3o = TrailerDict2621_13_ra3o;
      TrailerDict2621_12_ra4o = TrailerDict2621_13_ra0o;
      goto TrailerDict2621_12;
    } else {
      TrailerDict2621_13_ra2o.free();
      TrailerDict2621_13_ra3o.free();
      TrailerDict2621_13_ra0o.free();
      TrailerDict2621_11_ra0o = TrailerDict2621_13_ra1o;
      TrailerDict2621_11_ra1o = TrailerDict2621_13_ra2o;
      TrailerDict2621_11_ra2o = TrailerDict2621_13_ra3o;
      TrailerDict2621_11_ra3o = TrailerDict2621_13_ra0o;
      goto TrailerDict2621_11;
    }
  }
  // NormalBlock
  TrailerDict2621_14: {
    TrailerDict2621_13_ra0o = (DDL::Maybe<User::Ref>());
    TrailerDict2621_13_ra1o = TrailerDict2621_14_ra2o;
    TrailerDict2621_13_ra2o = TrailerDict2621_14_ra0o;
    TrailerDict2621_13_ra3o = TrailerDict2621_14_ra1o;
    goto TrailerDict2621_13;
  }
  // NormalBlock
  TrailerDict2621_16: {
    User::Ref r0 = TrailerDict2621_16_ra0o.get_ref();
    TrailerDict2621_16_ra0o.free();
    DDL::Maybe<User::Ref> r1 = DDL::Maybe<User::Ref>(r0);
    TrailerDict2621_13_ra0o = r1;
    TrailerDict2621_13_ra1o = TrailerDict2621_16_ra3o;
    TrailerDict2621_13_ra2o = TrailerDict2621_16_ra1o;
    TrailerDict2621_13_ra3o = TrailerDict2621_16_ra2o;
    goto TrailerDict2621_13;
  }
  // NormalBlock
  TrailerDict2621_17: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:220:33--220:40",
               TrailerDict2621_17_ra0o, r0);
    TrailerDict2621_17_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  TrailerDict2621_18: {
    User::Value r0 = TrailerDict2621_18_ra0o.getValue();
    TrailerDict2621_18_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::ref:
        TrailerDict2621_16_ra3o = TrailerDict2621_18_ra3o;
        TrailerDict2621_16_ra0o = r0;
        TrailerDict2621_16_ra1o = TrailerDict2621_18_ra1o;
        TrailerDict2621_16_ra2o = TrailerDict2621_18_ra2o;
        goto TrailerDict2621_16;
      default:
        TrailerDict2621_18_ra1o.free();
        TrailerDict2621_18_ra2o.free();
        r0.free();
        TrailerDict2621_17_ra0o = TrailerDict2621_18_ra3o;
        goto TrailerDict2621_17;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  TrailerDict2621_19: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  TrailerDict2621_20: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(82UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(116UL)};
    DDL::Maybe<User::Value> r1 = TrailerDict2621_20_ra2o.lookup(r0);
    r0.free();
    if (r1.isJust()) {
      TrailerDict2621_18_ra3o = TrailerDict2621_20_ra1o;
      TrailerDict2621_18_ra0o = r1;
      TrailerDict2621_18_ra1o = TrailerDict2621_20_ra2o;
      TrailerDict2621_18_ra2o = TrailerDict2621_20_ra0o;
      goto TrailerDict2621_18;
    } else {
      r1.free();
      TrailerDict2621_14_ra2o = TrailerDict2621_20_ra1o;
      TrailerDict2621_14_ra0o = TrailerDict2621_20_ra2o;
      TrailerDict2621_14_ra1o = TrailerDict2621_20_ra0o;
      goto TrailerDict2621_14;
    }
  }
  // NormalBlock
  TrailerDict2621_21: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(83UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(122UL),
                                                           DDL::UInt<8>(101UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:217:15--217:41:LookupNatDirect",
                false);
    TrailerDict2621_21_ra1o.copy();
    if (parser_LookupNatDirect(p, &TrailerDict2621_20_ra0o,
                               &TrailerDict2621_20_ra1o, TrailerDict2621_21_ra0o, r0,
                               TrailerDict2621_21_ra1o)) {
      TrailerDict2621_20_ra2o = TrailerDict2621_21_ra1o;
      goto TrailerDict2621_20;
    } else {
      TrailerDict2621_21_ra1o.free();
      goto TrailerDict2621_19;
    }
  }
}
bool parser_Many_3292(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1) {
  
// Parameters for L_0_Many3292
  DDL::Input Many3292_0_ra0o;
  
// Parameters for L_1_Many3292
  DDL::Input Many3292_1_ra0o;
  
// Parameters for L_2_Many3292
  DDL::Bool Many3292_2_ra0u;
  DDL::Input Many3292_2_ra1o;
  
// Parameters for L_4_Many3292
  DDL::Input Many3292_4_ra0o;
  
// Parameters for L_5_Many3292
  DDL::Unit Many3292_5_ra0u;
  DDL::Input Many3292_5_ra1o;
  
// Parameters for L_6_Many3292
  DDL::Input Many3292_6_ra0o;
  Many3292_6_ra0o = a1;
  goto Many3292_6;
  // NormalBlock
  Many3292_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:45:5--45:18:Many_3292",
                true);
    Many3292_6_ra0o = Many3292_0_ra0o;
    goto Many3292_6;
  }
  // NormalBlock
  Many3292_1: {
    p.popDebug();
    *_result = DDL::Unit();
    *_result_input = Many3292_1_ra0o;
    return true;
  }
  // NormalBlock
  Many3292_2: {
    if (Many3292_2_ra0u.getValue()) {
      Many3292_0_ra0o = Many3292_2_ra1o;
      goto Many3292_0;
    } else {
      Many3292_1_ra0o = Many3292_2_ra1o;
      goto Many3292_1;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Many3292_4: {
    Many3292_2_ra0u = DDL::Bool(false);
    Many3292_2_ra1o = Many3292_4_ra0o;
    goto Many3292_2;
  }
  // ReturnBlock (RetYes NoCapture)
  Many3292_5: {
    Many3292_2_ra0u = DDL::Bool(true);
    Many3292_2_ra1o = Many3292_5_ra1o;
    goto Many3292_2;
  }
  // NormalBlock
  Many3292_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:45:10--45:18:JustWhite_",
                false);
    Many3292_6_ra0o.copy();
    if (parser_JustWhite_(p, &Many3292_5_ra0u, &Many3292_5_ra1o,
                          Many3292_6_ra0o)) {
      Many3292_6_ra0o.free();
      goto Many3292_5;
    } else {
      Many3292_4_ra0o = Many3292_6_ra0o;
      goto Many3292_4;
    }
  }
}
bool parser_CrossRefAndTrailer(DDL::ParserStateUser<ReferenceTable> &p,
                               User::CrossRefAndTrailer* _result, DDL::Input* _result_input,
                               DDL::Input a1) {
  
// Parameters for L_1_CrossRefAndTrailer2622
  User::TrailerDict CrossRefAndTrailer2622_1_ra0o;
  DDL::Input CrossRefAndTrailer2622_1_ra1o;
  DDL::Array<User::CrossRefSubSection> CrossRefAndTrailer2622_1_ra2o;
  
// Parameters for L_3_CrossRefAndTrailer2622
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> CrossRefAndTrailer2622_3_ra0o;
  DDL::Input CrossRefAndTrailer2622_3_ra1o;
  DDL::Array<User::CrossRefSubSection> CrossRefAndTrailer2622_3_ra2o;
  
// Parameters for L_5_CrossRefAndTrailer2622
  DDL::Unit CrossRefAndTrailer2622_5_ra0u;
  DDL::Input CrossRefAndTrailer2622_5_ra1o;
  DDL::Array<User::CrossRefSubSection> CrossRefAndTrailer2622_5_ra2o;
  
// Parameters for L_7_CrossRefAndTrailer2622
  DDL::Unit CrossRefAndTrailer2622_7_ra0u;
  DDL::Input CrossRefAndTrailer2622_7_ra1o;
  DDL::Array<User::CrossRefSubSection> CrossRefAndTrailer2622_7_ra2o;
  
// Parameters for L_9_CrossRefAndTrailer2622
  DDL::Array<User::CrossRefSubSection> CrossRefAndTrailer2622_9_ra0o;
  DDL::Input CrossRefAndTrailer2622_9_ra1o;
  
// Parameters for L_10_CrossRefAndTrailer2622
  DDL::Input CrossRefAndTrailer2622_10_ra0o;
  CrossRefAndTrailer2622_10_ra0o = a1;
  goto CrossRefAndTrailer2622_10;
  // ReturnBlock (RetNo NoCapture)
  CrossRefAndTrailer2622_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefAndTrailer2622_1: {
    User::CrossRefAndTrailer r0;
    r0.init(CrossRefAndTrailer2622_1_ra2o,
            CrossRefAndTrailer2622_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = CrossRefAndTrailer2622_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefAndTrailer2622_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefAndTrailer2622_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:47:15--47:30:TrailerDict",
                false);
    if (parser_TrailerDict(p, &CrossRefAndTrailer2622_1_ra0o,
                           &CrossRefAndTrailer2622_1_ra1o, CrossRefAndTrailer2622_3_ra1o,
                           CrossRefAndTrailer2622_3_ra0o)) {
      CrossRefAndTrailer2622_1_ra2o = CrossRefAndTrailer2622_3_ra2o;
      goto CrossRefAndTrailer2622_1;
    } else {
      CrossRefAndTrailer2622_3_ra2o.free();
      goto CrossRefAndTrailer2622_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefAndTrailer2622_4: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefAndTrailer2622_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:47:27--47:30:Dict",
                false);
    if (parser_Dict(p, &CrossRefAndTrailer2622_3_ra0o,
                    &CrossRefAndTrailer2622_3_ra1o, CrossRefAndTrailer2622_5_ra1o)) {
      CrossRefAndTrailer2622_3_ra2o = CrossRefAndTrailer2622_5_ra2o;
      goto CrossRefAndTrailer2622_3;
    } else {
      CrossRefAndTrailer2622_5_ra2o.free();
      goto CrossRefAndTrailer2622_2;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefAndTrailer2622_6: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefAndTrailer2622_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:46:5--46:16:KW_",
                false);
    if (parser_KW_(p, &CrossRefAndTrailer2622_5_ra0u,
                   &CrossRefAndTrailer2622_5_ra1o, CrossRefAndTrailer2622_7_ra1o,
                   r0)) {
      CrossRefAndTrailer2622_5_ra2o = CrossRefAndTrailer2622_7_ra2o;
      goto CrossRefAndTrailer2622_5;
    } else {
      CrossRefAndTrailer2622_7_ra2o.free();
      goto CrossRefAndTrailer2622_4;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRefAndTrailer2622_8: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRefAndTrailer2622_9: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:45:5--45:18:Many_3292",
                false);
    if (parser_Many_3292(p, &CrossRefAndTrailer2622_7_ra0u,
                         &CrossRefAndTrailer2622_7_ra1o, CrossRefAndTrailer2622_9_ra1o)) {
      CrossRefAndTrailer2622_7_ra2o = CrossRefAndTrailer2622_9_ra0o;
      goto CrossRefAndTrailer2622_7;
    } else {
      CrossRefAndTrailer2622_9_ra0o.free();
      goto CrossRefAndTrailer2622_6;
    }
  }
  // NormalBlock
  CrossRefAndTrailer2622_10: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:44:15--44:29:CrossRefSection",
                false);
    if (parser_CrossRefSection(p, &CrossRefAndTrailer2622_9_ra0o,
                               &CrossRefAndTrailer2622_9_ra1o, CrossRefAndTrailer2622_10_ra0o)) {
      goto CrossRefAndTrailer2622_9;
    } else {
      goto CrossRefAndTrailer2622_8;
    }
  }
}
bool parser_Default_2623(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Array<DDL::Integer>* _result, DDL::Input* _result_input,
                         DDL::Input a1, DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2,
                         DDL::Array<DDL::Integer> a3) {
  
// Parameters for L_0_Default2623
  DDL::Input Default2623_0_ra0o;
  DDL::Array<DDL::Integer> Default2623_0_ra1o;
  
// Parameters for L_1_Default2623
  DDL::Array<DDL::Integer> Default2623_1_ra0o;
  DDL::Input Default2623_1_ra1o;
  
// Parameters for L_2_Default2623
  DDL::Input Default2623_2_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> Default2623_2_ra1o;
  DDL::Array<DDL::Integer> Default2623_2_ra2o;
  Default2623_2_ra0o = a1;
  Default2623_2_ra1o = a2;
  Default2623_2_ra2o = a3;
  goto Default2623_2;
  // ReturnBlock (RetNo NoCapture)
  Default2623_0: {
    p.popDebug();
    *_result = Default2623_0_ra1o;
    *_result_input = Default2623_0_ra0o;
    return true;
  }
  // ReturnBlock (RetYes NoCapture)
  Default2623_1: {
    p.popDebug();
    *_result = Default2623_1_ra0o;
    *_result_input = Default2623_1_ra1o;
    return true;
  }
  // NormalBlock
  Default2623_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(73UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:73:21--73:21:LookupNats",
                false);
    Default2623_2_ra0o.copy();
    if (parser_LookupNats(p, &Default2623_1_ra0o, &Default2623_1_ra1o,
                          Default2623_2_ra0o, r0, Default2623_2_ra1o)) {
      Default2623_2_ra0o.free();
      Default2623_2_ra2o.free();
      goto Default2623_1;
    } else {
      Default2623_0_ra0o = Default2623_2_ra0o;
      Default2623_0_ra1o = Default2623_2_ra2o;
      goto Default2623_0;
    }
  }
}
bool parser_map_3316(DDL::ParserStateUser<ReferenceTable> &p,
                     DDL::Builder<User::XRefIndex0>* _result, DDL::Input* _result_input,
                     DDL::Input a1, DDL::Builder<User::XRefIndex0> a2,
                     DDL::Array<DDL::UInt<64>>::Iterator a3,
                     DDL::Array<DDL::Integer> a4) {
  
// Parameters for L_0_map3316
  DDL::Input map3316_0_ra1o;
  DDL::Builder<User::XRefIndex0> map3316_0_ra0o;
  
// Parameters for L_2_map3316
  DDL::Input map3316_2_ra5o;
  DDL::Integer map3316_2_ra0o;
  DDL::Integer map3316_2_ra1o;
  DDL::Builder<User::XRefIndex0> map3316_2_ra2o;
  DDL::Array<DDL::UInt<64>>::Iterator map3316_2_ra3o;
  DDL::Array<DDL::Integer> map3316_2_ra4o;
  
// Parameters for L_3_map3316
  DDL::Input map3316_3_ra0o;
  
// Parameters for L_4_map3316
  DDL::Input map3316_4_ra1o;
  DDL::Bool map3316_4_ra0u;
  DDL::Integer map3316_4_ra2o;
  DDL::Integer map3316_4_ra3o;
  DDL::Builder<User::XRefIndex0> map3316_4_ra4o;
  DDL::Array<DDL::UInt<64>>::Iterator map3316_4_ra5o;
  DDL::Array<DDL::Integer> map3316_4_ra6o;
  
// Parameters for L_5_map3316
  DDL::Input map3316_5_ra5o;
  DDL::Integer map3316_5_ra0o;
  DDL::Integer map3316_5_ra1o;
  DDL::Builder<User::XRefIndex0> map3316_5_ra2o;
  DDL::Array<DDL::UInt<64>>::Iterator map3316_5_ra3o;
  DDL::Array<DDL::Integer> map3316_5_ra4o;
  
// Parameters for L_6_map3316
  DDL::Input map3316_6_ra5o;
  DDL::Integer map3316_6_ra0o;
  DDL::Integer map3316_6_ra1o;
  DDL::Builder<User::XRefIndex0> map3316_6_ra2o;
  DDL::Array<DDL::UInt<64>>::Iterator map3316_6_ra3o;
  DDL::Array<DDL::Integer> map3316_6_ra4o;
  
// Parameters for L_8_map3316
  DDL::Input map3316_8_ra0o;
  
// Parameters for L_9_map3316
  DDL::Input map3316_9_ra6o;
  DDL::Array<DDL::Integer> map3316_9_ra0o;
  DDL::UInt<64> map3316_9_ra1u;
  DDL::Integer map3316_9_ra2o;
  DDL::Builder<User::XRefIndex0> map3316_9_ra3o;
  DDL::Array<DDL::UInt<64>>::Iterator map3316_9_ra4o;
  DDL::Array<DDL::Integer> map3316_9_ra5o;
  
// Parameters for L_11_map3316
  DDL::Input map3316_11_ra0o;
  
// Parameters for L_12_map3316
  DDL::Input map3316_12_ra6o;
  DDL::Array<DDL::Integer> map3316_12_ra0o;
  DDL::UInt<64> map3316_12_ra1u;
  DDL::Array<DDL::Integer> map3316_12_ra2o;
  DDL::UInt<64> map3316_12_ra3u;
  DDL::Builder<User::XRefIndex0> map3316_12_ra4o;
  DDL::Array<DDL::UInt<64>>::Iterator map3316_12_ra5o;
  
// Parameters for L_13_map3316
  DDL::Input map3316_13_ra3o;
  DDL::Array<DDL::UInt<64>>::Iterator map3316_13_ra0o;
  DDL::Array<DDL::Integer> map3316_13_ra1o;
  DDL::Builder<User::XRefIndex0> map3316_13_ra2o;
  
// Parameters for L_14_map3316
  DDL::Input map3316_14_ra0o;
  DDL::Builder<User::XRefIndex0> map3316_14_ra1o;
  DDL::Array<DDL::UInt<64>>::Iterator map3316_14_ra2o;
  DDL::Array<DDL::Integer> map3316_14_ra3o;
  map3316_14_ra0o = a1;
  map3316_14_ra1o = a2;
  map3316_14_ra2o = a3;
  map3316_14_ra3o = a4;
  goto map3316_14;
  // NormalBlock
  map3316_0: {
    p.popDebug();
    *_result = map3316_0_ra0o;
    *_result_input = map3316_0_ra1o;
    return true;
  }
  // NormalBlock
  map3316_2: {
    DDL::UInt<64> r0 = DDL::integer_to_uint<64>(map3316_2_ra0o);
    map3316_2_ra0o.free();
    User::XRefIndex0 r1;
    r1.init(map3316_2_ra1o, r0);
    DDL::Builder<User::XRefIndex0> r2 = DDL::Builder<User::XRefIndex0>(map3316_2_ra2o,
                                                                       r1);
    DDL::Array<DDL::UInt<64>>::Iterator r3 = map3316_2_ra3o.next();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:121:9--124:3:map_3316",
                true);
    map3316_14_ra0o = map3316_2_ra5o;
    map3316_14_ra1o = r2;
    map3316_14_ra2o = r3;
    map3316_14_ra3o = map3316_2_ra4o;
    goto map3316_14;
  }
  // NormalBlock
  map3316_3: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(118UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:122:19--122:45",
               map3316_3_ra0o, r0);
    map3316_3_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  map3316_4: {
    if (map3316_4_ra0u.getValue()) {
      map3316_2_ra5o = map3316_4_ra1o;
      map3316_2_ra0o = map3316_4_ra2o;
      map3316_2_ra1o = map3316_4_ra3o;
      map3316_2_ra2o = map3316_4_ra4o;
      map3316_2_ra3o = map3316_4_ra5o;
      map3316_2_ra4o = map3316_4_ra6o;
      goto map3316_2;
    } else {
      map3316_4_ra2o.free();
      map3316_4_ra3o.free();
      map3316_4_ra4o.free();
      map3316_4_ra5o.free();
      map3316_4_ra6o.free();
      map3316_3_ra0o = map3316_4_ra1o;
      goto map3316_3;
    }
  }
  // NormalBlock
  map3316_5: {
    DDL::Integer r0 = DDL::Integer("18446744073709551615");
    DDL::Bool r1 = DDL::Bool{map3316_5_ra0o <= r0};
    r0.free();
    map3316_4_ra1o = map3316_5_ra5o;
    map3316_4_ra0u = r1;
    map3316_4_ra2o = map3316_5_ra0o;
    map3316_4_ra3o = map3316_5_ra1o;
    map3316_4_ra4o = map3316_5_ra2o;
    map3316_4_ra5o = map3316_5_ra3o;
    map3316_4_ra6o = map3316_5_ra4o;
    goto map3316_4;
  }
  // NormalBlock
  map3316_6: {
    map3316_4_ra1o = map3316_6_ra5o;
    map3316_4_ra0u = DDL::Bool(false);
    map3316_4_ra2o = map3316_6_ra0o;
    map3316_4_ra3o = map3316_6_ra1o;
    map3316_4_ra4o = map3316_6_ra2o;
    map3316_4_ra5o = map3316_6_ra3o;
    map3316_4_ra6o = map3316_6_ra4o;
    goto map3316_4;
  }
  // NormalBlock
  map3316_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(120UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:122:19--122:27",
               map3316_8_ra0o, r0);
    map3316_8_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  map3316_9: {
    DDL::Integer r0 = map3316_9_ra0o[DDL::Size::from(map3316_9_ra1u.rep())];
    map3316_9_ra0o.free();
    DDL::Integer r1 = DDL::Integer("0");
    DDL::Bool r2 = DDL::Bool{r1 <= r0};
    r1.free();
    if (r2.getValue()) {
      map3316_5_ra5o = map3316_9_ra6o;
      map3316_5_ra0o = r0;
      map3316_5_ra1o = map3316_9_ra2o;
      map3316_5_ra2o = map3316_9_ra3o;
      map3316_5_ra3o = map3316_9_ra4o;
      map3316_5_ra4o = map3316_9_ra5o;
      goto map3316_5;
    } else {
      map3316_6_ra5o = map3316_9_ra6o;
      map3316_6_ra0o = r0;
      map3316_6_ra1o = map3316_9_ra2o;
      map3316_6_ra2o = map3316_9_ra3o;
      map3316_6_ra3o = map3316_9_ra4o;
      map3316_6_ra4o = map3316_9_ra5o;
      goto map3316_6;
    }
  }
  // NormalBlock
  map3316_11: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(120UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:121:19--121:27",
               map3316_11_ra0o, r0);
    map3316_11_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  map3316_12: {
    DDL::Integer r0 = map3316_12_ra0o[DDL::Size::from(map3316_12_ra1u.rep())];
    map3316_12_ra0o.free();
    DDL::UInt<64> r1 = map3316_12_ra3u + DDL::UInt<64>{UINT64_C(1)};
    DDL::UInt<64> r2 = DDL::UInt<64>{map3316_12_ra2o.size().rep()};
    DDL::Bool r3 = DDL::Bool{r2 <= r1};
    map3316_12_ra2o.copy();
    if (r3.getValue()) {
      map3316_12_ra2o.free();
      map3316_12_ra4o.free();
      map3316_12_ra5o.free();
      r0.free();
      map3316_12_ra2o.free();
      map3316_8_ra0o = map3316_12_ra6o;
      goto map3316_8;
    } else {
      map3316_9_ra6o = map3316_12_ra6o;
      map3316_9_ra0o = map3316_12_ra2o;
      map3316_9_ra1u = r1;
      map3316_9_ra2o = r0;
      map3316_9_ra3o = map3316_12_ra4o;
      map3316_9_ra4o = map3316_12_ra5o;
      map3316_9_ra5o = map3316_12_ra2o;
      goto map3316_9;
    }
  }
  // NormalBlock
  map3316_13: {
    DDL::UInt<64> r0 = map3316_13_ra0o.value();
    DDL::UInt<64> r1 = DDL::UInt<64>{map3316_13_ra1o.size().rep()};
    DDL::Bool r2 = DDL::Bool{r1 <= r0};
    map3316_13_ra1o.copy();
    if (r2.getValue()) {
      map3316_13_ra0o.free();
      map3316_13_ra1o.free();
      map3316_13_ra2o.free();
      map3316_13_ra1o.free();
      map3316_11_ra0o = map3316_13_ra3o;
      goto map3316_11;
    } else {
      map3316_12_ra6o = map3316_13_ra3o;
      map3316_12_ra0o = map3316_13_ra1o;
      map3316_12_ra1u = r0;
      map3316_12_ra2o = map3316_13_ra1o;
      map3316_12_ra3u = r0;
      map3316_12_ra4o = map3316_13_ra2o;
      map3316_12_ra5o = map3316_13_ra0o;
      goto map3316_12;
    }
  }
  // NormalBlock
  map3316_14: {
    DDL::Bool r0 = map3316_14_ra2o.done();
    if (r0.getValue()) {
      map3316_14_ra2o.free();
      map3316_14_ra3o.free();
      map3316_0_ra1o = map3316_14_ra0o;
      map3316_0_ra0o = map3316_14_ra1o;
      goto map3316_0;
    } else {
      map3316_13_ra3o = map3316_14_ra0o;
      map3316_13_ra0o = map3316_14_ra2o;
      map3316_13_ra1o = map3316_14_ra3o;
      map3316_13_ra2o = map3316_14_ra1o;
      goto map3316_13;
    }
  }
}
bool parser_XRefIndex(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Array<User::XRefIndex0>* _result, DDL::Input* _result_input,
                      DDL::Input a1,
                      DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2) {
  
// Parameters for L_1_XRefIndex2624
  DDL::Builder<User::XRefIndex0> XRefIndex2624_1_ra0o;
  DDL::Input XRefIndex2624_1_ra1o;
  
// Parameters for L_3_XRefIndex2624
  DDL::Array<DDL::Integer> XRefIndex2624_3_ra0o;
  DDL::Input XRefIndex2624_3_ra1o;
  
// Parameters for L_5_XRefIndex2624
  DDL::Integer XRefIndex2624_5_ra0o;
  DDL::Input XRefIndex2624_5_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> XRefIndex2624_5_ra2o;
  
// Parameters for L_6_XRefIndex2624
  DDL::Input XRefIndex2624_6_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> XRefIndex2624_6_ra1o;
  XRefIndex2624_6_ra0o = a1;
  XRefIndex2624_6_ra1o = a2;
  goto XRefIndex2624_6;
  // ReturnBlock (RetNo NoCapture)
  XRefIndex2624_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefIndex2624_1: {
    DDL::Array<User::XRefIndex0> r0 = DDL::Array<User::XRefIndex0>(XRefIndex2624_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = XRefIndex2624_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefIndex2624_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefIndex2624_3: {
    DDL::Builder<User::XRefIndex0> r0;
    DDL::UInt<64> r1 = DDL::UInt<64>{XRefIndex2624_3_ra0o.size().rep()};
    DDL::Array<DDL::UInt<64>> r2 = DDL::Array<DDL::UInt<64>>::rangeUp(DDL::UInt<64>{UINT64_C(0)},
                                                                      r1,
                                                                      DDL::UInt<64>{UINT64_C(2)});
    DDL::Array<DDL::UInt<64>>::Iterator r3 = DDL::Array<DDL::UInt<64>>::Iterator(r2);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:119:5--124:3:map_3316",
                false);
    if (parser_map_3316(p, &XRefIndex2624_1_ra0o,
                        &XRefIndex2624_1_ra1o, XRefIndex2624_3_ra1o, r0, r3,
                        XRefIndex2624_3_ra0o)) {
      goto XRefIndex2624_1;
    } else {
      goto XRefIndex2624_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  XRefIndex2624_4: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefIndex2624_5: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Array<DDL::Integer> r1 = DDL::Array<DDL::Integer>{r0,
                                                           XRefIndex2624_5_ra0o};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:118:16--118:58:Default_2623",
                false);
    if (parser_Default_2623(p, &XRefIndex2624_3_ra0o,
                            &XRefIndex2624_3_ra1o, XRefIndex2624_5_ra1o, XRefIndex2624_5_ra2o,
                            r1)) {
      goto XRefIndex2624_3;
    } else {
      goto XRefIndex2624_2;
    }
  }
  // NormalBlock
  XRefIndex2624_6: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(83UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(122UL),
                                                           DDL::UInt<8>(101UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:117:16--117:39:LookupNat",
                false);
    XRefIndex2624_6_ra1o.copy();
    if (parser_LookupNat(p, &XRefIndex2624_5_ra0o,
                         &XRefIndex2624_5_ra1o, XRefIndex2624_6_ra0o, r0,
                         XRefIndex2624_6_ra1o)) {
      XRefIndex2624_5_ra2o = XRefIndex2624_6_ra1o;
      goto XRefIndex2624_5;
    } else {
      XRefIndex2624_6_ra1o.free();
      goto XRefIndex2624_4;
    }
  }
}
bool parser_LookupInt(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                      DDL::Array<User::Value> a2, DDL::UInt<64> a3) {
  
// Parameters for L_1_LookupInt2625
  DDL::Input LookupInt2625_1_ra0o;
  
// Parameters for L_2_LookupInt2625
  DDL::Input LookupInt2625_2_ra2o;
  DDL::Array<User::Value> LookupInt2625_2_ra0o;
  DDL::UInt<64> LookupInt2625_2_ra1u;
  
// Parameters for L_3_LookupInt2625
  DDL::Input LookupInt2625_3_ra2o;
  DDL::Array<User::Value> LookupInt2625_3_ra0o;
  DDL::UInt<64> LookupInt2625_3_ra1u;
  
// Parameters for L_4_LookupInt2625
  DDL::Input LookupInt2625_4_ra0o;
  
// Parameters for L_5_LookupInt2625
  DDL::Input LookupInt2625_5_ra0o;
  DDL::Array<User::Value> LookupInt2625_5_ra1o;
  DDL::UInt<64> LookupInt2625_5_ra2u;
  LookupInt2625_5_ra0o = a1;
  LookupInt2625_5_ra1o = a2;
  LookupInt2625_5_ra2u = a3;
  goto LookupInt2625_5;
  // NormalBlock
  LookupInt2625_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(120UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(98UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:134:36--134:44",
               LookupInt2625_1_ra0o, r0);
    LookupInt2625_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  LookupInt2625_2: {
    User::Value r0 = LookupInt2625_2_ra0o[DDL::Size::from(LookupInt2625_2_ra1u.rep())];
    LookupInt2625_2_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:134:26--134:44:NatValue",
                true);
    return parser_NatValue(p, _result, _result_input,
                           LookupInt2625_2_ra2o, r0);
  }
  // NormalBlock
  LookupInt2625_3: {
    DDL::UInt<64> r0 = DDL::UInt<64>{LookupInt2625_3_ra0o.size().rep()};
    DDL::Bool r1 = DDL::Bool{r0 <= LookupInt2625_3_ra1u};
    if (r1.getValue()) {
      LookupInt2625_3_ra0o.free();
      LookupInt2625_1_ra0o = LookupInt2625_3_ra2o;
      goto LookupInt2625_1;
    } else {
      LookupInt2625_2_ra2o = LookupInt2625_3_ra2o;
      LookupInt2625_2_ra0o = LookupInt2625_3_ra0o;
      LookupInt2625_2_ra1u = LookupInt2625_3_ra1u;
      goto LookupInt2625_2;
    }
  }
  // NormalBlock
  LookupInt2625_4: {
    DDL::Integer r0 = DDL::Integer("0");
    p.popDebug();
    *_result = r0;
    *_result_input = LookupInt2625_4_ra0o;
    return true;
  }
  // NormalBlock
  LookupInt2625_5: {
    DDL::UInt<64> r0 = DDL::UInt<64>{LookupInt2625_5_ra1o.size().rep()};
    DDL::Bool r1 = DDL::Bool{LookupInt2625_5_ra2u < r0};
    if (r1.getValue()) {
      LookupInt2625_3_ra2o = LookupInt2625_5_ra0o;
      LookupInt2625_3_ra0o = LookupInt2625_5_ra1o;
      LookupInt2625_3_ra1u = LookupInt2625_5_ra2u;
      goto LookupInt2625_3;
    } else {
      LookupInt2625_5_ra1o.free();
      LookupInt2625_4_ra0o = LookupInt2625_5_ra0o;
      goto LookupInt2625_4;
    }
  }
}
bool parser_for_3348(DDL::ParserStateUser<ReferenceTable> &p,
                     DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                     DDL::Integer a2, DDL::Array<User::Value>::Iterator a3) {
  
// Parameters for L_0_for3348
  DDL::Input for3348_0_ra1o;
  DDL::Integer for3348_0_ra0o;
  
// Parameters for L_2_for3348
  DDL::Integer for3348_2_ra0o;
  DDL::Input for3348_2_ra1o;
  DDL::Integer for3348_2_ra2o;
  DDL::Array<User::Value>::Iterator for3348_2_ra3o;
  
// Parameters for L_3_for3348
  DDL::Input for3348_3_ra2o;
  DDL::Array<User::Value>::Iterator for3348_3_ra0o;
  DDL::Integer for3348_3_ra1o;
  
// Parameters for L_4_for3348
  DDL::Input for3348_4_ra0o;
  DDL::Integer for3348_4_ra1o;
  DDL::Array<User::Value>::Iterator for3348_4_ra2o;
  for3348_4_ra0o = a1;
  for3348_4_ra1o = a2;
  for3348_4_ra2o = a3;
  goto for3348_4;
  // NormalBlock
  for3348_0: {
    p.popDebug();
    *_result = for3348_0_ra0o;
    *_result_input = for3348_0_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  for3348_1: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  for3348_2: {
    DDL::Integer r0 = for3348_2_ra2o + for3348_2_ra0o;
    DDL::Array<User::Value>::Iterator r1 = for3348_2_ra3o.next();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:130:46--130:55:for_3348",
                true);
    for3348_4_ra0o = for3348_2_ra1o;
    for3348_4_ra1o = r0;
    for3348_4_ra2o = r1;
    goto for3348_4;
  }
  // NormalBlock
  for3348_3: {
    User::Value r0 = for3348_3_ra0o.value();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:130:46--130:55:NatValue",
                false);
    if (parser_NatValue(p, &for3348_2_ra0o, &for3348_2_ra1o,
                        for3348_3_ra2o, r0)) {
      for3348_2_ra2o = for3348_3_ra1o;
      for3348_2_ra3o = for3348_3_ra0o;
      goto for3348_2;
    } else {
      for3348_3_ra1o.free();
      for3348_3_ra0o.free();
      goto for3348_1;
    }
  }
  // NormalBlock
  for3348_4: {
    DDL::Bool r0 = for3348_4_ra2o.done();
    if (r0.getValue()) {
      for3348_4_ra2o.free();
      for3348_0_ra1o = for3348_4_ra0o;
      for3348_0_ra0o = for3348_4_ra1o;
      goto for3348_0;
    } else {
      for3348_3_ra2o = for3348_4_ra0o;
      for3348_3_ra0o = for3348_4_ra2o;
      for3348_3_ra1o = for3348_4_ra1o;
      goto for3348_3;
    }
  }
}
bool parser_XRefFormat(DDL::ParserStateUser<ReferenceTable> &p,
                       User::XRefFormat* _result, DDL::Input* _result_input,
                       DDL::Input a1,
                       DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2) {
  
// Parameters for L_1_XRefFormat2626
  DDL::Input XRefFormat2626_1_ra4o;
  DDL::Integer XRefFormat2626_1_ra0o;
  DDL::UInt<64> XRefFormat2626_1_ra1u;
  DDL::UInt<64> XRefFormat2626_1_ra2u;
  DDL::UInt<64> XRefFormat2626_1_ra3u;
  
// Parameters for L_2_XRefFormat2626
  DDL::Input XRefFormat2626_2_ra0o;
  
// Parameters for L_3_XRefFormat2626
  DDL::Input XRefFormat2626_3_ra1o;
  DDL::Bool XRefFormat2626_3_ra0u;
  DDL::Integer XRefFormat2626_3_ra2o;
  DDL::UInt<64> XRefFormat2626_3_ra3u;
  DDL::UInt<64> XRefFormat2626_3_ra4u;
  DDL::UInt<64> XRefFormat2626_3_ra5u;
  
// Parameters for L_4_XRefFormat2626
  DDL::Input XRefFormat2626_4_ra4o;
  DDL::Integer XRefFormat2626_4_ra0o;
  DDL::UInt<64> XRefFormat2626_4_ra1u;
  DDL::UInt<64> XRefFormat2626_4_ra2u;
  DDL::UInt<64> XRefFormat2626_4_ra3u;
  
// Parameters for L_5_XRefFormat2626
  DDL::Input XRefFormat2626_5_ra4o;
  DDL::Integer XRefFormat2626_5_ra0o;
  DDL::UInt<64> XRefFormat2626_5_ra1u;
  DDL::UInt<64> XRefFormat2626_5_ra2u;
  DDL::UInt<64> XRefFormat2626_5_ra3u;
  
// Parameters for L_7_XRefFormat2626
  DDL::Integer XRefFormat2626_7_ra0o;
  DDL::Input XRefFormat2626_7_ra1o;
  DDL::UInt<64> XRefFormat2626_7_ra2u;
  DDL::UInt<64> XRefFormat2626_7_ra3u;
  DDL::UInt<64> XRefFormat2626_7_ra4u;
  
// Parameters for L_9_XRefFormat2626
  DDL::Input XRefFormat2626_9_ra4o;
  DDL::Integer XRefFormat2626_9_ra0o;
  DDL::Array<User::Value> XRefFormat2626_9_ra1o;
  DDL::UInt<64> XRefFormat2626_9_ra2u;
  DDL::UInt<64> XRefFormat2626_9_ra3u;
  
// Parameters for L_10_XRefFormat2626
  DDL::Input XRefFormat2626_10_ra0o;
  
// Parameters for L_11_XRefFormat2626
  DDL::Input XRefFormat2626_11_ra1o;
  DDL::Bool XRefFormat2626_11_ra0u;
  DDL::Integer XRefFormat2626_11_ra2o;
  DDL::Array<User::Value> XRefFormat2626_11_ra3o;
  DDL::UInt<64> XRefFormat2626_11_ra4u;
  DDL::UInt<64> XRefFormat2626_11_ra5u;
  
// Parameters for L_12_XRefFormat2626
  DDL::Input XRefFormat2626_12_ra4o;
  DDL::Integer XRefFormat2626_12_ra0o;
  DDL::Array<User::Value> XRefFormat2626_12_ra1o;
  DDL::UInt<64> XRefFormat2626_12_ra2u;
  DDL::UInt<64> XRefFormat2626_12_ra3u;
  
// Parameters for L_13_XRefFormat2626
  DDL::Input XRefFormat2626_13_ra4o;
  DDL::Integer XRefFormat2626_13_ra0o;
  DDL::Array<User::Value> XRefFormat2626_13_ra1o;
  DDL::UInt<64> XRefFormat2626_13_ra2u;
  DDL::UInt<64> XRefFormat2626_13_ra3u;
  
// Parameters for L_15_XRefFormat2626
  DDL::Integer XRefFormat2626_15_ra0o;
  DDL::Input XRefFormat2626_15_ra1o;
  DDL::Array<User::Value> XRefFormat2626_15_ra2o;
  DDL::UInt<64> XRefFormat2626_15_ra3u;
  DDL::UInt<64> XRefFormat2626_15_ra4u;
  
// Parameters for L_17_XRefFormat2626
  DDL::Input XRefFormat2626_17_ra3o;
  DDL::Integer XRefFormat2626_17_ra0o;
  DDL::Array<User::Value> XRefFormat2626_17_ra1o;
  DDL::UInt<64> XRefFormat2626_17_ra2u;
  
// Parameters for L_18_XRefFormat2626
  DDL::Input XRefFormat2626_18_ra0o;
  
// Parameters for L_19_XRefFormat2626
  DDL::Input XRefFormat2626_19_ra1o;
  DDL::Bool XRefFormat2626_19_ra0u;
  DDL::Integer XRefFormat2626_19_ra2o;
  DDL::Array<User::Value> XRefFormat2626_19_ra3o;
  DDL::UInt<64> XRefFormat2626_19_ra4u;
  
// Parameters for L_20_XRefFormat2626
  DDL::Input XRefFormat2626_20_ra3o;
  DDL::Integer XRefFormat2626_20_ra0o;
  DDL::Array<User::Value> XRefFormat2626_20_ra1o;
  DDL::UInt<64> XRefFormat2626_20_ra2u;
  
// Parameters for L_21_XRefFormat2626
  DDL::Input XRefFormat2626_21_ra3o;
  DDL::Integer XRefFormat2626_21_ra0o;
  DDL::Array<User::Value> XRefFormat2626_21_ra1o;
  DDL::UInt<64> XRefFormat2626_21_ra2u;
  
// Parameters for L_23_XRefFormat2626
  DDL::Integer XRefFormat2626_23_ra0o;
  DDL::Input XRefFormat2626_23_ra1o;
  DDL::Array<User::Value> XRefFormat2626_23_ra2o;
  DDL::UInt<64> XRefFormat2626_23_ra3u;
  
// Parameters for L_25_XRefFormat2626
  DDL::Input XRefFormat2626_25_ra2o;
  DDL::Integer XRefFormat2626_25_ra0o;
  DDL::Array<User::Value> XRefFormat2626_25_ra1o;
  
// Parameters for L_26_XRefFormat2626
  DDL::Input XRefFormat2626_26_ra0o;
  
// Parameters for L_27_XRefFormat2626
  DDL::Input XRefFormat2626_27_ra1o;
  DDL::Bool XRefFormat2626_27_ra0u;
  DDL::Integer XRefFormat2626_27_ra2o;
  DDL::Array<User::Value> XRefFormat2626_27_ra3o;
  
// Parameters for L_28_XRefFormat2626
  DDL::Input XRefFormat2626_28_ra2o;
  DDL::Integer XRefFormat2626_28_ra0o;
  DDL::Array<User::Value> XRefFormat2626_28_ra1o;
  
// Parameters for L_29_XRefFormat2626
  DDL::Input XRefFormat2626_29_ra2o;
  DDL::Integer XRefFormat2626_29_ra0o;
  DDL::Array<User::Value> XRefFormat2626_29_ra1o;
  
// Parameters for L_31_XRefFormat2626
  DDL::Integer XRefFormat2626_31_ra0o;
  DDL::Input XRefFormat2626_31_ra1o;
  DDL::Array<User::Value> XRefFormat2626_31_ra2o;
  
// Parameters for L_33_XRefFormat2626
  DDL::Input XRefFormat2626_33_ra1o;
  User::Value XRefFormat2626_33_ra0o;
  
// Parameters for L_34_XRefFormat2626
  DDL::Input XRefFormat2626_34_ra0o;
  
// Parameters for L_36_XRefFormat2626
  User::Value XRefFormat2626_36_ra0o;
  DDL::Input XRefFormat2626_36_ra1o;
  
// Parameters for L_37_XRefFormat2626
  DDL::Input XRefFormat2626_37_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> XRefFormat2626_37_ra1o;
  XRefFormat2626_37_ra0o = a1;
  XRefFormat2626_37_ra1o = a2;
  goto XRefFormat2626_37;
  // NormalBlock
  XRefFormat2626_1: {
    DDL::UInt<64> r0 = DDL::integer_to_uint<64>(XRefFormat2626_1_ra0o);
    XRefFormat2626_1_ra0o.free();
    User::XRefFormat r1;
    r1.init(XRefFormat2626_1_ra1u, XRefFormat2626_1_ra2u,
            XRefFormat2626_1_ra3u, r0);
    p.popDebug();
    *_result = r1;
    *_result_input = XRefFormat2626_1_ra4o;
    return true;
  }
  // NormalBlock
  XRefFormat2626_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(118UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:131:14--131:33",
               XRefFormat2626_2_ra0o, r0);
    XRefFormat2626_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  XRefFormat2626_3: {
    if (XRefFormat2626_3_ra0u.getValue()) {
      XRefFormat2626_1_ra4o = XRefFormat2626_3_ra1o;
      XRefFormat2626_1_ra0o = XRefFormat2626_3_ra2o;
      XRefFormat2626_1_ra1u = XRefFormat2626_3_ra3u;
      XRefFormat2626_1_ra2u = XRefFormat2626_3_ra4u;
      XRefFormat2626_1_ra3u = XRefFormat2626_3_ra5u;
      goto XRefFormat2626_1;
    } else {
      XRefFormat2626_3_ra2o.free();
      XRefFormat2626_2_ra0o = XRefFormat2626_3_ra1o;
      goto XRefFormat2626_2;
    }
  }
  // NormalBlock
  XRefFormat2626_4: {
    DDL::Integer r0 = DDL::Integer("18446744073709551615");
    DDL::Bool r1 = DDL::Bool{XRefFormat2626_4_ra0o <= r0};
    r0.free();
    XRefFormat2626_3_ra1o = XRefFormat2626_4_ra4o;
    XRefFormat2626_3_ra0u = r1;
    XRefFormat2626_3_ra2o = XRefFormat2626_4_ra0o;
    XRefFormat2626_3_ra3u = XRefFormat2626_4_ra1u;
    XRefFormat2626_3_ra4u = XRefFormat2626_4_ra2u;
    XRefFormat2626_3_ra5u = XRefFormat2626_4_ra3u;
    goto XRefFormat2626_3;
  }
  // NormalBlock
  XRefFormat2626_5: {
    XRefFormat2626_3_ra1o = XRefFormat2626_5_ra4o;
    XRefFormat2626_3_ra0u = DDL::Bool(false);
    XRefFormat2626_3_ra2o = XRefFormat2626_5_ra0o;
    XRefFormat2626_3_ra3u = XRefFormat2626_5_ra1u;
    XRefFormat2626_3_ra4u = XRefFormat2626_5_ra2u;
    XRefFormat2626_3_ra5u = XRefFormat2626_5_ra3u;
    goto XRefFormat2626_3;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefFormat2626_6: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefFormat2626_7: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Bool r1 = DDL::Bool{r0 <= XRefFormat2626_7_ra0o};
    r0.free();
    if (r1.getValue()) {
      XRefFormat2626_4_ra4o = XRefFormat2626_7_ra1o;
      XRefFormat2626_4_ra0o = XRefFormat2626_7_ra0o;
      XRefFormat2626_4_ra1u = XRefFormat2626_7_ra2u;
      XRefFormat2626_4_ra2u = XRefFormat2626_7_ra3u;
      XRefFormat2626_4_ra3u = XRefFormat2626_7_ra4u;
      goto XRefFormat2626_4;
    } else {
      XRefFormat2626_5_ra4o = XRefFormat2626_7_ra1o;
      XRefFormat2626_5_ra0o = XRefFormat2626_7_ra0o;
      XRefFormat2626_5_ra1u = XRefFormat2626_7_ra2u;
      XRefFormat2626_5_ra2u = XRefFormat2626_7_ra3u;
      XRefFormat2626_5_ra3u = XRefFormat2626_7_ra4u;
      goto XRefFormat2626_5;
    }
  }
  // NormalBlock
  XRefFormat2626_9: {
    DDL::UInt<64> r0 = DDL::integer_to_uint<64>(XRefFormat2626_9_ra0o);
    XRefFormat2626_9_ra0o.free();
    DDL::Integer r1 = DDL::Integer("0");
    DDL::Array<User::Value>::Iterator r2 = DDL::Array<User::Value>::Iterator(XRefFormat2626_9_ra1o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:130:20--130:55:for_3348",
                false);
    if (parser_for_3348(p, &XRefFormat2626_7_ra0o,
                        &XRefFormat2626_7_ra1o, XRefFormat2626_9_ra4o, r1, r2)) {
      XRefFormat2626_7_ra2u = XRefFormat2626_9_ra2u;
      XRefFormat2626_7_ra3u = XRefFormat2626_9_ra3u;
      XRefFormat2626_7_ra4u = r0;
      goto XRefFormat2626_7;
    } else {
      goto XRefFormat2626_6;
    }
  }
  // NormalBlock
  XRefFormat2626_10: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(118UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:129:14--129:39",
               XRefFormat2626_10_ra0o, r0);
    XRefFormat2626_10_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  XRefFormat2626_11: {
    if (XRefFormat2626_11_ra0u.getValue()) {
      XRefFormat2626_9_ra4o = XRefFormat2626_11_ra1o;
      XRefFormat2626_9_ra0o = XRefFormat2626_11_ra2o;
      XRefFormat2626_9_ra1o = XRefFormat2626_11_ra3o;
      XRefFormat2626_9_ra2u = XRefFormat2626_11_ra4u;
      XRefFormat2626_9_ra3u = XRefFormat2626_11_ra5u;
      goto XRefFormat2626_9;
    } else {
      XRefFormat2626_11_ra2o.free();
      XRefFormat2626_11_ra3o.free();
      XRefFormat2626_10_ra0o = XRefFormat2626_11_ra1o;
      goto XRefFormat2626_10;
    }
  }
  // NormalBlock
  XRefFormat2626_12: {
    DDL::Integer r0 = DDL::Integer("18446744073709551615");
    DDL::Bool r1 = DDL::Bool{XRefFormat2626_12_ra0o <= r0};
    r0.free();
    XRefFormat2626_11_ra1o = XRefFormat2626_12_ra4o;
    XRefFormat2626_11_ra0u = r1;
    XRefFormat2626_11_ra2o = XRefFormat2626_12_ra0o;
    XRefFormat2626_11_ra3o = XRefFormat2626_12_ra1o;
    XRefFormat2626_11_ra4u = XRefFormat2626_12_ra2u;
    XRefFormat2626_11_ra5u = XRefFormat2626_12_ra3u;
    goto XRefFormat2626_11;
  }
  // NormalBlock
  XRefFormat2626_13: {
    XRefFormat2626_11_ra1o = XRefFormat2626_13_ra4o;
    XRefFormat2626_11_ra0u = DDL::Bool(false);
    XRefFormat2626_11_ra2o = XRefFormat2626_13_ra0o;
    XRefFormat2626_11_ra3o = XRefFormat2626_13_ra1o;
    XRefFormat2626_11_ra4u = XRefFormat2626_13_ra2u;
    XRefFormat2626_11_ra5u = XRefFormat2626_13_ra3u;
    goto XRefFormat2626_11;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefFormat2626_14: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefFormat2626_15: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Bool r1 = DDL::Bool{r0 <= XRefFormat2626_15_ra0o};
    r0.free();
    if (r1.getValue()) {
      XRefFormat2626_12_ra4o = XRefFormat2626_15_ra1o;
      XRefFormat2626_12_ra0o = XRefFormat2626_15_ra0o;
      XRefFormat2626_12_ra1o = XRefFormat2626_15_ra2o;
      XRefFormat2626_12_ra2u = XRefFormat2626_15_ra3u;
      XRefFormat2626_12_ra3u = XRefFormat2626_15_ra4u;
      goto XRefFormat2626_12;
    } else {
      XRefFormat2626_13_ra4o = XRefFormat2626_15_ra1o;
      XRefFormat2626_13_ra0o = XRefFormat2626_15_ra0o;
      XRefFormat2626_13_ra1o = XRefFormat2626_15_ra2o;
      XRefFormat2626_13_ra2u = XRefFormat2626_15_ra3u;
      XRefFormat2626_13_ra3u = XRefFormat2626_15_ra4u;
      goto XRefFormat2626_13;
    }
  }
  // NormalBlock
  XRefFormat2626_17: {
    DDL::UInt<64> r0 = DDL::integer_to_uint<64>(XRefFormat2626_17_ra0o);
    XRefFormat2626_17_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:129:14--129:27:LookupInt",
                false);
    XRefFormat2626_17_ra1o.copy();
    if (parser_LookupInt(p, &XRefFormat2626_15_ra0o,
                         &XRefFormat2626_15_ra1o, XRefFormat2626_17_ra3o,
                         XRefFormat2626_17_ra1o, DDL::UInt<64>{UINT64_C(2)})) {
      XRefFormat2626_15_ra2o = XRefFormat2626_17_ra1o;
      XRefFormat2626_15_ra3u = XRefFormat2626_17_ra2u;
      XRefFormat2626_15_ra4u = r0;
      goto XRefFormat2626_15;
    } else {
      XRefFormat2626_17_ra1o.free();
      goto XRefFormat2626_14;
    }
  }
  // NormalBlock
  XRefFormat2626_18: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(118UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:128:14--128:39",
               XRefFormat2626_18_ra0o, r0);
    XRefFormat2626_18_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  XRefFormat2626_19: {
    if (XRefFormat2626_19_ra0u.getValue()) {
      XRefFormat2626_17_ra3o = XRefFormat2626_19_ra1o;
      XRefFormat2626_17_ra0o = XRefFormat2626_19_ra2o;
      XRefFormat2626_17_ra1o = XRefFormat2626_19_ra3o;
      XRefFormat2626_17_ra2u = XRefFormat2626_19_ra4u;
      goto XRefFormat2626_17;
    } else {
      XRefFormat2626_19_ra2o.free();
      XRefFormat2626_19_ra3o.free();
      XRefFormat2626_18_ra0o = XRefFormat2626_19_ra1o;
      goto XRefFormat2626_18;
    }
  }
  // NormalBlock
  XRefFormat2626_20: {
    DDL::Integer r0 = DDL::Integer("18446744073709551615");
    DDL::Bool r1 = DDL::Bool{XRefFormat2626_20_ra0o <= r0};
    r0.free();
    XRefFormat2626_19_ra1o = XRefFormat2626_20_ra3o;
    XRefFormat2626_19_ra0u = r1;
    XRefFormat2626_19_ra2o = XRefFormat2626_20_ra0o;
    XRefFormat2626_19_ra3o = XRefFormat2626_20_ra1o;
    XRefFormat2626_19_ra4u = XRefFormat2626_20_ra2u;
    goto XRefFormat2626_19;
  }
  // NormalBlock
  XRefFormat2626_21: {
    XRefFormat2626_19_ra1o = XRefFormat2626_21_ra3o;
    XRefFormat2626_19_ra0u = DDL::Bool(false);
    XRefFormat2626_19_ra2o = XRefFormat2626_21_ra0o;
    XRefFormat2626_19_ra3o = XRefFormat2626_21_ra1o;
    XRefFormat2626_19_ra4u = XRefFormat2626_21_ra2u;
    goto XRefFormat2626_19;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefFormat2626_22: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefFormat2626_23: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Bool r1 = DDL::Bool{r0 <= XRefFormat2626_23_ra0o};
    r0.free();
    if (r1.getValue()) {
      XRefFormat2626_20_ra3o = XRefFormat2626_23_ra1o;
      XRefFormat2626_20_ra0o = XRefFormat2626_23_ra0o;
      XRefFormat2626_20_ra1o = XRefFormat2626_23_ra2o;
      XRefFormat2626_20_ra2u = XRefFormat2626_23_ra3u;
      goto XRefFormat2626_20;
    } else {
      XRefFormat2626_21_ra3o = XRefFormat2626_23_ra1o;
      XRefFormat2626_21_ra0o = XRefFormat2626_23_ra0o;
      XRefFormat2626_21_ra1o = XRefFormat2626_23_ra2o;
      XRefFormat2626_21_ra2u = XRefFormat2626_23_ra3u;
      goto XRefFormat2626_21;
    }
  }
  // NormalBlock
  XRefFormat2626_25: {
    DDL::UInt<64> r0 = DDL::integer_to_uint<64>(XRefFormat2626_25_ra0o);
    XRefFormat2626_25_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:128:14--128:27:LookupInt",
                false);
    XRefFormat2626_25_ra1o.copy();
    if (parser_LookupInt(p, &XRefFormat2626_23_ra0o,
                         &XRefFormat2626_23_ra1o, XRefFormat2626_25_ra2o,
                         XRefFormat2626_25_ra1o, DDL::UInt<64>{UINT64_C(1)})) {
      XRefFormat2626_23_ra2o = XRefFormat2626_25_ra1o;
      XRefFormat2626_23_ra3u = r0;
      goto XRefFormat2626_23;
    } else {
      XRefFormat2626_25_ra1o.free();
      goto XRefFormat2626_22;
    }
  }
  // NormalBlock
  XRefFormat2626_26: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(118UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(121UL),
                                                           DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:127:14--127:39",
               XRefFormat2626_26_ra0o, r0);
    XRefFormat2626_26_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  XRefFormat2626_27: {
    if (XRefFormat2626_27_ra0u.getValue()) {
      XRefFormat2626_25_ra2o = XRefFormat2626_27_ra1o;
      XRefFormat2626_25_ra0o = XRefFormat2626_27_ra2o;
      XRefFormat2626_25_ra1o = XRefFormat2626_27_ra3o;
      goto XRefFormat2626_25;
    } else {
      XRefFormat2626_27_ra2o.free();
      XRefFormat2626_27_ra3o.free();
      XRefFormat2626_26_ra0o = XRefFormat2626_27_ra1o;
      goto XRefFormat2626_26;
    }
  }
  // NormalBlock
  XRefFormat2626_28: {
    DDL::Integer r0 = DDL::Integer("18446744073709551615");
    DDL::Bool r1 = DDL::Bool{XRefFormat2626_28_ra0o <= r0};
    r0.free();
    XRefFormat2626_27_ra1o = XRefFormat2626_28_ra2o;
    XRefFormat2626_27_ra0u = r1;
    XRefFormat2626_27_ra2o = XRefFormat2626_28_ra0o;
    XRefFormat2626_27_ra3o = XRefFormat2626_28_ra1o;
    goto XRefFormat2626_27;
  }
  // NormalBlock
  XRefFormat2626_29: {
    XRefFormat2626_27_ra1o = XRefFormat2626_29_ra2o;
    XRefFormat2626_27_ra0u = DDL::Bool(false);
    XRefFormat2626_27_ra2o = XRefFormat2626_29_ra0o;
    XRefFormat2626_27_ra3o = XRefFormat2626_29_ra1o;
    goto XRefFormat2626_27;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefFormat2626_30: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefFormat2626_31: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Bool r1 = DDL::Bool{r0 <= XRefFormat2626_31_ra0o};
    r0.free();
    if (r1.getValue()) {
      XRefFormat2626_28_ra2o = XRefFormat2626_31_ra1o;
      XRefFormat2626_28_ra0o = XRefFormat2626_31_ra0o;
      XRefFormat2626_28_ra1o = XRefFormat2626_31_ra2o;
      goto XRefFormat2626_28;
    } else {
      XRefFormat2626_29_ra2o = XRefFormat2626_31_ra1o;
      XRefFormat2626_29_ra0o = XRefFormat2626_31_ra0o;
      XRefFormat2626_29_ra1o = XRefFormat2626_31_ra2o;
      goto XRefFormat2626_29;
    }
  }
  // NormalBlock
  XRefFormat2626_33: {
    DDL::Array<User::Value> r0 = XRefFormat2626_33_ra0o.get_array();
    XRefFormat2626_33_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:127:14--127:27:LookupInt",
                false);
    r0.copy();
    if (parser_LookupInt(p, &XRefFormat2626_31_ra0o,
                         &XRefFormat2626_31_ra1o, XRefFormat2626_33_ra1o, r0,
                         DDL::UInt<64>{UINT64_C(0)})) {
      XRefFormat2626_31_ra2o = r0;
      goto XRefFormat2626_31;
    } else {
      r0.free();
      goto XRefFormat2626_30;
    }
  }
  // NormalBlock
  XRefFormat2626_34: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:126:15--126:48",
               XRefFormat2626_34_ra0o, r0);
    XRefFormat2626_34_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefFormat2626_35: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefFormat2626_36: {
    switch (XRefFormat2626_36_ra0o.getTag()) {
      case DDL::Tag::Value::array:
        XRefFormat2626_33_ra1o = XRefFormat2626_36_ra1o;
        XRefFormat2626_33_ra0o = XRefFormat2626_36_ra0o;
        goto XRefFormat2626_33;
      default:
        XRefFormat2626_36_ra0o.free();
        XRefFormat2626_34_ra0o = XRefFormat2626_36_ra1o;
        goto XRefFormat2626_34;
    }
  }
  // NormalBlock
  XRefFormat2626_37: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(87UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:126:15--126:38:LookupResolve",
                false);
    if (parser_LookupResolve(p, &XRefFormat2626_36_ra0o,
                             &XRefFormat2626_36_ra1o, XRefFormat2626_37_ra0o, r0,
                             XRefFormat2626_37_ra1o)) {
      goto XRefFormat2626_36;
    } else {
      goto XRefFormat2626_35;
    }
  }
}
bool parser_XRefMeta(DDL::ParserStateUser<ReferenceTable> &p,
                     User::XRefMeta* _result, DDL::Input* _result_input, DDL::Input a1,
                     DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2) {
  
// Parameters for L_1_XRefMeta2627
  User::XRefFormat XRefMeta2627_1_ra0o;
  DDL::Input XRefMeta2627_1_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> XRefMeta2627_1_ra2o;
  DDL::Array<User::XRefIndex0> XRefMeta2627_1_ra3o;
  
// Parameters for L_3_XRefMeta2627
  DDL::Array<User::XRefIndex0> XRefMeta2627_3_ra0o;
  DDL::Input XRefMeta2627_3_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> XRefMeta2627_3_ra2o;
  
// Parameters for L_5_XRefMeta2627
  DDL::Unit XRefMeta2627_5_ra0u;
  DDL::Input XRefMeta2627_5_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> XRefMeta2627_5_ra2o;
  
// Parameters for L_6_XRefMeta2627
  DDL::Input XRefMeta2627_6_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> XRefMeta2627_6_ra1o;
  XRefMeta2627_6_ra0o = a1;
  XRefMeta2627_6_ra1o = a2;
  goto XRefMeta2627_6;
  // ReturnBlock (RetNo NoCapture)
  XRefMeta2627_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefMeta2627_1: {
    User::XRefMeta r0;
    r0.init(XRefMeta2627_1_ra3o, XRefMeta2627_1_ra0o,
            XRefMeta2627_1_ra2o);
    p.popDebug();
    *_result = r0;
    *_result_input = XRefMeta2627_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefMeta2627_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefMeta2627_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:112:16--112:32:XRefFormat",
                false);
    XRefMeta2627_3_ra2o.copy();
    if (parser_XRefFormat(p, &XRefMeta2627_1_ra0o,
                          &XRefMeta2627_1_ra1o, XRefMeta2627_3_ra1o, XRefMeta2627_3_ra2o)) {
      XRefMeta2627_1_ra2o = XRefMeta2627_3_ra2o;
      XRefMeta2627_1_ra3o = XRefMeta2627_3_ra0o;
      goto XRefMeta2627_1;
    } else {
      XRefMeta2627_3_ra2o.free();
      XRefMeta2627_3_ra0o.free();
      goto XRefMeta2627_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  XRefMeta2627_4: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefMeta2627_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:111:16--111:31:XRefIndex",
                false);
    XRefMeta2627_5_ra2o.copy();
    if (parser_XRefIndex(p, &XRefMeta2627_3_ra0o, &XRefMeta2627_3_ra1o,
                         XRefMeta2627_5_ra1o, XRefMeta2627_5_ra2o)) {
      XRefMeta2627_3_ra2o = XRefMeta2627_5_ra2o;
      goto XRefMeta2627_3;
    } else {
      XRefMeta2627_5_ra2o.free();
      goto XRefMeta2627_2;
    }
  }
  // NormalBlock
  XRefMeta2627_6: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(88UL),
                                                           DDL::UInt<8>(82UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(102UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:110:5--110:27:CheckType_",
                false);
    XRefMeta2627_6_ra1o.copy();
    if (parser_CheckType_(p, &XRefMeta2627_5_ra0u,
                          &XRefMeta2627_5_ra1o, XRefMeta2627_6_ra0o, r0,
                          XRefMeta2627_6_ra1o)) {
      XRefMeta2627_5_ra2o = XRefMeta2627_6_ra1o;
      goto XRefMeta2627_5;
    } else {
      XRefMeta2627_6_ra1o.free();
      goto XRefMeta2627_4;
    }
  }
}
bool parser_Many_3361(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                      DDL::Input a1, DDL::UInt<64> a2, DDL::Builder<DDL::UInt<8>> a3,
                      DDL::UInt<64> a4) {
  
// Parameters for L_2_Many3361
  DDL::Input Many3361_2_ra0o;
  
// Parameters for L_4_Many3361
  DDL::Input Many3361_4_ra0o;
  DDL::Input Many3361_4_ra1o;
  
// Parameters for L_7_Many3361
  DDL::Input Many3361_7_ra0o;
  DDL::UInt<8> Many3361_7_ra1u;
  DDL::UInt<64> Many3361_7_ra2u;
  DDL::Builder<DDL::UInt<8>> Many3361_7_ra3o;
  DDL::UInt<64> Many3361_7_ra4u;
  
// Parameters for L_8_Many3361
  DDL::Input Many3361_8_ra0o;
  DDL::Input Many3361_8_ra1o;
  
// Parameters for L_9_Many3361
  DDL::Input Many3361_9_ra2o;
  DDL::Input Many3361_9_ra0o;
  DDL::Input Many3361_9_ra1o;
  DDL::UInt<64> Many3361_9_ra3u;
  DDL::Builder<DDL::UInt<8>> Many3361_9_ra4o;
  DDL::UInt<64> Many3361_9_ra5u;
  
// Parameters for L_10_Many3361
  DDL::Input Many3361_10_ra0o;
  DDL::UInt<64> Many3361_10_ra1u;
  DDL::Builder<DDL::UInt<8>> Many3361_10_ra2o;
  DDL::UInt<64> Many3361_10_ra3u;
  
// Parameters for L_11_Many3361
  DDL::Input Many3361_11_ra1o;
  DDL::Builder<DDL::UInt<8>> Many3361_11_ra0o;
  
// Parameters for L_12_Many3361
  DDL::Input Many3361_12_ra0o;
  DDL::UInt<64> Many3361_12_ra1u;
  DDL::Builder<DDL::UInt<8>> Many3361_12_ra2o;
  DDL::UInt<64> Many3361_12_ra3u;
  Many3361_12_ra0o = a1;
  Many3361_12_ra1u = a2;
  Many3361_12_ra2o = a3;
  Many3361_12_ra3u = a4;
  goto Many3361_12;
  // NormalBlock
  Many3361_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many3361_2_ra0o, r0);
    Many3361_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Many3361_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:166:21--166:25",
               Many3361_4_ra0o, r0);
    Many3361_4_ra0o.free();
    r0.free();
    Many3361_2_ra0o = Many3361_4_ra1o;
    goto Many3361_2;
  }
  // NormalBlock
  Many3361_7: {
    DDL::Input r0 = Many3361_7_ra0o.iDrop(DDL::Size::from(DDL::UInt<64>{UINT64_C(1)}.rep()));
    DDL::UInt<64> r1 = Many3361_7_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<DDL::UInt<8>> r2 = DDL::Builder<DDL::UInt<8>>(Many3361_7_ra3o,
                                                               Many3361_7_ra1u);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:166:14--166:25:Many_3361",
                true);
    Many3361_12_ra0o = r0;
    Many3361_12_ra1u = r1;
    Many3361_12_ra2o = r2;
    Many3361_12_ra3u = Many3361_7_ra4u;
    goto Many3361_12;
  }
  // NormalBlock
  Many3361_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(66UL),
                                                           DDL::UInt<8>(121UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(112UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(111UL),
                                                           DDL::UInt<8>(110UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:166:21--166:25",
               Many3361_8_ra0o, r0);
    Many3361_8_ra0o.free();
    r0.free();
    Many3361_2_ra0o = Many3361_8_ra1o;
    goto Many3361_2;
  }
  // NormalBlock
  Many3361_9: {
    DDL::UInt<8> r0 = DDL::UInt<8>(Many3361_9_ra0o.iHead());
    if (DDL::Bool(true).getValue()) {
      Many3361_9_ra1o.free();
      Many3361_9_ra2o.free();
      Many3361_7_ra0o = Many3361_9_ra0o;
      Many3361_7_ra1u = r0;
      Many3361_7_ra2u = Many3361_9_ra3u;
      Many3361_7_ra3o = Many3361_9_ra4o;
      Many3361_7_ra4u = Many3361_9_ra5u;
      goto Many3361_7;
    } else {
      Many3361_9_ra0o.free();
      Many3361_9_ra4o.free();
      Many3361_8_ra0o = Many3361_9_ra2o;
      Many3361_8_ra1o = Many3361_9_ra1o;
      goto Many3361_8;
    }
  }
  // NormalBlock
  Many3361_10: {
    DDL::Bool r0 = Many3361_10_ra0o.length() == 0;
    Many3361_10_ra0o.copy();
    Many3361_10_ra0o.copy();
    Many3361_10_ra0o.copy();
    if (r0.getValue()) {
      Many3361_10_ra2o.free();
      Many3361_10_ra0o.free();
      Many3361_10_ra0o.free();
      Many3361_4_ra0o = Many3361_10_ra0o;
      Many3361_4_ra1o = Many3361_10_ra0o;
      goto Many3361_4;
    } else {
      Many3361_10_ra0o.free();
      Many3361_9_ra2o = Many3361_10_ra0o;
      Many3361_9_ra0o = Many3361_10_ra0o;
      Many3361_9_ra1o = Many3361_10_ra0o;
      Many3361_9_ra3u = Many3361_10_ra1u;
      Many3361_9_ra4o = Many3361_10_ra2o;
      Many3361_9_ra5u = Many3361_10_ra3u;
      goto Many3361_9;
    }
  }
  // NormalBlock
  Many3361_11: {
    p.popDebug();
    *_result = Many3361_11_ra0o;
    *_result_input = Many3361_11_ra1o;
    return true;
  }
  // NormalBlock
  Many3361_12: {
    DDL::Bool r0 = DDL::Bool{Many3361_12_ra1u < Many3361_12_ra3u};
    if (r0.getValue()) {
      Many3361_10_ra0o = Many3361_12_ra0o;
      Many3361_10_ra1u = Many3361_12_ra1u;
      Many3361_10_ra2o = Many3361_12_ra2o;
      Many3361_10_ra3u = Many3361_12_ra3u;
      goto Many3361_10;
    } else {
      Many3361_11_ra1o = Many3361_12_ra0o;
      Many3361_11_ra0o = Many3361_12_ra2o;
      goto Many3361_11;
    }
  }
}
bool parser_for_3370(DDL::ParserStateUser<ReferenceTable> &p,
                     DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                     DDL::Integer a2, DDL::Array<DDL::UInt<8>>::Iterator a3) {
  
// Parameters for L_0_for3370
  DDL::Input for3370_0_ra1o;
  DDL::Integer for3370_0_ra0o;
  
// Parameters for L_1_for3370
  DDL::Input for3370_1_ra2o;
  DDL::Array<DDL::UInt<8>>::Iterator for3370_1_ra0o;
  DDL::Integer for3370_1_ra1o;
  
// Parameters for L_2_for3370
  DDL::Input for3370_2_ra0o;
  DDL::Integer for3370_2_ra1o;
  DDL::Array<DDL::UInt<8>>::Iterator for3370_2_ra2o;
  for3370_2_ra0o = a1;
  for3370_2_ra1o = a2;
  for3370_2_ra2o = a3;
  goto for3370_2;
  // NormalBlock
  for3370_0: {
    p.popDebug();
    *_result = for3370_0_ra0o;
    *_result_input = for3370_0_ra1o;
    return true;
  }
  // NormalBlock
  for3370_1: {
    DDL::UInt<8> r0 = for3370_1_ra0o.value();
    DDL::Integer r1 = DDL::Integer("256");
    DDL::Integer r2 = for3370_1_ra1o * r1;
    DDL::Integer r3 = DDL::uint_to_integer<8>(r0);
    DDL::Integer r4 = r2 + r3;
    DDL::Array<DDL::UInt<8>>::Iterator r5 = for3370_1_ra0o.next();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:167:27--167:45:for_3370",
                true);
    for3370_2_ra0o = for3370_1_ra2o;
    for3370_2_ra1o = r4;
    for3370_2_ra2o = r5;
    goto for3370_2;
  }
  // NormalBlock
  for3370_2: {
    DDL::Bool r0 = for3370_2_ra2o.done();
    if (r0.getValue()) {
      for3370_2_ra2o.free();
      for3370_0_ra1o = for3370_2_ra0o;
      for3370_0_ra0o = for3370_2_ra1o;
      goto for3370_0;
    } else {
      for3370_1_ra2o = for3370_2_ra0o;
      for3370_1_ra0o = for3370_2_ra2o;
      for3370_1_ra1o = for3370_2_ra1o;
      goto for3370_1;
    }
  }
}
bool parser_BEBytes(DDL::ParserStateUser<ReferenceTable> &p,
                    DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                    DDL::UInt<64> a2) {
  
// Parameters for L_1_BEBytes2628
  DDL::Builder<DDL::UInt<8>> BEBytes2628_1_ra0o;
  DDL::Input BEBytes2628_1_ra1o;
  
// Parameters for L_2_BEBytes2628
  DDL::Input BEBytes2628_2_ra0o;
  DDL::UInt<64> BEBytes2628_2_ra1u;
  BEBytes2628_2_ra0o = a1;
  BEBytes2628_2_ra1u = a2;
  goto BEBytes2628_2;
  // ReturnBlock (RetNo NoCapture)
  BEBytes2628_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  BEBytes2628_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>(BEBytes2628_1_ra0o);
    DDL::Integer r1 = DDL::Integer("0");
    DDL::Array<DDL::UInt<8>>::Iterator r2 = DDL::Array<DDL::UInt<8>>::Iterator(r0);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:167:5--167:45:for_3370",
                true);
    return parser_for_3370(p, _result, _result_input,
                           BEBytes2628_1_ra1o, r1, r2);
  }
  // NormalBlock
  BEBytes2628_2: {
    DDL::Builder<DDL::UInt<8>> r0;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:166:14--166:25:Many_3361",
                false);
    if (parser_Many_3361(p, &BEBytes2628_1_ra0o, &BEBytes2628_1_ra1o,
                         BEBytes2628_2_ra0o, DDL::UInt<64>{UINT64_C(0)}, r0,
                         BEBytes2628_2_ra1u)) {
      goto BEBytes2628_1;
    } else {
      goto BEBytes2628_0;
    }
  }
}
bool parser_XRefFieldWithDefault(DDL::ParserStateUser<ReferenceTable> &p,
                                 DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                                 DDL::Integer a2, DDL::UInt<64> a3) {
  
// Parameters for L_0_XRefFieldWithDefault2629
  DDL::Input XRefFieldWithDefault2629_0_ra1o;
  DDL::Integer XRefFieldWithDefault2629_0_ra0o;
  
// Parameters for L_1_XRefFieldWithDefault2629
  DDL::Input XRefFieldWithDefault2629_1_ra1o;
  DDL::UInt<64> XRefFieldWithDefault2629_1_ra0u;
  
// Parameters for L_2_XRefFieldWithDefault2629
  DDL::Input XRefFieldWithDefault2629_2_ra0o;
  DDL::Integer XRefFieldWithDefault2629_2_ra1o;
  DDL::UInt<64> XRefFieldWithDefault2629_2_ra2u;
  XRefFieldWithDefault2629_2_ra0o = a1;
  XRefFieldWithDefault2629_2_ra1o = a2;
  XRefFieldWithDefault2629_2_ra2u = a3;
  goto XRefFieldWithDefault2629_2;
  // NormalBlock
  XRefFieldWithDefault2629_0: {
    p.popDebug();
    *_result = XRefFieldWithDefault2629_0_ra0o;
    *_result_input = XRefFieldWithDefault2629_0_ra1o;
    return true;
  }
  // NormalBlock
  XRefFieldWithDefault2629_1: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:157:10--157:18:BEBytes",
                true);
    return parser_BEBytes(p, _result, _result_input,
                          XRefFieldWithDefault2629_1_ra1o, XRefFieldWithDefault2629_1_ra0u);
  }
  // NormalBlock
  XRefFieldWithDefault2629_2: {
    switch (XRefFieldWithDefault2629_2_ra2u.rep()) {
      case 0:
        XRefFieldWithDefault2629_0_ra1o = XRefFieldWithDefault2629_2_ra0o;
        XRefFieldWithDefault2629_0_ra0o = XRefFieldWithDefault2629_2_ra1o;
        goto XRefFieldWithDefault2629_0;
      default:
        XRefFieldWithDefault2629_2_ra1o.free();
        XRefFieldWithDefault2629_1_ra1o = XRefFieldWithDefault2629_2_ra0o;
        XRefFieldWithDefault2629_1_ra0u = XRefFieldWithDefault2629_2_ra2u;
        goto XRefFieldWithDefault2629_1;
    }
  }
}
bool parser_XRefFieldRequired(DDL::ParserStateUser<ReferenceTable> &p,
                              DDL::Integer* _result, DDL::Input* _result_input, DDL::Input a1,
                              DDL::UInt<64> a2) {
  
// Parameters for L_1_XRefFieldRequired2630
  DDL::Unit XRefFieldRequired2630_1_ra0u;
  DDL::Input XRefFieldRequired2630_1_ra1o;
  DDL::UInt<64> XRefFieldRequired2630_1_ra2u;
  
// Parameters for L_2_XRefFieldRequired2630
  DDL::Input XRefFieldRequired2630_2_ra0o;
  DDL::UInt<64> XRefFieldRequired2630_2_ra1u;
  XRefFieldRequired2630_2_ra0o = a1;
  XRefFieldRequired2630_2_ra1u = a2;
  goto XRefFieldRequired2630_2;
  // ReturnBlock (RetNo NoCapture)
  XRefFieldRequired2630_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefFieldRequired2630_1: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:162:5--162:13:BEBytes",
                true);
    return parser_BEBytes(p, _result, _result_input,
                          XRefFieldRequired2630_1_ra1o, XRefFieldRequired2630_1_ra2u);
  }
  // NormalBlock
  XRefFieldRequired2630_2: {
    DDL::Bool r0 = DDL::Bool{XRefFieldRequired2630_2_ra1u != DDL::UInt<64>{UINT64_C(0)}};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:161:5--161:17:Guard_",
                false);
    if (parser_Guard_(p, &XRefFieldRequired2630_1_ra0u,
                      &XRefFieldRequired2630_1_ra1o, XRefFieldRequired2630_2_ra0o, r0)) {
      XRefFieldRequired2630_1_ra2u = XRefFieldRequired2630_2_ra1u;
      goto XRefFieldRequired2630_1;
    } else {
      goto XRefFieldRequired2630_0;
    }
  }
}
bool parser_XRefFree(DDL::ParserStateUser<ReferenceTable> &p,
                     User::XRefFree* _result, DDL::Input* _result_input, DDL::Input a1,
                     User::XRefFormat a2) {
  
// Parameters for L_1_XRefFree2631
  DDL::Integer XRefFree2631_1_ra0o;
  DDL::Input XRefFree2631_1_ra1o;
  DDL::Integer XRefFree2631_1_ra2o;
  
// Parameters for L_3_XRefFree2631
  DDL::Integer XRefFree2631_3_ra0o;
  DDL::Input XRefFree2631_3_ra1o;
  User::XRefFormat XRefFree2631_3_ra2o;
  
// Parameters for L_4_XRefFree2631
  DDL::Input XRefFree2631_4_ra0o;
  User::XRefFormat XRefFree2631_4_ra1o;
  XRefFree2631_4_ra0o = a1;
  XRefFree2631_4_ra1o = a2;
  goto XRefFree2631_4;
  // ReturnBlock (RetNo NoCapture)
  XRefFree2631_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefFree2631_1: {
    User::XRefFree r0;
    r0.init(XRefFree2631_1_ra2o, XRefFree2631_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = XRefFree2631_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefFree2631_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefFree2631_3: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::UInt<64> r1 = XRefFree2631_3_ra2o.get_b3();
    XRefFree2631_3_ra2o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:198:11--198:37:XRefFieldWithDefault",
                false);
    if (parser_XRefFieldWithDefault(p, &XRefFree2631_1_ra0o,
                                    &XRefFree2631_1_ra1o, XRefFree2631_3_ra1o, r0, r1)) {
      XRefFree2631_1_ra2o = XRefFree2631_3_ra0o;
      goto XRefFree2631_1;
    } else {
      XRefFree2631_3_ra0o.free();
      goto XRefFree2631_0;
    }
  }
  // NormalBlock
  XRefFree2631_4: {
    DDL::UInt<64> r0 = XRefFree2631_4_ra1o.get_b2();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:197:11--197:32:XRefFieldRequired",
                false);
    if (parser_XRefFieldRequired(p, &XRefFree2631_3_ra0o,
                                 &XRefFree2631_3_ra1o, XRefFree2631_4_ra0o, r0)) {
      XRefFree2631_3_ra2o = XRefFree2631_4_ra1o;
      goto XRefFree2631_3;
    } else {
      XRefFree2631_4_ra1o.free();
      goto XRefFree2631_2;
    }
  }
}
bool parser_XRefOffset(DDL::ParserStateUser<ReferenceTable> &p,
                       User::XRefOffset* _result, DDL::Input* _result_input,
                       DDL::Input a1, User::XRefFormat a2) {
  
// Parameters for L_1_XRefOffset2632
  DDL::Integer XRefOffset2632_1_ra0o;
  DDL::Input XRefOffset2632_1_ra1o;
  DDL::Integer XRefOffset2632_1_ra2o;
  
// Parameters for L_3_XRefOffset2632
  DDL::Integer XRefOffset2632_3_ra0o;
  DDL::Input XRefOffset2632_3_ra1o;
  User::XRefFormat XRefOffset2632_3_ra2o;
  
// Parameters for L_4_XRefOffset2632
  DDL::Input XRefOffset2632_4_ra0o;
  User::XRefFormat XRefOffset2632_4_ra1o;
  XRefOffset2632_4_ra0o = a1;
  XRefOffset2632_4_ra1o = a2;
  goto XRefOffset2632_4;
  // ReturnBlock (RetNo NoCapture)
  XRefOffset2632_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefOffset2632_1: {
    User::XRefOffset r0;
    r0.init(XRefOffset2632_1_ra2o, XRefOffset2632_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = XRefOffset2632_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefOffset2632_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefOffset2632_3: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::UInt<64> r1 = XRefOffset2632_3_ra2o.get_b3();
    XRefOffset2632_3_ra2o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:203:14--203:40:XRefFieldWithDefault",
                false);
    if (parser_XRefFieldWithDefault(p, &XRefOffset2632_1_ra0o,
                                    &XRefOffset2632_1_ra1o, XRefOffset2632_3_ra1o, r0, r1)) {
      XRefOffset2632_1_ra2o = XRefOffset2632_3_ra0o;
      goto XRefOffset2632_1;
    } else {
      XRefOffset2632_3_ra0o.free();
      goto XRefOffset2632_0;
    }
  }
  // NormalBlock
  XRefOffset2632_4: {
    DDL::UInt<64> r0 = XRefOffset2632_4_ra1o.get_b2();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:202:14--202:35:XRefFieldRequired",
                false);
    if (parser_XRefFieldRequired(p, &XRefOffset2632_3_ra0o,
                                 &XRefOffset2632_3_ra1o, XRefOffset2632_4_ra0o, r0)) {
      XRefOffset2632_3_ra2o = XRefOffset2632_4_ra1o;
      goto XRefOffset2632_3;
    } else {
      XRefOffset2632_4_ra1o.free();
      goto XRefOffset2632_2;
    }
  }
}
bool parser_XRefCompressed(DDL::ParserStateUser<ReferenceTable> &p,
                           User::XRefCompressed* _result, DDL::Input* _result_input,
                           DDL::Input a1, User::XRefFormat a2) {
  
// Parameters for L_1_XRefCompressed2633
  DDL::Integer XRefCompressed2633_1_ra0o;
  DDL::Input XRefCompressed2633_1_ra1o;
  DDL::Integer XRefCompressed2633_1_ra2o;
  
// Parameters for L_3_XRefCompressed2633
  DDL::Integer XRefCompressed2633_3_ra0o;
  DDL::Input XRefCompressed2633_3_ra1o;
  User::XRefFormat XRefCompressed2633_3_ra2o;
  
// Parameters for L_4_XRefCompressed2633
  DDL::Input XRefCompressed2633_4_ra0o;
  User::XRefFormat XRefCompressed2633_4_ra1o;
  XRefCompressed2633_4_ra0o = a1;
  XRefCompressed2633_4_ra1o = a2;
  goto XRefCompressed2633_4;
  // ReturnBlock (RetNo NoCapture)
  XRefCompressed2633_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefCompressed2633_1: {
    User::XRefCompressed r0;
    r0.init(XRefCompressed2633_1_ra2o, XRefCompressed2633_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = XRefCompressed2633_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefCompressed2633_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefCompressed2633_3: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::UInt<64> r1 = XRefCompressed2633_3_ra2o.get_b3();
    XRefCompressed2633_3_ra2o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:208:21--208:47:XRefFieldWithDefault",
                false);
    if (parser_XRefFieldWithDefault(p, &XRefCompressed2633_1_ra0o,
                                    &XRefCompressed2633_1_ra1o, XRefCompressed2633_3_ra1o, r0,
                                    r1)) {
      XRefCompressed2633_1_ra2o = XRefCompressed2633_3_ra0o;
      goto XRefCompressed2633_1;
    } else {
      XRefCompressed2633_3_ra0o.free();
      goto XRefCompressed2633_0;
    }
  }
  // NormalBlock
  XRefCompressed2633_4: {
    DDL::UInt<64> r0 = XRefCompressed2633_4_ra1o.get_b2();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:207:21--207:42:XRefFieldRequired",
                false);
    if (parser_XRefFieldRequired(p, &XRefCompressed2633_3_ra0o,
                                 &XRefCompressed2633_3_ra1o, XRefCompressed2633_4_ra0o, r0)) {
      XRefCompressed2633_3_ra2o = XRefCompressed2633_4_ra1o;
      goto XRefCompressed2633_3;
    } else {
      XRefCompressed2633_4_ra1o.free();
      goto XRefCompressed2633_2;
    }
  }
}
bool parser_Chunk_2634(DDL::ParserStateUser<ReferenceTable> &p,
                       User::XRefObjEntry* _result, DDL::Input* _result_input,
                       DDL::Input a1, User::XRefFormat a2, DDL::UInt<64> a3) {
  
// Parameters for L_1_Chunk2634
  DDL::Unit Chunk2634_1_ra0u;
  DDL::Input Chunk2634_1_ra1o;
  User::XRefObjEntry Chunk2634_1_ra2o;
  
// Parameters for L_2_Chunk2634
  User::XRefObjEntry Chunk2634_2_ra0o;
  DDL::Input Chunk2634_2_ra3o;
  DDL::UInt<64> Chunk2634_2_ra1u;
  DDL::Input Chunk2634_2_ra2o;
  
// Parameters for L_4_Chunk2634
  User::XRefFree Chunk2634_4_ra0o;
  DDL::Input Chunk2634_4_ra1o;
  DDL::UInt<64> Chunk2634_4_ra2u;
  DDL::Input Chunk2634_4_ra3o;
  
// Parameters for L_5_Chunk2634
  DDL::Input Chunk2634_5_ra3o;
  User::XRefFormat Chunk2634_5_ra0o;
  DDL::UInt<64> Chunk2634_5_ra1u;
  DDL::Input Chunk2634_5_ra2o;
  
// Parameters for L_7_Chunk2634
  User::XRefOffset Chunk2634_7_ra0o;
  DDL::Input Chunk2634_7_ra1o;
  DDL::UInt<64> Chunk2634_7_ra2u;
  DDL::Input Chunk2634_7_ra3o;
  
// Parameters for L_8_Chunk2634
  DDL::Input Chunk2634_8_ra3o;
  User::XRefFormat Chunk2634_8_ra0o;
  DDL::UInt<64> Chunk2634_8_ra1u;
  DDL::Input Chunk2634_8_ra2o;
  
// Parameters for L_10_Chunk2634
  User::XRefCompressed Chunk2634_10_ra0o;
  DDL::Input Chunk2634_10_ra1o;
  DDL::UInt<64> Chunk2634_10_ra2u;
  DDL::Input Chunk2634_10_ra3o;
  
// Parameters for L_11_Chunk2634
  DDL::Input Chunk2634_11_ra3o;
  User::XRefFormat Chunk2634_11_ra0o;
  DDL::UInt<64> Chunk2634_11_ra1u;
  DDL::Input Chunk2634_11_ra2o;
  
// Parameters for L_12_Chunk2634
  DDL::Input Chunk2634_12_ra2o;
  DDL::UInt<64> Chunk2634_12_ra0u;
  DDL::Input Chunk2634_12_ra1o;
  
// Parameters for L_14_Chunk2634
  DDL::Integer Chunk2634_14_ra0o;
  DDL::Input Chunk2634_14_ra1o;
  User::XRefFormat Chunk2634_14_ra2o;
  DDL::UInt<64> Chunk2634_14_ra3u;
  DDL::Input Chunk2634_14_ra4o;
  
// Parameters for L_16_Chunk2634
  DDL::UInt<64> Chunk2634_16_ra0u;
  DDL::Input Chunk2634_16_ra1o;
  User::XRefFormat Chunk2634_16_ra2o;
  DDL::UInt<64> Chunk2634_16_ra3u;
  DDL::Input Chunk2634_16_ra4o;
  
// Parameters for L_17_Chunk2634
  DDL::Input Chunk2634_17_ra0o;
  
// Parameters for L_18_Chunk2634
  DDL::Input Chunk2634_18_ra0o;
  User::XRefFormat Chunk2634_18_ra1o;
  DDL::UInt<64> Chunk2634_18_ra2u;
  Chunk2634_18_ra0o = a1;
  Chunk2634_18_ra1o = a2;
  Chunk2634_18_ra2u = a3;
  goto Chunk2634_18;
  // ReturnBlock (RetNo NoCapture)
  Chunk2634_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Chunk2634_1: {
    p.popDebug();
    *_result = Chunk2634_1_ra2o;
    *_result_input = Chunk2634_1_ra1o;
    return true;
  }
  // NormalBlock
  Chunk2634_2: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:109:5--109:19:SetStreamAt_",
                false);
    if (parser_SetStreamAt_(p, &Chunk2634_1_ra0u, &Chunk2634_1_ra1o,
                            Chunk2634_2_ra3o, Chunk2634_2_ra1u, Chunk2634_2_ra2o)) {
      Chunk2634_1_ra2o = Chunk2634_2_ra0o;
      goto Chunk2634_1;
    } else {
      Chunk2634_2_ra0o.free();
      goto Chunk2634_0;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Chunk2634_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Chunk2634_4: {
    User::XRefObjEntry r0;
    r0.init_free(Chunk2634_4_ra0o);
    Chunk2634_2_ra0o = r0;
    Chunk2634_2_ra3o = Chunk2634_4_ra1o;
    Chunk2634_2_ra1u = Chunk2634_4_ra2u;
    Chunk2634_2_ra2o = Chunk2634_4_ra3o;
    goto Chunk2634_2;
  }
  // NormalBlock
  Chunk2634_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:173:28--173:37:XRefFree",
                false);
    if (parser_XRefFree(p, &Chunk2634_4_ra0o, &Chunk2634_4_ra1o,
                        Chunk2634_5_ra3o, Chunk2634_5_ra0o)) {
      Chunk2634_4_ra2u = Chunk2634_5_ra1u;
      Chunk2634_4_ra3o = Chunk2634_5_ra2o;
      goto Chunk2634_4;
    } else {
      Chunk2634_5_ra2o.free();
      goto Chunk2634_3;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Chunk2634_6: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Chunk2634_7: {
    User::XRefObjEntry r0;
    r0.init_inUse(Chunk2634_7_ra0o);
    Chunk2634_2_ra0o = r0;
    Chunk2634_2_ra3o = Chunk2634_7_ra1o;
    Chunk2634_2_ra1u = Chunk2634_7_ra2u;
    Chunk2634_2_ra2o = Chunk2634_7_ra3o;
    goto Chunk2634_2;
  }
  // NormalBlock
  Chunk2634_8: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:174:28--174:39:XRefOffset",
                false);
    if (parser_XRefOffset(p, &Chunk2634_7_ra0o, &Chunk2634_7_ra1o,
                          Chunk2634_8_ra3o, Chunk2634_8_ra0o)) {
      Chunk2634_7_ra2u = Chunk2634_8_ra1u;
      Chunk2634_7_ra3o = Chunk2634_8_ra2o;
      goto Chunk2634_7;
    } else {
      Chunk2634_8_ra2o.free();
      goto Chunk2634_6;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  Chunk2634_9: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Chunk2634_10: {
    User::XRefObjEntry r0;
    r0.init_compressed(Chunk2634_10_ra0o);
    Chunk2634_2_ra0o = r0;
    Chunk2634_2_ra3o = Chunk2634_10_ra1o;
    Chunk2634_2_ra1u = Chunk2634_10_ra2u;
    Chunk2634_2_ra2o = Chunk2634_10_ra3o;
    goto Chunk2634_2;
  }
  // NormalBlock
  Chunk2634_11: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:175:28--175:43:XRefCompressed",
                false);
    if (parser_XRefCompressed(p, &Chunk2634_10_ra0o,
                              &Chunk2634_10_ra1o, Chunk2634_11_ra3o, Chunk2634_11_ra0o)) {
      Chunk2634_10_ra2u = Chunk2634_11_ra1u;
      Chunk2634_10_ra3o = Chunk2634_11_ra2o;
      goto Chunk2634_10;
    } else {
      Chunk2634_11_ra2o.free();
      goto Chunk2634_9;
    }
  }
  // NormalBlock
  Chunk2634_12: {
    User::XRefObjEntry r0;
    r0.init_null();
    Chunk2634_2_ra0o = r0;
    Chunk2634_2_ra3o = Chunk2634_12_ra2o;
    Chunk2634_2_ra1u = Chunk2634_12_ra0u;
    Chunk2634_2_ra2o = Chunk2634_12_ra1o;
    goto Chunk2634_2;
  }
  // ReturnBlock (RetNo NoCapture)
  Chunk2634_13: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Chunk2634_14: {
    int c = DDL::compare(Chunk2634_14_ra0o, UINT32_C(1));
    if (c == 0) {
      Chunk2634_14_ra0o.free();
      Chunk2634_8_ra3o = Chunk2634_14_ra1o;
      Chunk2634_8_ra0o = Chunk2634_14_ra2o;
      Chunk2634_8_ra1u = Chunk2634_14_ra3u;
      Chunk2634_8_ra2o = Chunk2634_14_ra4o;
      goto Chunk2634_8;
    } else {
      if (c < 0) {
        int c = DDL::compare(Chunk2634_14_ra0o, UINT32_C(0));
        if (c == 0) {
          Chunk2634_14_ra0o.free();
          Chunk2634_5_ra3o = Chunk2634_14_ra1o;
          Chunk2634_5_ra0o = Chunk2634_14_ra2o;
          Chunk2634_5_ra1u = Chunk2634_14_ra3u;
          Chunk2634_5_ra2o = Chunk2634_14_ra4o;
          goto Chunk2634_5;
        } else {
          Chunk2634_14_ra0o.free();
          Chunk2634_14_ra2o.free();
          Chunk2634_12_ra2o = Chunk2634_14_ra1o;
          Chunk2634_12_ra0u = Chunk2634_14_ra3u;
          Chunk2634_12_ra1o = Chunk2634_14_ra4o;
          goto Chunk2634_12;
        }
      } else {
        int c = DDL::compare(Chunk2634_14_ra0o, UINT32_C(2));
        if (c == 0) {
          Chunk2634_14_ra0o.free();
          Chunk2634_11_ra3o = Chunk2634_14_ra1o;
          Chunk2634_11_ra0o = Chunk2634_14_ra2o;
          Chunk2634_11_ra1u = Chunk2634_14_ra3u;
          Chunk2634_11_ra2o = Chunk2634_14_ra4o;
          goto Chunk2634_11;
        } else {
          Chunk2634_14_ra0o.free();
          Chunk2634_14_ra2o.free();
          Chunk2634_12_ra2o = Chunk2634_14_ra1o;
          Chunk2634_12_ra0u = Chunk2634_14_ra3u;
          Chunk2634_12_ra1o = Chunk2634_14_ra4o;
          goto Chunk2634_12;
        }
      }
    }
  }
  // NormalBlock
  Chunk2634_16: {
    DDL::Input r0 = Chunk2634_16_ra1o.iTake(DDL::Size::from(Chunk2634_16_ra0u.rep()));
    DDL::Integer r1 = DDL::Integer("1");
    DDL::UInt<64> r2 = Chunk2634_16_ra2o.get_b1();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:172:10--172:36:XRefFieldWithDefault",
                false);
    if (parser_XRefFieldWithDefault(p, &Chunk2634_14_ra0o,
                                    &Chunk2634_14_ra1o, r0, r1, r2)) {
      Chunk2634_14_ra2o = Chunk2634_16_ra2o;
      Chunk2634_14_ra3u = Chunk2634_16_ra3u;
      Chunk2634_14_ra4o = Chunk2634_16_ra4o;
      goto Chunk2634_14;
    } else {
      Chunk2634_16_ra2o.free();
      Chunk2634_16_ra4o.free();
      goto Chunk2634_13;
    }
  }
  // NormalBlock
  Chunk2634_17: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(116UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:107:16--107:21",
               Chunk2634_17_ra0o, r0);
    Chunk2634_17_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  Chunk2634_18: {
    DDL::UInt<64> r0 = DDL::UInt<64>{Chunk2634_18_ra0o.length().rep()};
    DDL::Bool r1 = DDL::Bool{Chunk2634_18_ra2u <= r0};
    Chunk2634_18_ra0o.copy();
    if (r1.getValue()) {
      Chunk2634_16_ra0u = Chunk2634_18_ra2u;
      Chunk2634_16_ra1o = Chunk2634_18_ra0o;
      Chunk2634_16_ra2o = Chunk2634_18_ra1o;
      Chunk2634_16_ra3u = Chunk2634_18_ra2u;
      Chunk2634_16_ra4o = Chunk2634_18_ra0o;
      goto Chunk2634_16;
    } else {
      Chunk2634_18_ra1o.free();
      Chunk2634_18_ra0o.free();
      Chunk2634_17_ra0o = Chunk2634_18_ra0o;
      goto Chunk2634_17;
    }
  }
}
bool parser_XRefObjEntry(DDL::ParserStateUser<ReferenceTable> &p,
                         User::XRefObjEntry* _result, DDL::Input* _result_input,
                         DDL::Input a1, User::XRefFormat a2) {
  
// Parameters for L_0_XRefObjEntry2635
  DDL::Input XRefObjEntry2635_0_ra0o;
  User::XRefFormat XRefObjEntry2635_0_ra1o;
  XRefObjEntry2635_0_ra0o = a1;
  XRefObjEntry2635_0_ra1o = a2;
  goto XRefObjEntry2635_0;
  // NormalBlock
  XRefObjEntry2635_0: {
    DDL::UInt<64> r0 = XRefObjEntry2635_0_ra1o.get_width();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:171:3--195:3:Chunk_2634",
                true);
    return parser_Chunk_2634(p, _result, _result_input,
                             XRefObjEntry2635_0_ra0o, XRefObjEntry2635_0_ra1o, r0);
  }
}
bool parser_Many_3407(DDL::ParserStateUser<ReferenceTable> &p,
                      DDL::Builder<User::XRefObjEntry>* _result,
                      DDL::Input* _result_input, DDL::Input a1, DDL::UInt<64> a2,
                      DDL::Builder<User::XRefObjEntry> a3, User::XRefMeta a4,
                      User::XRefIndex0 a5) {
  
// Parameters for L_1_Many3407
  DDL::Input Many3407_1_ra0o;
  
// Parameters for L_2_Many3407
  User::XRefObjEntry Many3407_2_ra0o;
  DDL::Input Many3407_2_ra1o;
  DDL::UInt<64> Many3407_2_ra2u;
  DDL::Builder<User::XRefObjEntry> Many3407_2_ra3o;
  User::XRefMeta Many3407_2_ra4o;
  User::XRefIndex0 Many3407_2_ra5o;
  
// Parameters for L_3_Many3407
  DDL::Input Many3407_3_ra0o;
  User::XRefMeta Many3407_3_ra1o;
  DDL::UInt<64> Many3407_3_ra2u;
  DDL::Builder<User::XRefObjEntry> Many3407_3_ra3o;
  User::XRefIndex0 Many3407_3_ra4o;
  
// Parameters for L_4_Many3407
  DDL::Input Many3407_4_ra1o;
  DDL::Builder<User::XRefObjEntry> Many3407_4_ra0o;
  
// Parameters for L_5_Many3407
  DDL::Input Many3407_5_ra0o;
  DDL::UInt<64> Many3407_5_ra1u;
  DDL::Builder<User::XRefObjEntry> Many3407_5_ra2o;
  User::XRefMeta Many3407_5_ra3o;
  User::XRefIndex0 Many3407_5_ra4o;
  Many3407_5_ra0o = a1;
  Many3407_5_ra1u = a2;
  Many3407_5_ra2o = a3;
  Many3407_5_ra3o = a4;
  Many3407_5_ra4o = a5;
  goto Many3407_5;
  // ReturnBlock (RetNo NoCapture)
  Many3407_1: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(115UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(102UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(115UL)};
    p.noteFail(true, "", Many3407_1_ra0o, r0);
    Many3407_1_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  Many3407_2: {
    DDL::UInt<64> r0 = Many3407_2_ra2u + DDL::UInt<64>{UINT64_C(1)};
    DDL::Builder<User::XRefObjEntry> r1 = DDL::Builder<User::XRefObjEntry>(Many3407_2_ra3o,
                                                                           Many3407_2_ra0o);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:148:26--148:63:Many_3407",
                true);
    Many3407_5_ra0o = Many3407_2_ra1o;
    Many3407_5_ra1u = r0;
    Many3407_5_ra2o = r1;
    Many3407_5_ra3o = Many3407_2_ra4o;
    Many3407_5_ra4o = Many3407_2_ra5o;
    goto Many3407_5;
  }
  // NormalBlock
  Many3407_3: {
    User::XRefFormat r0 = Many3407_3_ra1o.get_widths();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:148:40--148:63:XRefObjEntry",
                false);
    Many3407_3_ra0o.copy();
    if (parser_XRefObjEntry(p, &Many3407_2_ra0o, &Many3407_2_ra1o,
                            Many3407_3_ra0o, r0)) {
      Many3407_3_ra0o.free();
      Many3407_2_ra2u = Many3407_3_ra2u;
      Many3407_2_ra3o = Many3407_3_ra3o;
      Many3407_2_ra4o = Many3407_3_ra1o;
      Many3407_2_ra5o = Many3407_3_ra4o;
      goto Many3407_2;
    } else {
      Many3407_3_ra3o.free();
      Many3407_3_ra1o.free();
      Many3407_3_ra4o.free();
      Many3407_1_ra0o = Many3407_3_ra0o;
      goto Many3407_1;
    }
  }
  // NormalBlock
  Many3407_4: {
    p.popDebug();
    *_result = Many3407_4_ra0o;
    *_result_input = Many3407_4_ra1o;
    return true;
  }
  // NormalBlock
  Many3407_5: {
    DDL::UInt<64> r0 = Many3407_5_ra4o.get_num();
    DDL::Bool r1 = DDL::Bool{Many3407_5_ra1u < r0};
    if (r1.getValue()) {
      Many3407_3_ra0o = Many3407_5_ra0o;
      Many3407_3_ra1o = Many3407_5_ra3o;
      Many3407_3_ra2u = Many3407_5_ra1u;
      Many3407_3_ra3o = Many3407_5_ra2o;
      Many3407_3_ra4o = Many3407_5_ra4o;
      goto Many3407_3;
    } else {
      Many3407_5_ra3o.free();
      Many3407_5_ra4o.free();
      Many3407_4_ra1o = Many3407_5_ra0o;
      Many3407_4_ra0o = Many3407_5_ra2o;
      goto Many3407_4;
    }
  }
}
bool parser_map_3413(DDL::ParserStateUser<ReferenceTable> &p,
                     DDL::Builder<User::XRefObjTable0>* _result,
                     DDL::Input* _result_input, DDL::Input a1,
                     DDL::Builder<User::XRefObjTable0> a2,
                     DDL::Array<User::XRefIndex0>::Iterator a3, User::XRefMeta a4) {
  
// Parameters for L_0_map3413
  DDL::Input map3413_0_ra1o;
  DDL::Builder<User::XRefObjTable0> map3413_0_ra0o;
  
// Parameters for L_2_map3413
  DDL::Builder<User::XRefObjEntry> map3413_2_ra0o;
  DDL::Input map3413_2_ra1o;
  DDL::Integer map3413_2_ra2o;
  DDL::Builder<User::XRefObjTable0> map3413_2_ra3o;
  DDL::Array<User::XRefIndex0>::Iterator map3413_2_ra4o;
  User::XRefMeta map3413_2_ra5o;
  
// Parameters for L_3_map3413
  DDL::Input map3413_3_ra3o;
  DDL::Array<User::XRefIndex0>::Iterator map3413_3_ra0o;
  User::XRefMeta map3413_3_ra1o;
  DDL::Builder<User::XRefObjTable0> map3413_3_ra2o;
  
// Parameters for L_4_map3413
  DDL::Input map3413_4_ra0o;
  DDL::Builder<User::XRefObjTable0> map3413_4_ra1o;
  DDL::Array<User::XRefIndex0>::Iterator map3413_4_ra2o;
  User::XRefMeta map3413_4_ra3o;
  map3413_4_ra0o = a1;
  map3413_4_ra1o = a2;
  map3413_4_ra2o = a3;
  map3413_4_ra3o = a4;
  goto map3413_4;
  // NormalBlock
  map3413_0: {
    p.popDebug();
    *_result = map3413_0_ra0o;
    *_result_input = map3413_0_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  map3413_1: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  map3413_2: {
    DDL::Array<User::XRefObjEntry> r0 = DDL::Array<User::XRefObjEntry>(map3413_2_ra0o);
    User::XRefObjTable0 r1;
    r1.init(map3413_2_ra2o, r0);
    DDL::Builder<User::XRefObjTable0> r2 = DDL::Builder<User::XRefObjTable0>(map3413_2_ra3o,
                                                                             r1);
    DDL::Array<User::XRefIndex0>::Iterator r3 = map3413_2_ra4o.next();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:147:26--147:36:map_3413",
                true);
    map3413_4_ra0o = map3413_2_ra1o;
    map3413_4_ra1o = r2;
    map3413_4_ra2o = r3;
    map3413_4_ra3o = map3413_2_ra5o;
    goto map3413_4;
  }
  // NormalBlock
  map3413_3: {
    User::XRefIndex0 r0 = map3413_3_ra0o.value();
    DDL::Integer r1 = r0.get_firstId();
    DDL::Builder<User::XRefObjEntry> r2;
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:147:26--147:36:Many_3407",
                false);
    map3413_3_ra1o.copy();
    if (parser_Many_3407(p, &map3413_2_ra0o, &map3413_2_ra1o,
                         map3413_3_ra3o, DDL::UInt<64>{UINT64_C(0)}, r2, map3413_3_ra1o,
                         r0)) {
      map3413_2_ra2o = r1;
      map3413_2_ra3o = map3413_3_ra2o;
      map3413_2_ra4o = map3413_3_ra0o;
      map3413_2_ra5o = map3413_3_ra1o;
      goto map3413_2;
    } else {
      r1.free();
      map3413_3_ra2o.free();
      map3413_3_ra0o.free();
      map3413_3_ra1o.free();
      goto map3413_1;
    }
  }
  // NormalBlock
  map3413_4: {
    DDL::Bool r0 = map3413_4_ra2o.done();
    if (r0.getValue()) {
      map3413_4_ra2o.free();
      map3413_4_ra3o.free();
      map3413_0_ra1o = map3413_4_ra0o;
      map3413_0_ra0o = map3413_4_ra1o;
      goto map3413_0;
    } else {
      map3413_3_ra3o = map3413_4_ra0o;
      map3413_3_ra0o = map3413_4_ra2o;
      map3413_3_ra1o = map3413_4_ra3o;
      map3413_3_ra2o = map3413_4_ra1o;
      goto map3413_3;
    }
  }
}
bool parser_XRefObjTable(DDL::ParserStateUser<ReferenceTable> &p,
                         User::XRefObjTable* _result, DDL::Input* _result_input,
                         DDL::Input a1, User::XRefMeta a2) {
  
// Parameters for L_1_XRefObjTable2636
  User::TrailerDict XRefObjTable2636_1_ra0o;
  DDL::Input XRefObjTable2636_1_ra1o;
  DDL::Array<User::XRefObjTable0> XRefObjTable2636_1_ra2o;
  
// Parameters for L_3_XRefObjTable2636
  DDL::Builder<User::XRefObjTable0> XRefObjTable2636_3_ra0o;
  DDL::Input XRefObjTable2636_3_ra1o;
  User::XRefMeta XRefObjTable2636_3_ra2o;
  
// Parameters for L_4_XRefObjTable2636
  DDL::Input XRefObjTable2636_4_ra0o;
  User::XRefMeta XRefObjTable2636_4_ra1o;
  XRefObjTable2636_4_ra0o = a1;
  XRefObjTable2636_4_ra1o = a2;
  goto XRefObjTable2636_4;
  // ReturnBlock (RetNo NoCapture)
  XRefObjTable2636_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefObjTable2636_1: {
    User::XRefObjTable r0;
    r0.init(XRefObjTable2636_1_ra2o, XRefObjTable2636_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = XRefObjTable2636_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefObjTable2636_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefObjTable2636_3: {
    DDL::Array<User::XRefObjTable0> r0 = DDL::Array<User::XRefObjTable0>(XRefObjTable2636_3_ra0o);
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r1 = XRefObjTable2636_3_ra2o.get_header();
    XRefObjTable2636_3_ra2o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:150:15--150:37:TrailerDict",
                false);
    if (parser_TrailerDict(p, &XRefObjTable2636_1_ra0o,
                           &XRefObjTable2636_1_ra1o, XRefObjTable2636_3_ra1o, r1)) {
      XRefObjTable2636_1_ra2o = r0;
      goto XRefObjTable2636_1;
    } else {
      r0.free();
      goto XRefObjTable2636_0;
    }
  }
  // NormalBlock
  XRefObjTable2636_4: {
    DDL::Builder<User::XRefObjTable0> r0;
    DDL::Array<User::XRefIndex0> r1 = XRefObjTable2636_4_ra1o.get_index();
    DDL::Array<User::XRefIndex0>::Iterator r2 = DDL::Array<User::XRefIndex0>::Iterator(r1);
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:145:12--150:11:map_3413",
                false);
    XRefObjTable2636_4_ra1o.copy();
    if (parser_map_3413(p, &XRefObjTable2636_3_ra0o,
                        &XRefObjTable2636_3_ra1o, XRefObjTable2636_4_ra0o, r0, r2,
                        XRefObjTable2636_4_ra1o)) {
      XRefObjTable2636_3_ra2o = XRefObjTable2636_4_ra1o;
      goto XRefObjTable2636_3;
    } else {
      XRefObjTable2636_4_ra1o.free();
      goto XRefObjTable2636_2;
    }
  }
}
bool parser_LookAhead_2637(DDL::ParserStateUser<ReferenceTable> &p,
                           User::XRefObjTable* _result, DDL::Input* _result_input,
                           DDL::Input a1, DDL::Input a2, User::Stream a3) {
  
// Parameters for L_1_LookAhead2637
  User::XRefObjTable LookAhead2637_1_ra0o;
  DDL::Input LookAhead2637_1_ra1o;
  DDL::Input LookAhead2637_1_ra2o;
  
// Parameters for L_3_LookAhead2637
  User::XRefMeta LookAhead2637_3_ra0o;
  DDL::Input LookAhead2637_3_ra1o;
  DDL::Input LookAhead2637_3_ra2o;
  
// Parameters for L_4_LookAhead2637
  DDL::Input LookAhead2637_4_ra0o;
  DDL::Input LookAhead2637_4_ra1o;
  User::Stream LookAhead2637_4_ra2o;
  LookAhead2637_4_ra0o = a1;
  LookAhead2637_4_ra1o = a2;
  LookAhead2637_4_ra2o = a3;
  goto LookAhead2637_4;
  // ReturnBlock (RetNo NoCapture)
  LookAhead2637_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LookAhead2637_1: {
    LookAhead2637_1_ra1o.free();
    p.popDebug();
    *_result = LookAhead2637_1_ra0o;
    *_result_input = LookAhead2637_1_ra2o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  LookAhead2637_2: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LookAhead2637_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:106:34--106:66:XRefObjTable",
                false);
    if (parser_XRefObjTable(p, &LookAhead2637_1_ra0o,
                            &LookAhead2637_1_ra1o, LookAhead2637_3_ra1o,
                            LookAhead2637_3_ra0o)) {
      LookAhead2637_1_ra2o = LookAhead2637_3_ra2o;
      goto LookAhead2637_1;
    } else {
      LookAhead2637_3_ra2o.free();
      goto LookAhead2637_0;
    }
  }
  // NormalBlock
  LookAhead2637_4: {
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r0 = LookAhead2637_4_ra2o.get_header();
    LookAhead2637_4_ra2o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:106:48--106:66:XRefMeta",
                false);
    if (parser_XRefMeta(p, &LookAhead2637_3_ra0o,
                        &LookAhead2637_3_ra1o, LookAhead2637_4_ra1o, r0)) {
      LookAhead2637_3_ra2o = LookAhead2637_4_ra0o;
      goto LookAhead2637_3;
    } else {
      LookAhead2637_4_ra0o.free();
      goto LookAhead2637_2;
    }
  }
}
bool parser_WithStream_2638(DDL::ParserStateUser<ReferenceTable> &p,
                            User::XRefObjTable* _result, DDL::Input* _result_input,
                            DDL::Input a1, User::Stream a2, DDL::Input a3) {
  
// Parameters for L_0_WithStream2638
  DDL::Input WithStream2638_0_ra0o;
  User::Stream WithStream2638_0_ra1o;
  DDL::Input WithStream2638_0_ra2o;
  WithStream2638_0_ra0o = a1;
  WithStream2638_0_ra1o = a2;
  WithStream2638_0_ra2o = a3;
  goto WithStream2638_0;
  // NormalBlock
  WithStream2638_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/Daedalus.ddl:123:3--132:1:LookAhead_2637",
                true);
    return parser_LookAhead_2637(p, _result, _result_input,
                                 WithStream2638_0_ra0o, WithStream2638_0_ra2o,
                                 WithStream2638_0_ra1o);
  }
}
bool parser_XRefObj(DDL::ParserStateUser<ReferenceTable> &p,
                    User::XRefObjTable* _result, DDL::Input* _result_input,
                    DDL::Input a1) {
  
// Parameters for L_1_XRefObj2639
  DDL::Input XRefObj2639_1_ra2o;
  User::ApplyFilter XRefObj2639_1_ra0o;
  User::Stream XRefObj2639_1_ra1o;
  
// Parameters for L_2_XRefObj2639
  DDL::Input XRefObj2639_2_ra0o;
  
// Parameters for L_4_XRefObj2639
  DDL::Input XRefObj2639_4_ra1o;
  User::TopDeclDef XRefObj2639_4_ra0o;
  
// Parameters for L_5_XRefObj2639
  DDL::Input XRefObj2639_5_ra0o;
  
// Parameters for L_7_XRefObj2639
  User::TopDecl XRefObj2639_7_ra0o;
  DDL::Input XRefObj2639_7_ra1o;
  
// Parameters for L_8_XRefObj2639
  DDL::Input XRefObj2639_8_ra0o;
  XRefObj2639_8_ra0o = a1;
  goto XRefObj2639_8;
  // NormalBlock
  XRefObj2639_1: {
    DDL::Input r0 = XRefObj2639_1_ra0o.get_ok();
    XRefObj2639_1_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:106:5--106:66:WithStream_2638",
                true);
    return parser_WithStream_2638(p, _result, _result_input,
                                  XRefObj2639_1_ra2o, XRefObj2639_1_ra1o, r0);
  }
  // NormalBlock
  XRefObj2639_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:106:17--106:30",
               XRefObj2639_2_ra0o, r0);
    XRefObj2639_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  XRefObj2639_4: {
    User::Stream r0 = XRefObj2639_4_ra0o.get_stream();
    XRefObj2639_4_ra0o.free();
    User::ApplyFilter r1 = r0.get_body();
    switch (r1.getTag()) {
      case DDL::Tag::ApplyFilter::ok:
        XRefObj2639_1_ra2o = XRefObj2639_4_ra1o;
        XRefObj2639_1_ra0o = r1;
        XRefObj2639_1_ra1o = r0;
        goto XRefObj2639_1;
      default:
        r0.free();
        r1.free();
        XRefObj2639_2_ra0o = XRefObj2639_4_ra1o;
        goto XRefObj2639_2;
    }
  }
  // NormalBlock
  XRefObj2639_5: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:105:15--105:35",
               XRefObj2639_5_ra0o, r0);
    XRefObj2639_5_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  XRefObj2639_6: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  XRefObj2639_7: {
    User::TopDeclDef r0 = XRefObj2639_7_ra0o.get_obj();
    XRefObj2639_7_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::TopDeclDef::stream:
        XRefObj2639_4_ra1o = XRefObj2639_7_ra1o;
        XRefObj2639_4_ra0o = r0;
        goto XRefObj2639_4;
      default:
        r0.free();
        XRefObj2639_5_ra0o = XRefObj2639_7_ra1o;
        goto XRefObj2639_5;
    }
  }
  // NormalBlock
  XRefObj2639_8: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:105:15--105:21:TopDecl",
                false);
    if (parser_TopDecl(p, &XRefObj2639_7_ra0o, &XRefObj2639_7_ra1o,
                       XRefObj2639_8_ra0o)) {
      goto XRefObj2639_7;
    } else {
      goto XRefObj2639_6;
    }
  }
}
bool parser_CrossRef(DDL::ParserStateUser<ReferenceTable> &p,
                     User::CrossRef* _result, DDL::Input* _result_input,
                     DDL::Input a1) {
  
// Parameters for L_1_CrossRef2640
  User::XRefObjTable CrossRef2640_1_ra0o;
  DDL::Input CrossRef2640_1_ra1o;
  
// Parameters for L_3_CrossRef2640
  DDL::Input CrossRef2640_3_ra0o;
  
// Parameters for L_4_CrossRef2640
  User::CrossRefAndTrailer CrossRef2640_4_ra0o;
  DDL::Input CrossRef2640_4_ra1o;
  
// Parameters for L_5_CrossRef2640
  DDL::Input CrossRef2640_5_ra0o;
  CrossRef2640_5_ra0o = a1;
  goto CrossRef2640_5;
  // ReturnBlock (RetNo NoCapture)
  CrossRef2640_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRef2640_1: {
    User::CrossRef r0;
    r0.init_newXref(CrossRef2640_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = CrossRef2640_1_ra1o;
    return true;
  }
  // ReturnBlock (RetNo NoCapture)
  CrossRef2640_3: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:40:15--40:21:XRefObj",
                false);
    if (parser_XRefObj(p, &CrossRef2640_1_ra0o, &CrossRef2640_1_ra1o,
                       CrossRef2640_3_ra0o)) {
      goto CrossRef2640_1;
    } else {
      goto CrossRef2640_0;
    }
  }
  // ReturnBlock (RetYes NoCapture)
  CrossRef2640_4: {
    User::CrossRef r0;
    r0.init_oldXref(CrossRef2640_4_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = CrossRef2640_4_ra1o;
    return true;
  }
  // NormalBlock
  CrossRef2640_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfXRef.ddl:39:15--39:32:CrossRefAndTrailer",
                false);
    CrossRef2640_5_ra0o.copy();
    if (parser_CrossRefAndTrailer(p, &CrossRef2640_4_ra0o,
                                  &CrossRef2640_4_ra1o, CrossRef2640_5_ra0o)) {
      CrossRef2640_5_ra0o.free();
      goto CrossRef2640_4;
    } else {
      CrossRef2640_3_ra0o = CrossRef2640_5_ra0o;
      goto CrossRef2640_3;
    }
  }
}
bool parser_NumberAsNat_(DDL::ParserStateUser<ReferenceTable> &p,
                         DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1,
                         User::Number a2) {
  
// Parameters for L_0_NumberAsNat_2641
  DDL::Input NumberAsNat_2641_0_ra1o;
  DDL::Bool NumberAsNat_2641_0_ra0u;
  
// Parameters for L_1_NumberAsNat_2641
  DDL::Input NumberAsNat_2641_1_ra1o;
  User::Number NumberAsNat_2641_1_ra0o;
  
// Parameters for L_2_NumberAsNat_2641
  DDL::Input NumberAsNat_2641_2_ra0o;
  
// Parameters for L_3_NumberAsNat_2641
  DDL::Input NumberAsNat_2641_3_ra0o;
  User::Number NumberAsNat_2641_3_ra1o;
  NumberAsNat_2641_3_ra0o = a1;
  NumberAsNat_2641_3_ra1o = a2;
  goto NumberAsNat_2641_3;
  // NormalBlock
  NumberAsNat_2641_0: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfValue.ddl:106:5--106:35:Guard_",
                true);
    return parser_Guard_(p, _result, _result_input,
                         NumberAsNat_2641_0_ra1o, NumberAsNat_2641_0_ra0u);
  }
  // NormalBlock
  NumberAsNat_2641_1: {
    DDL::Integer r0 = NumberAsNat_2641_1_ra0o.get_exp();
    NumberAsNat_2641_1_ra0o.free();
    DDL::Integer r1 = DDL::Integer("0");
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r0.free();
    r1.free();
    NumberAsNat_2641_0_ra1o = NumberAsNat_2641_1_ra1o;
    NumberAsNat_2641_0_ra0u = r2;
    goto NumberAsNat_2641_0;
  }
  // NormalBlock
  NumberAsNat_2641_2: {
    NumberAsNat_2641_0_ra1o = NumberAsNat_2641_2_ra0o;
    NumberAsNat_2641_0_ra0u = DDL::Bool(false);
    goto NumberAsNat_2641_0;
  }
  // NormalBlock
  NumberAsNat_2641_3: {
    DDL::Integer r0 = DDL::Integer("0");
    DDL::Integer r1 = NumberAsNat_2641_3_ra1o.get_num();
    DDL::Bool r2 = DDL::Bool{r0 <= r1};
    r0.free();
    r1.free();
    if (r2.getValue()) {
      NumberAsNat_2641_1_ra1o = NumberAsNat_2641_3_ra0o;
      NumberAsNat_2641_1_ra0o = NumberAsNat_2641_3_ra1o;
      goto NumberAsNat_2641_1;
    } else {
      NumberAsNat_2641_3_ra1o.free();
      NumberAsNat_2641_2_ra0o = NumberAsNat_2641_3_ra0o;
      goto NumberAsNat_2641_2;
    }
  }
}
bool parser_LookupNat_(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Unit* _result, DDL::Input* _result_input, DDL::Input a1,
                       DDL::Array<DDL::UInt<8>> a2,
                       DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a3) {
  
// Parameters for L_1_LookupNat_2642
  DDL::Input LookupNat_2642_1_ra1o;
  User::Value LookupNat_2642_1_ra0o;
  
// Parameters for L_2_LookupNat_2642
  DDL::Input LookupNat_2642_2_ra0o;
  
// Parameters for L_4_LookupNat_2642
  User::Value LookupNat_2642_4_ra0o;
  DDL::Input LookupNat_2642_4_ra1o;
  
// Parameters for L_5_LookupNat_2642
  DDL::Input LookupNat_2642_5_ra0o;
  DDL::Array<DDL::UInt<8>> LookupNat_2642_5_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> LookupNat_2642_5_ra2o;
  LookupNat_2642_5_ra0o = a1;
  LookupNat_2642_5_ra1o = a2;
  LookupNat_2642_5_ra2o = a3;
  goto LookupNat_2642_5;
  // NormalBlock
  LookupNat_2642_1: {
    User::Number r0 = LookupNat_2642_1_ra0o.get_number();
    LookupNat_2642_1_ra0o.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:275:21--275:60:NumberAsNat_",
                true);
    return parser_NumberAsNat_(p, _result, _result_input,
                               LookupNat_2642_1_ra1o, r0);
  }
  // NormalBlock
  LookupNat_2642_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:275:34--275:60",
               LookupNat_2642_2_ra0o, r0);
    LookupNat_2642_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  LookupNat_2642_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  LookupNat_2642_4: {
    switch (LookupNat_2642_4_ra0o.getTag()) {
      case DDL::Tag::Value::number:
        LookupNat_2642_1_ra1o = LookupNat_2642_4_ra1o;
        LookupNat_2642_1_ra0o = LookupNat_2642_4_ra0o;
        goto LookupNat_2642_1;
      default:
        LookupNat_2642_4_ra0o.free();
        LookupNat_2642_2_ra0o = LookupNat_2642_4_ra1o;
        goto LookupNat_2642_2;
    }
  }
  // NormalBlock
  LookupNat_2642_5: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfDecl.ddl:275:34--275:50:LookupResolve",
                false);
    if (parser_LookupResolve(p, &LookupNat_2642_4_ra0o,
                             &LookupNat_2642_4_ra1o, LookupNat_2642_5_ra0o,
                             LookupNat_2642_5_ra1o, LookupNat_2642_5_ra2o)) {
      goto LookupNat_2642_4;
    } else {
      goto LookupNat_2642_3;
    }
  }
}
bool parser_V4stmFname(DDL::ParserStateUser<ReferenceTable> &p,
                       DDL::Array<DDL::UInt<8>>* _result, DDL::Input* _result_input,
                       DDL::Input a1,
                       DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2) {
  
// Parameters for L_1_V4stmFname2643
  DDL::Unit V4stmFname2643_1_ra0u;
  DDL::Input V4stmFname2643_1_ra1o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_1_ra2o;
  
// Parameters for L_3_V4stmFname2643
  DDL::Input V4stmFname2643_3_ra3o;
  User::Value V4stmFname2643_3_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_3_ra1o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_3_ra2o;
  
// Parameters for L_4_V4stmFname2643
  DDL::Input V4stmFname2643_4_ra0o;
  
// Parameters for L_6_V4stmFname2643
  DDL::Input V4stmFname2643_6_ra0o;
  
// Parameters for L_7_V4stmFname2643
  DDL::Input V4stmFname2643_7_ra3o;
  DDL::Maybe<User::Value> V4stmFname2643_7_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_7_ra1o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_7_ra2o;
  
// Parameters for L_9_V4stmFname2643
  DDL::Input V4stmFname2643_9_ra2o;
  User::Value V4stmFname2643_9_ra0o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_9_ra1o;
  
// Parameters for L_10_V4stmFname2643
  DDL::Input V4stmFname2643_10_ra0o;
  
// Parameters for L_12_V4stmFname2643
  DDL::Input V4stmFname2643_12_ra0o;
  
// Parameters for L_13_V4stmFname2643
  DDL::Input V4stmFname2643_13_ra2o;
  DDL::Maybe<User::Value> V4stmFname2643_13_ra0o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_13_ra1o;
  
// Parameters for L_15_V4stmFname2643
  DDL::Unit V4stmFname2643_15_ra0u;
  DDL::Input V4stmFname2643_15_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_15_ra2o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_15_ra3o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_15_ra4o;
  
// Parameters for L_17_V4stmFname2643
  DDL::Input V4stmFname2643_17_ra4o;
  User::Value V4stmFname2643_17_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_17_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_17_ra2o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_17_ra3o;
  
// Parameters for L_18_V4stmFname2643
  DDL::Input V4stmFname2643_18_ra0o;
  
// Parameters for L_20_V4stmFname2643
  DDL::Input V4stmFname2643_20_ra0o;
  
// Parameters for L_21_V4stmFname2643
  DDL::Input V4stmFname2643_21_ra4o;
  DDL::Maybe<User::Value> V4stmFname2643_21_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_21_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_21_ra2o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_21_ra3o;
  
// Parameters for L_23_V4stmFname2643
  DDL::Input V4stmFname2643_23_ra3o;
  User::Value V4stmFname2643_23_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_23_ra1o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_23_ra2o;
  
// Parameters for L_24_V4stmFname2643
  DDL::Input V4stmFname2643_24_ra0o;
  
// Parameters for L_26_V4stmFname2643
  DDL::Input V4stmFname2643_26_ra0o;
  
// Parameters for L_27_V4stmFname2643
  DDL::Input V4stmFname2643_27_ra3o;
  DDL::Maybe<User::Value> V4stmFname2643_27_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_27_ra1o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_27_ra2o;
  
// Parameters for L_29_V4stmFname2643
  DDL::Input V4stmFname2643_29_ra3o;
  User::Value V4stmFname2643_29_ra0o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_29_ra1o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_29_ra2o;
  
// Parameters for L_30_V4stmFname2643
  DDL::Input V4stmFname2643_30_ra0o;
  
// Parameters for L_32_V4stmFname2643
  DDL::Input V4stmFname2643_32_ra0o;
  
// Parameters for L_33_V4stmFname2643
  DDL::Input V4stmFname2643_33_ra3o;
  DDL::Maybe<User::Value> V4stmFname2643_33_ra0o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_33_ra1o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_33_ra2o;
  
// Parameters for L_35_V4stmFname2643
  DDL::Input V4stmFname2643_35_ra3o;
  User::Value V4stmFname2643_35_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_35_ra1o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_35_ra2o;
  
// Parameters for L_36_V4stmFname2643
  DDL::Input V4stmFname2643_36_ra0o;
  
// Parameters for L_38_V4stmFname2643
  DDL::Input V4stmFname2643_38_ra0o;
  
// Parameters for L_39_V4stmFname2643
  DDL::Input V4stmFname2643_39_ra3o;
  DDL::Maybe<User::Value> V4stmFname2643_39_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_39_ra1o;
  DDL::Array<DDL::UInt<8>> V4stmFname2643_39_ra2o;
  
// Parameters for L_41_V4stmFname2643
  DDL::Input V4stmFname2643_41_ra2o;
  User::Value V4stmFname2643_41_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_41_ra1o;
  
// Parameters for L_42_V4stmFname2643
  DDL::Input V4stmFname2643_42_ra0o;
  
// Parameters for L_44_V4stmFname2643
  DDL::Input V4stmFname2643_44_ra0o;
  
// Parameters for L_45_V4stmFname2643
  DDL::Input V4stmFname2643_45_ra2o;
  DDL::Maybe<User::Value> V4stmFname2643_45_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_45_ra1o;
  
// Parameters for L_46_V4stmFname2643
  DDL::Input V4stmFname2643_46_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> V4stmFname2643_46_ra1o;
  V4stmFname2643_46_ra0o = a1;
  V4stmFname2643_46_ra1o = a2;
  goto V4stmFname2643_46;
  // ReturnBlock (RetNo NoCapture)
  V4stmFname2643_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  V4stmFname2643_1: {
    p.popDebug();
    *_result = V4stmFname2643_1_ra2o;
    *_result_input = V4stmFname2643_1_ra1o;
    return true;
  }
  // NormalBlock
  V4stmFname2643_3: {
    DDL::Array<DDL::UInt<8>> r0 = V4stmFname2643_3_ra0o.get_name();
    V4stmFname2643_3_ra0o.free();
    r0.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(76UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:75:14--75:40:LookupNat_",
                false);
    if (parser_LookupNat_(p, &V4stmFname2643_1_ra0u,
                          &V4stmFname2643_1_ra1o, V4stmFname2643_3_ra3o, r1,
                          V4stmFname2643_3_ra1o)) {
      V4stmFname2643_1_ra2o = V4stmFname2643_3_ra2o;
      goto V4stmFname2643_1;
    } else {
      V4stmFname2643_3_ra2o.free();
      goto V4stmFname2643_0;
    }
  }
  // NormalBlock
  V4stmFname2643_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:74:16--74:45",
               V4stmFname2643_4_ra0o, r0);
    V4stmFname2643_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_6: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:74:16--74:36",
               V4stmFname2643_6_ra0o, r0);
    V4stmFname2643_6_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_7: {
    User::Value r0 = V4stmFname2643_7_ra0o.getValue();
    V4stmFname2643_7_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::name:
        V4stmFname2643_3_ra3o = V4stmFname2643_7_ra3o;
        V4stmFname2643_3_ra0o = r0;
        V4stmFname2643_3_ra1o = V4stmFname2643_7_ra1o;
        V4stmFname2643_3_ra2o = V4stmFname2643_7_ra2o;
        goto V4stmFname2643_3;
      default:
        V4stmFname2643_7_ra1o.free();
        V4stmFname2643_7_ra2o.free();
        r0.free();
        V4stmFname2643_4_ra0o = V4stmFname2643_7_ra3o;
        goto V4stmFname2643_4;
    }
  }
  // NormalBlock
  V4stmFname2643_9: {
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r0 = V4stmFname2643_9_ra0o.get_dict();
    V4stmFname2643_9_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(67UL),
                                                           DDL::UInt<8>(70UL), DDL::UInt<8>(77UL)};
    DDL::Maybe<User::Value> r2 = r0.lookup(r1);
    r1.free();
    if (r2.isJust()) {
      V4stmFname2643_7_ra3o = V4stmFname2643_9_ra2o;
      V4stmFname2643_7_ra0o = r2;
      V4stmFname2643_7_ra1o = r0;
      V4stmFname2643_7_ra2o = V4stmFname2643_9_ra1o;
      goto V4stmFname2643_7;
    } else {
      V4stmFname2643_9_ra1o.free();
      r0.free();
      r2.free();
      V4stmFname2643_6_ra0o = V4stmFname2643_9_ra2o;
      goto V4stmFname2643_6;
    }
  }
  // NormalBlock
  V4stmFname2643_10: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:73:16--73:38",
               V4stmFname2643_10_ra0o, r0);
    V4stmFname2643_10_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_12: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:73:16--73:29",
               V4stmFname2643_12_ra0o, r0);
    V4stmFname2643_12_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_13: {
    User::Value r0 = V4stmFname2643_13_ra0o.getValue();
    V4stmFname2643_13_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::dict:
        V4stmFname2643_9_ra2o = V4stmFname2643_13_ra2o;
        V4stmFname2643_9_ra0o = r0;
        V4stmFname2643_9_ra1o = V4stmFname2643_13_ra1o;
        goto V4stmFname2643_9;
      default:
        V4stmFname2643_13_ra1o.free();
        r0.free();
        V4stmFname2643_10_ra0o = V4stmFname2643_13_ra2o;
        goto V4stmFname2643_10;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  V4stmFname2643_14: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  V4stmFname2643_15: {
    DDL::Maybe<User::Value> r0 = V4stmFname2643_15_ra2o.lookup(V4stmFname2643_15_ra3o);
    V4stmFname2643_15_ra2o.free();
    V4stmFname2643_15_ra3o.free();
    if (r0.isJust()) {
      V4stmFname2643_13_ra2o = V4stmFname2643_15_ra1o;
      V4stmFname2643_13_ra0o = r0;
      V4stmFname2643_13_ra1o = V4stmFname2643_15_ra4o;
      goto V4stmFname2643_13;
    } else {
      V4stmFname2643_15_ra4o.free();
      r0.free();
      V4stmFname2643_12_ra0o = V4stmFname2643_15_ra1o;
      goto V4stmFname2643_12;
    }
  }
  // NormalBlock
  V4stmFname2643_17: {
    DDL::Array<DDL::UInt<8>> r0 = V4stmFname2643_17_ra0o.get_name();
    V4stmFname2643_17_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(76UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:70:14--70:40:LookupNat_",
                false);
    if (parser_LookupNat_(p, &V4stmFname2643_15_ra0u,
                          &V4stmFname2643_15_ra1o, V4stmFname2643_17_ra4o, r1,
                          V4stmFname2643_17_ra1o)) {
      V4stmFname2643_15_ra2o = V4stmFname2643_17_ra2o;
      V4stmFname2643_15_ra3o = V4stmFname2643_17_ra3o;
      V4stmFname2643_15_ra4o = r0;
      goto V4stmFname2643_15;
    } else {
      V4stmFname2643_17_ra2o.free();
      V4stmFname2643_17_ra3o.free();
      r0.free();
      goto V4stmFname2643_14;
    }
  }
  // NormalBlock
  V4stmFname2643_18: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:69:16--69:45",
               V4stmFname2643_18_ra0o, r0);
    V4stmFname2643_18_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_20: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:69:16--69:36",
               V4stmFname2643_20_ra0o, r0);
    V4stmFname2643_20_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_21: {
    User::Value r0 = V4stmFname2643_21_ra0o.getValue();
    V4stmFname2643_21_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::name:
        V4stmFname2643_17_ra4o = V4stmFname2643_21_ra4o;
        V4stmFname2643_17_ra0o = r0;
        V4stmFname2643_17_ra1o = V4stmFname2643_21_ra1o;
        V4stmFname2643_17_ra2o = V4stmFname2643_21_ra2o;
        V4stmFname2643_17_ra3o = V4stmFname2643_21_ra3o;
        goto V4stmFname2643_17;
      default:
        V4stmFname2643_21_ra1o.free();
        V4stmFname2643_21_ra2o.free();
        V4stmFname2643_21_ra3o.free();
        r0.free();
        V4stmFname2643_18_ra0o = V4stmFname2643_21_ra4o;
        goto V4stmFname2643_18;
    }
  }
  // NormalBlock
  V4stmFname2643_23: {
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r0 = V4stmFname2643_23_ra0o.get_dict();
    V4stmFname2643_23_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(67UL),
                                                           DDL::UInt<8>(70UL), DDL::UInt<8>(77UL)};
    DDL::Maybe<User::Value> r2 = r0.lookup(r1);
    r1.free();
    if (r2.isJust()) {
      V4stmFname2643_21_ra4o = V4stmFname2643_23_ra3o;
      V4stmFname2643_21_ra0o = r2;
      V4stmFname2643_21_ra1o = r0;
      V4stmFname2643_21_ra2o = V4stmFname2643_23_ra1o;
      V4stmFname2643_21_ra3o = V4stmFname2643_23_ra2o;
      goto V4stmFname2643_21;
    } else {
      V4stmFname2643_23_ra1o.free();
      V4stmFname2643_23_ra2o.free();
      r0.free();
      r2.free();
      V4stmFname2643_20_ra0o = V4stmFname2643_23_ra3o;
      goto V4stmFname2643_20;
    }
  }
  // NormalBlock
  V4stmFname2643_24: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:68:16--68:38",
               V4stmFname2643_24_ra0o, r0);
    V4stmFname2643_24_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_26: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:68:16--68:29",
               V4stmFname2643_26_ra0o, r0);
    V4stmFname2643_26_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_27: {
    User::Value r0 = V4stmFname2643_27_ra0o.getValue();
    V4stmFname2643_27_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::dict:
        V4stmFname2643_23_ra3o = V4stmFname2643_27_ra3o;
        V4stmFname2643_23_ra0o = r0;
        V4stmFname2643_23_ra1o = V4stmFname2643_27_ra1o;
        V4stmFname2643_23_ra2o = V4stmFname2643_27_ra2o;
        goto V4stmFname2643_23;
      default:
        V4stmFname2643_27_ra1o.free();
        V4stmFname2643_27_ra2o.free();
        r0.free();
        V4stmFname2643_24_ra0o = V4stmFname2643_27_ra3o;
        goto V4stmFname2643_24;
    }
  }
  // NormalBlock
  V4stmFname2643_29: {
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r0 = V4stmFname2643_29_ra0o.get_dict();
    V4stmFname2643_29_ra0o.free();
    DDL::Maybe<User::Value> r1 = r0.lookup(V4stmFname2643_29_ra1o);
    V4stmFname2643_29_ra1o.free();
    if (r1.isJust()) {
      V4stmFname2643_27_ra3o = V4stmFname2643_29_ra3o;
      V4stmFname2643_27_ra0o = r1;
      V4stmFname2643_27_ra1o = r0;
      V4stmFname2643_27_ra2o = V4stmFname2643_29_ra2o;
      goto V4stmFname2643_27;
    } else {
      V4stmFname2643_29_ra2o.free();
      r0.free();
      r1.free();
      V4stmFname2643_26_ra0o = V4stmFname2643_29_ra3o;
      goto V4stmFname2643_26;
    }
  }
  // NormalBlock
  V4stmFname2643_30: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:65:10--65:35",
               V4stmFname2643_30_ra0o, r0);
    V4stmFname2643_30_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_32: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:65:10--65:26",
               V4stmFname2643_32_ra0o, r0);
    V4stmFname2643_32_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_33: {
    User::Value r0 = V4stmFname2643_33_ra0o.getValue();
    V4stmFname2643_33_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::dict:
        V4stmFname2643_29_ra3o = V4stmFname2643_33_ra3o;
        V4stmFname2643_29_ra0o = r0;
        V4stmFname2643_29_ra1o = V4stmFname2643_33_ra1o;
        V4stmFname2643_29_ra2o = V4stmFname2643_33_ra2o;
        goto V4stmFname2643_29;
      default:
        V4stmFname2643_33_ra1o.free();
        V4stmFname2643_33_ra2o.free();
        r0.free();
        V4stmFname2643_30_ra0o = V4stmFname2643_33_ra3o;
        goto V4stmFname2643_30;
    }
  }
  // NormalBlock
  V4stmFname2643_35: {
    DDL::Array<DDL::UInt<8>> r0 = V4stmFname2643_35_ra0o.get_name();
    V4stmFname2643_35_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(67UL),
                                                           DDL::UInt<8>(70UL)};
    DDL::Maybe<User::Value> r2 = V4stmFname2643_35_ra1o.lookup(r1);
    V4stmFname2643_35_ra1o.free();
    r1.free();
    if (r2.isJust()) {
      V4stmFname2643_33_ra3o = V4stmFname2643_35_ra3o;
      V4stmFname2643_33_ra0o = r2;
      V4stmFname2643_33_ra1o = V4stmFname2643_35_ra2o;
      V4stmFname2643_33_ra2o = r0;
      goto V4stmFname2643_33;
    } else {
      V4stmFname2643_35_ra2o.free();
      r0.free();
      r2.free();
      V4stmFname2643_32_ra0o = V4stmFname2643_35_ra3o;
      goto V4stmFname2643_32;
    }
  }
  // NormalBlock
  V4stmFname2643_36: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:64:12--64:39",
               V4stmFname2643_36_ra0o, r0);
    V4stmFname2643_36_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_38: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:64:12--64:30",
               V4stmFname2643_38_ra0o, r0);
    V4stmFname2643_38_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_39: {
    User::Value r0 = V4stmFname2643_39_ra0o.getValue();
    V4stmFname2643_39_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::name:
        V4stmFname2643_35_ra3o = V4stmFname2643_39_ra3o;
        V4stmFname2643_35_ra0o = r0;
        V4stmFname2643_35_ra1o = V4stmFname2643_39_ra1o;
        V4stmFname2643_35_ra2o = V4stmFname2643_39_ra2o;
        goto V4stmFname2643_35;
      default:
        V4stmFname2643_39_ra1o.free();
        V4stmFname2643_39_ra2o.free();
        r0.free();
        V4stmFname2643_36_ra0o = V4stmFname2643_39_ra3o;
        goto V4stmFname2643_36;
    }
  }
  // NormalBlock
  V4stmFname2643_41: {
    DDL::Array<DDL::UInt<8>> r0 = V4stmFname2643_41_ra0o.get_name();
    V4stmFname2643_41_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(83UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(70UL)};
    DDL::Maybe<User::Value> r2 = V4stmFname2643_41_ra1o.lookup(r1);
    r1.free();
    if (r2.isJust()) {
      V4stmFname2643_39_ra3o = V4stmFname2643_41_ra2o;
      V4stmFname2643_39_ra0o = r2;
      V4stmFname2643_39_ra1o = V4stmFname2643_41_ra1o;
      V4stmFname2643_39_ra2o = r0;
      goto V4stmFname2643_39;
    } else {
      V4stmFname2643_41_ra1o.free();
      r0.free();
      r2.free();
      V4stmFname2643_38_ra0o = V4stmFname2643_41_ra2o;
      goto V4stmFname2643_38;
    }
  }
  // NormalBlock
  V4stmFname2643_42: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:63:12--63:39",
               V4stmFname2643_42_ra0o, r0);
    V4stmFname2643_42_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_44: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:63:12--63:30",
               V4stmFname2643_44_ra0o, r0);
    V4stmFname2643_44_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  V4stmFname2643_45: {
    User::Value r0 = V4stmFname2643_45_ra0o.getValue();
    V4stmFname2643_45_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::name:
        V4stmFname2643_41_ra2o = V4stmFname2643_45_ra2o;
        V4stmFname2643_41_ra0o = r0;
        V4stmFname2643_41_ra1o = V4stmFname2643_45_ra1o;
        goto V4stmFname2643_41;
      default:
        V4stmFname2643_45_ra1o.free();
        r0.free();
        V4stmFname2643_42_ra0o = V4stmFname2643_45_ra2o;
        goto V4stmFname2643_42;
    }
  }
  // NormalBlock
  V4stmFname2643_46: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(83UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(70UL)};
    DDL::Maybe<User::Value> r1 = V4stmFname2643_46_ra1o.lookup(r0);
    r0.free();
    if (r1.isJust()) {
      V4stmFname2643_45_ra2o = V4stmFname2643_46_ra0o;
      V4stmFname2643_45_ra0o = r1;
      V4stmFname2643_45_ra1o = V4stmFname2643_46_ra1o;
      goto V4stmFname2643_45;
    } else {
      V4stmFname2643_46_ra1o.free();
      r1.free();
      V4stmFname2643_44_ra0o = V4stmFname2643_46_ra0o;
      goto V4stmFname2643_44;
    }
  }
}
bool parser_ChooseCiph_2644(DDL::ParserStateUser<ReferenceTable> &p,
                            User::ChooseCiph* _result, DDL::Input* _result_input,
                            DDL::Input a1, DDL::Map<DDL::Array<DDL::UInt<8>>, User::Value> a2,
                            DDL::Integer a3) {
  
// Parameters for L_1_ChooseCiph2644
  DDL::Input ChooseCiph2644_1_ra0o;
  
// Parameters for L_2_ChooseCiph2644
  DDL::Input ChooseCiph2644_2_ra0o;
  
// Parameters for L_4_ChooseCiph2644
  DDL::Array<DDL::UInt<8>> ChooseCiph2644_4_ra0o;
  DDL::Input ChooseCiph2644_4_ra1o;
  
// Parameters for L_6_ChooseCiph2644
  DDL::Input ChooseCiph2644_6_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_6_ra0o;
  
// Parameters for L_7_ChooseCiph2644
  DDL::Input ChooseCiph2644_7_ra0o;
  
// Parameters for L_8_ChooseCiph2644
  DDL::Input ChooseCiph2644_8_ra0o;
  DDL::Integer ChooseCiph2644_8_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_8_ra2o;
  
// Parameters for L_9_ChooseCiph2644
  DDL::Input ChooseCiph2644_9_ra0o;
  DDL::Integer ChooseCiph2644_9_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_9_ra2o;
  
// Parameters for L_13_ChooseCiph2644
  DDL::Input ChooseCiph2644_13_ra0o;
  
// Parameters for L_14_ChooseCiph2644
  DDL::Input ChooseCiph2644_14_ra0o;
  DDL::Input ChooseCiph2644_14_ra1o;
  DDL::Integer ChooseCiph2644_14_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_14_ra3o;
  
// Parameters for L_15_ChooseCiph2644
  DDL::Input ChooseCiph2644_15_ra0o;
  DDL::Integer ChooseCiph2644_15_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_15_ra2o;
  
// Parameters for L_16_ChooseCiph2644
  DDL::Array<DDL::UInt<8>> ChooseCiph2644_16_ra0o;
  DDL::Input ChooseCiph2644_16_ra1o;
  DDL::Input ChooseCiph2644_16_ra2o;
  DDL::Integer ChooseCiph2644_16_ra3o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_16_ra4o;
  
// Parameters for L_19_ChooseCiph2644
  DDL::Input ChooseCiph2644_19_ra3o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_19_ra0o;
  DDL::Input ChooseCiph2644_19_ra1o;
  DDL::Integer ChooseCiph2644_19_ra2o;
  
// Parameters for L_20_ChooseCiph2644
  DDL::Input ChooseCiph2644_20_ra0o;
  DDL::Input ChooseCiph2644_20_ra1o;
  DDL::Integer ChooseCiph2644_20_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_20_ra3o;
  
// Parameters for L_21_ChooseCiph2644
  DDL::Input ChooseCiph2644_21_ra0o;
  DDL::Integer ChooseCiph2644_21_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_21_ra2o;
  
// Parameters for L_22_ChooseCiph2644
  DDL::Input ChooseCiph2644_22_ra0o;
  DDL::Integer ChooseCiph2644_22_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_22_ra2o;
  
// Parameters for L_26_ChooseCiph2644
  DDL::Input ChooseCiph2644_26_ra0o;
  
// Parameters for L_27_ChooseCiph2644
  DDL::Input ChooseCiph2644_27_ra0o;
  DDL::Input ChooseCiph2644_27_ra1o;
  DDL::Integer ChooseCiph2644_27_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_27_ra3o;
  
// Parameters for L_28_ChooseCiph2644
  DDL::Input ChooseCiph2644_28_ra0o;
  DDL::Integer ChooseCiph2644_28_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_28_ra2o;
  
// Parameters for L_29_ChooseCiph2644
  DDL::Array<DDL::UInt<8>> ChooseCiph2644_29_ra0o;
  DDL::Input ChooseCiph2644_29_ra1o;
  DDL::Input ChooseCiph2644_29_ra2o;
  DDL::Integer ChooseCiph2644_29_ra3o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_29_ra4o;
  
// Parameters for L_32_ChooseCiph2644
  DDL::Input ChooseCiph2644_32_ra3o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_32_ra0o;
  DDL::Input ChooseCiph2644_32_ra1o;
  DDL::Integer ChooseCiph2644_32_ra2o;
  
// Parameters for L_33_ChooseCiph2644
  DDL::Input ChooseCiph2644_33_ra0o;
  DDL::Input ChooseCiph2644_33_ra1o;
  DDL::Integer ChooseCiph2644_33_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_33_ra3o;
  
// Parameters for L_34_ChooseCiph2644
  DDL::Input ChooseCiph2644_34_ra0o;
  DDL::Integer ChooseCiph2644_34_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_34_ra2o;
  
// Parameters for L_35_ChooseCiph2644
  DDL::Input ChooseCiph2644_35_ra0o;
  DDL::Integer ChooseCiph2644_35_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_35_ra2o;
  
// Parameters for L_39_ChooseCiph2644
  DDL::Input ChooseCiph2644_39_ra0o;
  
// Parameters for L_40_ChooseCiph2644
  DDL::Input ChooseCiph2644_40_ra0o;
  DDL::Input ChooseCiph2644_40_ra1o;
  DDL::Integer ChooseCiph2644_40_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_40_ra3o;
  
// Parameters for L_41_ChooseCiph2644
  DDL::Input ChooseCiph2644_41_ra0o;
  DDL::Integer ChooseCiph2644_41_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_41_ra2o;
  
// Parameters for L_42_ChooseCiph2644
  DDL::Integer ChooseCiph2644_42_ra0o;
  DDL::Input ChooseCiph2644_42_ra1o;
  DDL::Input ChooseCiph2644_42_ra2o;
  DDL::Integer ChooseCiph2644_42_ra3o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_42_ra4o;
  
// Parameters for L_45_ChooseCiph2644
  DDL::Input ChooseCiph2644_45_ra3o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_45_ra0o;
  DDL::Input ChooseCiph2644_45_ra1o;
  DDL::Integer ChooseCiph2644_45_ra2o;
  
// Parameters for L_46_ChooseCiph2644
  DDL::Input ChooseCiph2644_46_ra0o;
  DDL::Input ChooseCiph2644_46_ra1o;
  DDL::Integer ChooseCiph2644_46_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_46_ra3o;
  
// Parameters for L_47_ChooseCiph2644
  DDL::Input ChooseCiph2644_47_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> ChooseCiph2644_47_ra1o;
  DDL::Integer ChooseCiph2644_47_ra2o;
  ChooseCiph2644_47_ra0o = a1;
  ChooseCiph2644_47_ra1o = a2;
  ChooseCiph2644_47_ra2o = a3;
  goto ChooseCiph2644_47;
  // NormalBlock
  ChooseCiph2644_1: {
    User::ChooseCiph r0;
    r0.init_v5AES();
    p.popDebug();
    *_result = r0;
    *_result_input = ChooseCiph2644_1_ra0o;
    return true;
  }
  // NormalBlock
  ChooseCiph2644_2: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:58:5--58:31",
               ChooseCiph2644_2_ra0o, r0);
    ChooseCiph2644_2_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  ChooseCiph2644_3: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  ChooseCiph2644_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(65UL),
                                                           DDL::UInt<8>(69UL), DDL::UInt<8>(83UL),
                                                           DDL::UInt<8>(86UL), DDL::UInt<8>(51UL)};
    DDL::Bool r1 = DDL::Bool{ChooseCiph2644_4_ra0o == r0};
    ChooseCiph2644_4_ra0o.free();
    r0.free();
    if (r1.getValue()) {
      ChooseCiph2644_1_ra0o = ChooseCiph2644_4_ra1o;
      goto ChooseCiph2644_1;
    } else {
      ChooseCiph2644_2_ra0o = ChooseCiph2644_4_ra1o;
      goto ChooseCiph2644_2;
    }
  }
  // NormalBlock
  ChooseCiph2644_6: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:57:17--57:32:V4stmFname",
                false);
    if (parser_V4stmFname(p, &ChooseCiph2644_4_ra0o,
                          &ChooseCiph2644_4_ra1o, ChooseCiph2644_6_ra1o,
                          ChooseCiph2644_6_ra0o)) {
      goto ChooseCiph2644_4;
    } else {
      goto ChooseCiph2644_3;
    }
  }
  // NormalBlock
  ChooseCiph2644_7: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:56:5--56:18",
               ChooseCiph2644_7_ra0o, r0);
    ChooseCiph2644_7_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  ChooseCiph2644_8: {
    DDL::Integer r0 = DDL::Integer("5");
    DDL::Bool r1 = DDL::Bool{ChooseCiph2644_8_ra1o == r0};
    ChooseCiph2644_8_ra1o.free();
    r0.free();
    if (r1.getValue()) {
      ChooseCiph2644_6_ra1o = ChooseCiph2644_8_ra0o;
      ChooseCiph2644_6_ra0o = ChooseCiph2644_8_ra2o;
      goto ChooseCiph2644_6;
    } else {
      ChooseCiph2644_8_ra2o.free();
      ChooseCiph2644_7_ra0o = ChooseCiph2644_8_ra0o;
      goto ChooseCiph2644_7;
    }
  }
  // NormalBlock
  ChooseCiph2644_9: {
    ChooseCiph2644_8_ra0o = ChooseCiph2644_9_ra0o;
    ChooseCiph2644_8_ra1o = ChooseCiph2644_9_ra1o;
    ChooseCiph2644_8_ra2o = ChooseCiph2644_9_ra2o;
    goto ChooseCiph2644_8;
  }
  // NormalBlock
  ChooseCiph2644_13: {
    User::ChooseCiph r0;
    r0.init_v4AES();
    p.popDebug();
    *_result = r0;
    *_result_input = ChooseCiph2644_13_ra0o;
    return true;
  }
  // NormalBlock
  ChooseCiph2644_14: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:52:5--52:31",
               ChooseCiph2644_14_ra0o, r0);
    ChooseCiph2644_14_ra0o.free();
    r0.free();
    ChooseCiph2644_9_ra0o = ChooseCiph2644_14_ra1o;
    ChooseCiph2644_9_ra1o = ChooseCiph2644_14_ra2o;
    ChooseCiph2644_9_ra2o = ChooseCiph2644_14_ra3o;
    goto ChooseCiph2644_9;
  }
  // ReturnBlock (RetNo NoCapture)
  ChooseCiph2644_15: {
    ChooseCiph2644_9_ra0o = ChooseCiph2644_15_ra0o;
    ChooseCiph2644_9_ra1o = ChooseCiph2644_15_ra1o;
    ChooseCiph2644_9_ra2o = ChooseCiph2644_15_ra2o;
    goto ChooseCiph2644_9;
  }
  // ReturnBlock (RetYes NoCapture)
  ChooseCiph2644_16: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(65UL),
                                                           DDL::UInt<8>(69UL), DDL::UInt<8>(83UL),
                                                           DDL::UInt<8>(86UL), DDL::UInt<8>(50UL)};
    DDL::Bool r1 = DDL::Bool{ChooseCiph2644_16_ra0o == r0};
    ChooseCiph2644_16_ra0o.free();
    r0.free();
    if (r1.getValue()) {
      ChooseCiph2644_16_ra2o.free();
      ChooseCiph2644_16_ra3o.free();
      ChooseCiph2644_16_ra4o.free();
      ChooseCiph2644_13_ra0o = ChooseCiph2644_16_ra1o;
      goto ChooseCiph2644_13;
    } else {
      ChooseCiph2644_14_ra0o = ChooseCiph2644_16_ra1o;
      ChooseCiph2644_14_ra1o = ChooseCiph2644_16_ra2o;
      ChooseCiph2644_14_ra2o = ChooseCiph2644_16_ra3o;
      ChooseCiph2644_14_ra3o = ChooseCiph2644_16_ra4o;
      goto ChooseCiph2644_14;
    }
  }
  // NormalBlock
  ChooseCiph2644_19: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:51:17--51:32:V4stmFname",
                false);
    ChooseCiph2644_19_ra0o.copy();
    ChooseCiph2644_19_ra1o.copy();
    ChooseCiph2644_19_ra2o.copy();
    ChooseCiph2644_19_ra0o.copy();
    if (parser_V4stmFname(p, &ChooseCiph2644_16_ra0o,
                          &ChooseCiph2644_16_ra1o, ChooseCiph2644_19_ra3o,
                          ChooseCiph2644_19_ra0o)) {
      ChooseCiph2644_19_ra1o.free();
      ChooseCiph2644_19_ra2o.free();
      ChooseCiph2644_19_ra0o.free();
      ChooseCiph2644_16_ra2o = ChooseCiph2644_19_ra1o;
      ChooseCiph2644_16_ra3o = ChooseCiph2644_19_ra2o;
      ChooseCiph2644_16_ra4o = ChooseCiph2644_19_ra0o;
      goto ChooseCiph2644_16;
    } else {
      ChooseCiph2644_19_ra1o.free();
      ChooseCiph2644_19_ra2o.free();
      ChooseCiph2644_19_ra0o.free();
      ChooseCiph2644_15_ra0o = ChooseCiph2644_19_ra1o;
      ChooseCiph2644_15_ra1o = ChooseCiph2644_19_ra2o;
      ChooseCiph2644_15_ra2o = ChooseCiph2644_19_ra0o;
      goto ChooseCiph2644_15;
    }
  }
  // NormalBlock
  ChooseCiph2644_20: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:50:5--50:18",
               ChooseCiph2644_20_ra0o, r0);
    ChooseCiph2644_20_ra0o.free();
    r0.free();
    ChooseCiph2644_8_ra0o = ChooseCiph2644_20_ra1o;
    ChooseCiph2644_8_ra1o = ChooseCiph2644_20_ra2o;
    ChooseCiph2644_8_ra2o = ChooseCiph2644_20_ra3o;
    goto ChooseCiph2644_8;
  }
  // NormalBlock
  ChooseCiph2644_21: {
    DDL::Integer r0 = DDL::Integer("4");
    DDL::Bool r1 = DDL::Bool{ChooseCiph2644_21_ra1o == r0};
    r0.free();
    ChooseCiph2644_21_ra0o.copy();
    ChooseCiph2644_21_ra0o.copy();
    if (r1.getValue()) {
      ChooseCiph2644_21_ra0o.free();
      ChooseCiph2644_19_ra3o = ChooseCiph2644_21_ra0o;
      ChooseCiph2644_19_ra0o = ChooseCiph2644_21_ra2o;
      ChooseCiph2644_19_ra1o = ChooseCiph2644_21_ra0o;
      ChooseCiph2644_19_ra2o = ChooseCiph2644_21_ra1o;
      goto ChooseCiph2644_19;
    } else {
      ChooseCiph2644_21_ra0o.free();
      ChooseCiph2644_20_ra0o = ChooseCiph2644_21_ra0o;
      ChooseCiph2644_20_ra1o = ChooseCiph2644_21_ra0o;
      ChooseCiph2644_20_ra2o = ChooseCiph2644_21_ra1o;
      ChooseCiph2644_20_ra3o = ChooseCiph2644_21_ra2o;
      goto ChooseCiph2644_20;
    }
  }
  // NormalBlock
  ChooseCiph2644_22: {
    ChooseCiph2644_21_ra0o = ChooseCiph2644_22_ra0o;
    ChooseCiph2644_21_ra1o = ChooseCiph2644_22_ra1o;
    ChooseCiph2644_21_ra2o = ChooseCiph2644_22_ra2o;
    goto ChooseCiph2644_21;
  }
  // NormalBlock
  ChooseCiph2644_26: {
    User::ChooseCiph r0;
    r0.init_v4RC4();
    p.popDebug();
    *_result = r0;
    *_result_input = ChooseCiph2644_26_ra0o;
    return true;
  }
  // NormalBlock
  ChooseCiph2644_27: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:46:5--46:28",
               ChooseCiph2644_27_ra0o, r0);
    ChooseCiph2644_27_ra0o.free();
    r0.free();
    ChooseCiph2644_22_ra0o = ChooseCiph2644_27_ra1o;
    ChooseCiph2644_22_ra1o = ChooseCiph2644_27_ra2o;
    ChooseCiph2644_22_ra2o = ChooseCiph2644_27_ra3o;
    goto ChooseCiph2644_22;
  }
  // ReturnBlock (RetNo NoCapture)
  ChooseCiph2644_28: {
    ChooseCiph2644_22_ra0o = ChooseCiph2644_28_ra0o;
    ChooseCiph2644_22_ra1o = ChooseCiph2644_28_ra1o;
    ChooseCiph2644_22_ra2o = ChooseCiph2644_28_ra2o;
    goto ChooseCiph2644_22;
  }
  // ReturnBlock (RetYes NoCapture)
  ChooseCiph2644_29: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(86UL),
                                                           DDL::UInt<8>(50UL)};
    DDL::Bool r1 = DDL::Bool{ChooseCiph2644_29_ra0o == r0};
    ChooseCiph2644_29_ra0o.free();
    r0.free();
    if (r1.getValue()) {
      ChooseCiph2644_29_ra2o.free();
      ChooseCiph2644_29_ra3o.free();
      ChooseCiph2644_29_ra4o.free();
      ChooseCiph2644_26_ra0o = ChooseCiph2644_29_ra1o;
      goto ChooseCiph2644_26;
    } else {
      ChooseCiph2644_27_ra0o = ChooseCiph2644_29_ra1o;
      ChooseCiph2644_27_ra1o = ChooseCiph2644_29_ra2o;
      ChooseCiph2644_27_ra2o = ChooseCiph2644_29_ra3o;
      ChooseCiph2644_27_ra3o = ChooseCiph2644_29_ra4o;
      goto ChooseCiph2644_27;
    }
  }
  // NormalBlock
  ChooseCiph2644_32: {
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:45:17--45:32:V4stmFname",
                false);
    ChooseCiph2644_32_ra0o.copy();
    ChooseCiph2644_32_ra1o.copy();
    ChooseCiph2644_32_ra2o.copy();
    ChooseCiph2644_32_ra0o.copy();
    if (parser_V4stmFname(p, &ChooseCiph2644_29_ra0o,
                          &ChooseCiph2644_29_ra1o, ChooseCiph2644_32_ra3o,
                          ChooseCiph2644_32_ra0o)) {
      ChooseCiph2644_32_ra1o.free();
      ChooseCiph2644_32_ra2o.free();
      ChooseCiph2644_32_ra0o.free();
      ChooseCiph2644_29_ra2o = ChooseCiph2644_32_ra1o;
      ChooseCiph2644_29_ra3o = ChooseCiph2644_32_ra2o;
      ChooseCiph2644_29_ra4o = ChooseCiph2644_32_ra0o;
      goto ChooseCiph2644_29;
    } else {
      ChooseCiph2644_32_ra1o.free();
      ChooseCiph2644_32_ra2o.free();
      ChooseCiph2644_32_ra0o.free();
      ChooseCiph2644_28_ra0o = ChooseCiph2644_32_ra1o;
      ChooseCiph2644_28_ra1o = ChooseCiph2644_32_ra2o;
      ChooseCiph2644_28_ra2o = ChooseCiph2644_32_ra0o;
      goto ChooseCiph2644_28;
    }
  }
  // NormalBlock
  ChooseCiph2644_33: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:44:5--44:18",
               ChooseCiph2644_33_ra0o, r0);
    ChooseCiph2644_33_ra0o.free();
    r0.free();
    ChooseCiph2644_21_ra0o = ChooseCiph2644_33_ra1o;
    ChooseCiph2644_21_ra1o = ChooseCiph2644_33_ra2o;
    ChooseCiph2644_21_ra2o = ChooseCiph2644_33_ra3o;
    goto ChooseCiph2644_21;
  }
  // NormalBlock
  ChooseCiph2644_34: {
    DDL::Integer r0 = DDL::Integer("4");
    DDL::Bool r1 = DDL::Bool{ChooseCiph2644_34_ra1o == r0};
    r0.free();
    ChooseCiph2644_34_ra0o.copy();
    ChooseCiph2644_34_ra0o.copy();
    if (r1.getValue()) {
      ChooseCiph2644_34_ra0o.free();
      ChooseCiph2644_32_ra3o = ChooseCiph2644_34_ra0o;
      ChooseCiph2644_32_ra0o = ChooseCiph2644_34_ra2o;
      ChooseCiph2644_32_ra1o = ChooseCiph2644_34_ra0o;
      ChooseCiph2644_32_ra2o = ChooseCiph2644_34_ra1o;
      goto ChooseCiph2644_32;
    } else {
      ChooseCiph2644_34_ra0o.free();
      ChooseCiph2644_33_ra0o = ChooseCiph2644_34_ra0o;
      ChooseCiph2644_33_ra1o = ChooseCiph2644_34_ra0o;
      ChooseCiph2644_33_ra2o = ChooseCiph2644_34_ra1o;
      ChooseCiph2644_33_ra3o = ChooseCiph2644_34_ra2o;
      goto ChooseCiph2644_33;
    }
  }
  // NormalBlock
  ChooseCiph2644_35: {
    ChooseCiph2644_34_ra0o = ChooseCiph2644_35_ra0o;
    ChooseCiph2644_34_ra1o = ChooseCiph2644_35_ra1o;
    ChooseCiph2644_34_ra2o = ChooseCiph2644_35_ra2o;
    goto ChooseCiph2644_34;
  }
  // NormalBlock
  ChooseCiph2644_39: {
    User::ChooseCiph r0;
    r0.init_v2RC4();
    p.popDebug();
    *_result = r0;
    *_result_input = ChooseCiph2644_39_ra0o;
    return true;
  }
  // NormalBlock
  ChooseCiph2644_40: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:40:5--40:22",
               ChooseCiph2644_40_ra0o, r0);
    ChooseCiph2644_40_ra0o.free();
    r0.free();
    ChooseCiph2644_35_ra0o = ChooseCiph2644_40_ra1o;
    ChooseCiph2644_35_ra1o = ChooseCiph2644_40_ra2o;
    ChooseCiph2644_35_ra2o = ChooseCiph2644_40_ra3o;
    goto ChooseCiph2644_35;
  }
  // ReturnBlock (RetNo NoCapture)
  ChooseCiph2644_41: {
    ChooseCiph2644_35_ra0o = ChooseCiph2644_41_ra0o;
    ChooseCiph2644_35_ra1o = ChooseCiph2644_41_ra1o;
    ChooseCiph2644_35_ra2o = ChooseCiph2644_41_ra2o;
    goto ChooseCiph2644_35;
  }
  // ReturnBlock (RetYes NoCapture)
  ChooseCiph2644_42: {
    DDL::Integer r0 = DDL::Integer("128");
    DDL::Bool r1 = DDL::Bool{ChooseCiph2644_42_ra0o == r0};
    ChooseCiph2644_42_ra0o.free();
    r0.free();
    if (r1.getValue()) {
      ChooseCiph2644_42_ra2o.free();
      ChooseCiph2644_42_ra3o.free();
      ChooseCiph2644_42_ra4o.free();
      ChooseCiph2644_39_ra0o = ChooseCiph2644_42_ra1o;
      goto ChooseCiph2644_39;
    } else {
      ChooseCiph2644_40_ra0o = ChooseCiph2644_42_ra1o;
      ChooseCiph2644_40_ra1o = ChooseCiph2644_42_ra2o;
      ChooseCiph2644_40_ra2o = ChooseCiph2644_42_ra3o;
      ChooseCiph2644_40_ra3o = ChooseCiph2644_42_ra4o;
      goto ChooseCiph2644_40;
    }
  }
  // NormalBlock
  ChooseCiph2644_45: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(76UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(103UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:39:12--39:35:LookupNat",
                false);
    ChooseCiph2644_45_ra0o.copy();
    ChooseCiph2644_45_ra1o.copy();
    ChooseCiph2644_45_ra2o.copy();
    ChooseCiph2644_45_ra0o.copy();
    if (parser_LookupNat(p, &ChooseCiph2644_42_ra0o,
                         &ChooseCiph2644_42_ra1o, ChooseCiph2644_45_ra3o, r0,
                         ChooseCiph2644_45_ra0o)) {
      ChooseCiph2644_45_ra1o.free();
      ChooseCiph2644_45_ra2o.free();
      ChooseCiph2644_45_ra0o.free();
      ChooseCiph2644_42_ra2o = ChooseCiph2644_45_ra1o;
      ChooseCiph2644_42_ra3o = ChooseCiph2644_45_ra2o;
      ChooseCiph2644_42_ra4o = ChooseCiph2644_45_ra0o;
      goto ChooseCiph2644_42;
    } else {
      ChooseCiph2644_45_ra1o.free();
      ChooseCiph2644_45_ra2o.free();
      ChooseCiph2644_45_ra0o.free();
      ChooseCiph2644_41_ra0o = ChooseCiph2644_45_ra1o;
      ChooseCiph2644_41_ra1o = ChooseCiph2644_45_ra2o;
      ChooseCiph2644_41_ra2o = ChooseCiph2644_45_ra0o;
      goto ChooseCiph2644_41;
    }
  }
  // NormalBlock
  ChooseCiph2644_46: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:38:5--38:18",
               ChooseCiph2644_46_ra0o, r0);
    ChooseCiph2644_46_ra0o.free();
    r0.free();
    ChooseCiph2644_34_ra0o = ChooseCiph2644_46_ra1o;
    ChooseCiph2644_34_ra1o = ChooseCiph2644_46_ra2o;
    ChooseCiph2644_34_ra2o = ChooseCiph2644_46_ra3o;
    goto ChooseCiph2644_34;
  }
  // NormalBlock
  ChooseCiph2644_47: {
    DDL::Integer r0 = DDL::Integer("2");
    DDL::Bool r1 = DDL::Bool{ChooseCiph2644_47_ra2o == r0};
    r0.free();
    ChooseCiph2644_47_ra0o.copy();
    ChooseCiph2644_47_ra0o.copy();
    if (r1.getValue()) {
      ChooseCiph2644_47_ra0o.free();
      ChooseCiph2644_45_ra3o = ChooseCiph2644_47_ra0o;
      ChooseCiph2644_45_ra0o = ChooseCiph2644_47_ra1o;
      ChooseCiph2644_45_ra1o = ChooseCiph2644_47_ra0o;
      ChooseCiph2644_45_ra2o = ChooseCiph2644_47_ra2o;
      goto ChooseCiph2644_45;
    } else {
      ChooseCiph2644_47_ra0o.free();
      ChooseCiph2644_46_ra0o = ChooseCiph2644_47_ra0o;
      ChooseCiph2644_46_ra1o = ChooseCiph2644_47_ra0o;
      ChooseCiph2644_46_ra2o = ChooseCiph2644_47_ra2o;
      ChooseCiph2644_46_ra3o = ChooseCiph2644_47_ra1o;
      goto ChooseCiph2644_46;
    }
  }
}
bool parser_EncryptionDict(DDL::ParserStateUser<ReferenceTable> &p,
                           User::EncryptionDict* _result, DDL::Input* _result_input,
                           DDL::Input a1, User::TrailerDictEncrypt a2) {
  
// Parameters for L_1_EncryptionDict2645
  User::ChooseCiph EncryptionDict2645_1_ra0o;
  DDL::Input EncryptionDict2645_1_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_1_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_1_ra3o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_1_ra4o;
  DDL::Integer EncryptionDict2645_1_ra5o;
  DDL::Integer EncryptionDict2645_1_ra6o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_1_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_1_ra8o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_1_ra9o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_1_ra10o;
  DDL::Integer EncryptionDict2645_1_ra11o;
  
// Parameters for L_3_EncryptionDict2645
  DDL::Input EncryptionDict2645_3_ra11o;
  User::Value EncryptionDict2645_3_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_3_ra1o;
  DDL::Integer EncryptionDict2645_3_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_3_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_3_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_3_ra5o;
  DDL::Integer EncryptionDict2645_3_ra6o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_3_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_3_ra8o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_3_ra9o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_3_ra10o;
  
// Parameters for L_4_EncryptionDict2645
  DDL::Input EncryptionDict2645_4_ra0o;
  
// Parameters for L_6_EncryptionDict2645
  DDL::Input EncryptionDict2645_6_ra0o;
  
// Parameters for L_7_EncryptionDict2645
  DDL::Input EncryptionDict2645_7_ra11o;
  DDL::Maybe<User::Value> EncryptionDict2645_7_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_7_ra1o;
  DDL::Integer EncryptionDict2645_7_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_7_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_7_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_7_ra5o;
  DDL::Integer EncryptionDict2645_7_ra6o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_7_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_7_ra8o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_7_ra9o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_7_ra10o;
  
// Parameters for L_8_EncryptionDict2645
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_8_ra0o;
  DDL::Input EncryptionDict2645_8_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_8_ra1o;
  DDL::Integer EncryptionDict2645_8_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_8_ra4o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_8_ra5o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_8_ra6o;
  DDL::Integer EncryptionDict2645_8_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_8_ra8o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_8_ra9o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_8_ra10o;
  
// Parameters for L_9_EncryptionDict2645
  DDL::Input EncryptionDict2645_9_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_9_ra1o;
  DDL::Integer EncryptionDict2645_9_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_9_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_9_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_9_ra5o;
  DDL::Integer EncryptionDict2645_9_ra6o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_9_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_9_ra8o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_9_ra9o;
  
// Parameters for L_13_EncryptionDict2645
  DDL::Input EncryptionDict2645_13_ra10o;
  User::Value EncryptionDict2645_13_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_13_ra1o;
  DDL::Integer EncryptionDict2645_13_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_13_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_13_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_13_ra5o;
  DDL::Integer EncryptionDict2645_13_ra6o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_13_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_13_ra8o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_13_ra9o;
  
// Parameters for L_14_EncryptionDict2645
  DDL::Input EncryptionDict2645_14_ra0o;
  DDL::Input EncryptionDict2645_14_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_14_ra2o;
  DDL::Integer EncryptionDict2645_14_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_14_ra4o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_14_ra5o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_14_ra6o;
  DDL::Integer EncryptionDict2645_14_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_14_ra8o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_14_ra9o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_14_ra10o;
  
// Parameters for L_17_EncryptionDict2645
  DDL::Input EncryptionDict2645_17_ra0o;
  DDL::Input EncryptionDict2645_17_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_17_ra2o;
  DDL::Integer EncryptionDict2645_17_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_17_ra4o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_17_ra5o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_17_ra6o;
  DDL::Integer EncryptionDict2645_17_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_17_ra8o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_17_ra9o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_17_ra10o;
  
// Parameters for L_18_EncryptionDict2645
  DDL::Input EncryptionDict2645_18_ra11o;
  DDL::Maybe<User::Value> EncryptionDict2645_18_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_18_ra1o;
  DDL::Integer EncryptionDict2645_18_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_18_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_18_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_18_ra5o;
  DDL::Integer EncryptionDict2645_18_ra6o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_18_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_18_ra8o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_18_ra9o;
  DDL::Input EncryptionDict2645_18_ra10o;
  
// Parameters for L_19_EncryptionDict2645
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_19_ra0o;
  DDL::Input EncryptionDict2645_19_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_19_ra2o;
  DDL::Integer EncryptionDict2645_19_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_19_ra4o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_19_ra5o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_19_ra6o;
  DDL::Integer EncryptionDict2645_19_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_19_ra8o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_19_ra9o;
  
// Parameters for L_20_EncryptionDict2645
  DDL::Input EncryptionDict2645_20_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_20_ra1o;
  DDL::Integer EncryptionDict2645_20_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_20_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_20_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_20_ra5o;
  DDL::Integer EncryptionDict2645_20_ra6o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_20_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_20_ra8o;
  
// Parameters for L_24_EncryptionDict2645
  DDL::Input EncryptionDict2645_24_ra9o;
  User::Value EncryptionDict2645_24_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_24_ra1o;
  DDL::Integer EncryptionDict2645_24_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_24_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_24_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_24_ra5o;
  DDL::Integer EncryptionDict2645_24_ra6o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_24_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_24_ra8o;
  
// Parameters for L_25_EncryptionDict2645
  DDL::Input EncryptionDict2645_25_ra0o;
  DDL::Input EncryptionDict2645_25_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_25_ra2o;
  DDL::Integer EncryptionDict2645_25_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_25_ra4o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_25_ra5o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_25_ra6o;
  DDL::Integer EncryptionDict2645_25_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_25_ra8o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_25_ra9o;
  
// Parameters for L_28_EncryptionDict2645
  DDL::Input EncryptionDict2645_28_ra0o;
  DDL::Input EncryptionDict2645_28_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_28_ra2o;
  DDL::Integer EncryptionDict2645_28_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_28_ra4o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_28_ra5o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_28_ra6o;
  DDL::Integer EncryptionDict2645_28_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_28_ra8o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_28_ra9o;
  
// Parameters for L_29_EncryptionDict2645
  DDL::Input EncryptionDict2645_29_ra10o;
  DDL::Maybe<User::Value> EncryptionDict2645_29_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_29_ra1o;
  DDL::Integer EncryptionDict2645_29_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_29_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_29_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_29_ra5o;
  DDL::Integer EncryptionDict2645_29_ra6o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_29_ra7o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_29_ra8o;
  DDL::Input EncryptionDict2645_29_ra9o;
  
// Parameters for L_31_EncryptionDict2645
  DDL::Input EncryptionDict2645_31_ra8o;
  User::Value EncryptionDict2645_31_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_31_ra1o;
  DDL::Integer EncryptionDict2645_31_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_31_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_31_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_31_ra5o;
  DDL::Integer EncryptionDict2645_31_ra6o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_31_ra7o;
  
// Parameters for L_32_EncryptionDict2645
  DDL::Input EncryptionDict2645_32_ra0o;
  
// Parameters for L_34_EncryptionDict2645
  DDL::Input EncryptionDict2645_34_ra0o;
  
// Parameters for L_35_EncryptionDict2645
  DDL::Input EncryptionDict2645_35_ra8o;
  DDL::Maybe<User::Value> EncryptionDict2645_35_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_35_ra1o;
  DDL::Integer EncryptionDict2645_35_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_35_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_35_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_35_ra5o;
  DDL::Integer EncryptionDict2645_35_ra6o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_35_ra7o;
  
// Parameters for L_37_EncryptionDict2645
  DDL::Input EncryptionDict2645_37_ra7o;
  User::Value EncryptionDict2645_37_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_37_ra1o;
  DDL::Integer EncryptionDict2645_37_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_37_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_37_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_37_ra5o;
  DDL::Integer EncryptionDict2645_37_ra6o;
  
// Parameters for L_38_EncryptionDict2645
  DDL::Input EncryptionDict2645_38_ra0o;
  
// Parameters for L_40_EncryptionDict2645
  DDL::Input EncryptionDict2645_40_ra0o;
  
// Parameters for L_41_EncryptionDict2645
  DDL::Input EncryptionDict2645_41_ra7o;
  DDL::Maybe<User::Value> EncryptionDict2645_41_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_41_ra1o;
  DDL::Integer EncryptionDict2645_41_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_41_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_41_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_41_ra5o;
  DDL::Integer EncryptionDict2645_41_ra6o;
  
// Parameters for L_43_EncryptionDict2645
  DDL::Input EncryptionDict2645_43_ra6o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_43_ra0o;
  DDL::Integer EncryptionDict2645_43_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_43_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_43_ra3o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_43_ra4o;
  DDL::Integer EncryptionDict2645_43_ra5o;
  
// Parameters for L_44_EncryptionDict2645
  DDL::Input EncryptionDict2645_44_ra0o;
  
// Parameters for L_45_EncryptionDict2645
  DDL::Input EncryptionDict2645_45_ra1o;
  DDL::Bool EncryptionDict2645_45_ra0u;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_45_ra2o;
  DDL::Integer EncryptionDict2645_45_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_45_ra4o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_45_ra5o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_45_ra6o;
  DDL::Integer EncryptionDict2645_45_ra7o;
  
// Parameters for L_46_EncryptionDict2645
  DDL::Input EncryptionDict2645_46_ra6o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_46_ra0o;
  DDL::Integer EncryptionDict2645_46_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_46_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_46_ra3o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_46_ra4o;
  DDL::Integer EncryptionDict2645_46_ra5o;
  
// Parameters for L_47_EncryptionDict2645
  DDL::Input EncryptionDict2645_47_ra7o;
  DDL::Bool EncryptionDict2645_47_ra0u;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_47_ra1o;
  DDL::Integer EncryptionDict2645_47_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_47_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_47_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_47_ra5o;
  DDL::Integer EncryptionDict2645_47_ra6o;
  
// Parameters for L_48_EncryptionDict2645
  DDL::Input EncryptionDict2645_48_ra6o;
  DDL::Integer EncryptionDict2645_48_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_48_ra1o;
  DDL::Integer EncryptionDict2645_48_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_48_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_48_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_48_ra5o;
  
// Parameters for L_49_EncryptionDict2645
  DDL::Input EncryptionDict2645_49_ra6o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_49_ra0o;
  DDL::Integer EncryptionDict2645_49_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_49_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_49_ra3o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_49_ra4o;
  DDL::Integer EncryptionDict2645_49_ra5o;
  
// Parameters for L_50_EncryptionDict2645
  DDL::Input EncryptionDict2645_50_ra6o;
  DDL::Integer EncryptionDict2645_50_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_50_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_50_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_50_ra3o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_50_ra4o;
  DDL::Integer EncryptionDict2645_50_ra5o;
  
// Parameters for L_51_EncryptionDict2645
  DDL::Input EncryptionDict2645_51_ra7o;
  DDL::Bool EncryptionDict2645_51_ra0u;
  DDL::Integer EncryptionDict2645_51_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_51_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_51_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_51_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_51_ra5o;
  DDL::Integer EncryptionDict2645_51_ra6o;
  
// Parameters for L_52_EncryptionDict2645
  DDL::Input EncryptionDict2645_52_ra6o;
  DDL::Integer EncryptionDict2645_52_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_52_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_52_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_52_ra3o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_52_ra4o;
  DDL::Integer EncryptionDict2645_52_ra5o;
  
// Parameters for L_53_EncryptionDict2645
  DDL::Input EncryptionDict2645_53_ra7o;
  DDL::Bool EncryptionDict2645_53_ra0u;
  DDL::Integer EncryptionDict2645_53_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_53_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_53_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_53_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_53_ra5o;
  DDL::Integer EncryptionDict2645_53_ra6o;
  
// Parameters for L_54_EncryptionDict2645
  DDL::Input EncryptionDict2645_54_ra6o;
  DDL::Integer EncryptionDict2645_54_ra0o;
  DDL::Integer EncryptionDict2645_54_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_54_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_54_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_54_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_54_ra5o;
  
// Parameters for L_55_EncryptionDict2645
  DDL::Input EncryptionDict2645_55_ra6o;
  DDL::Integer EncryptionDict2645_55_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_55_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_55_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_55_ra3o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_55_ra4o;
  DDL::Integer EncryptionDict2645_55_ra5o;
  
// Parameters for L_56_EncryptionDict2645
  DDL::Input EncryptionDict2645_56_ra6o;
  DDL::Integer EncryptionDict2645_56_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_56_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_56_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_56_ra3o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_56_ra4o;
  DDL::Integer EncryptionDict2645_56_ra5o;
  
// Parameters for L_58_EncryptionDict2645
  DDL::Integer EncryptionDict2645_58_ra0o;
  DDL::Input EncryptionDict2645_58_ra1o;
  DDL::Integer EncryptionDict2645_58_ra2o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_58_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_58_ra4o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_58_ra5o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_58_ra6o;
  
// Parameters for L_60_EncryptionDict2645
  DDL::Integer EncryptionDict2645_60_ra0o;
  DDL::Input EncryptionDict2645_60_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_60_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_60_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_60_ra4o;
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_60_ra5o;
  
// Parameters for L_61_EncryptionDict2645
  DDL::Maybe<DDL::Array<DDL::UInt<8>>> EncryptionDict2645_61_ra0o;
  DDL::Input EncryptionDict2645_61_ra4o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_61_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_61_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_61_ra3o;
  
// Parameters for L_62_EncryptionDict2645
  DDL::Input EncryptionDict2645_62_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_62_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_62_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_62_ra3o;
  
// Parameters for L_66_EncryptionDict2645
  DDL::Input EncryptionDict2645_66_ra4o;
  User::Value EncryptionDict2645_66_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_66_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_66_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_66_ra3o;
  
// Parameters for L_67_EncryptionDict2645
  DDL::Input EncryptionDict2645_67_ra0o;
  DDL::Input EncryptionDict2645_67_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_67_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_67_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_67_ra4o;
  
// Parameters for L_70_EncryptionDict2645
  DDL::Input EncryptionDict2645_70_ra0o;
  DDL::Input EncryptionDict2645_70_ra1o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_70_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_70_ra3o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_70_ra4o;
  
// Parameters for L_71_EncryptionDict2645
  DDL::Input EncryptionDict2645_71_ra5o;
  DDL::Maybe<User::Value> EncryptionDict2645_71_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_71_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_71_ra2o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_71_ra3o;
  DDL::Input EncryptionDict2645_71_ra4o;
  
// Parameters for L_73_EncryptionDict2645
  DDL::Input EncryptionDict2645_73_ra3o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_73_ra0o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_73_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_73_ra2o;
  
// Parameters for L_74_EncryptionDict2645
  DDL::Input EncryptionDict2645_74_ra0o;
  
// Parameters for L_76_EncryptionDict2645
  DDL::Input EncryptionDict2645_76_ra3o;
  User::Value EncryptionDict2645_76_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_76_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_76_ra2o;
  
// Parameters for L_77_EncryptionDict2645
  DDL::Input EncryptionDict2645_77_ra0o;
  
// Parameters for L_79_EncryptionDict2645
  DDL::Input EncryptionDict2645_79_ra0o;
  
// Parameters for L_80_EncryptionDict2645
  DDL::Input EncryptionDict2645_80_ra3o;
  DDL::Maybe<User::Value> EncryptionDict2645_80_ra0o;
  DDL::Map<DDL::Array<DDL::UInt<8>>,
           User::Value> EncryptionDict2645_80_ra1o;
  DDL::Array<DDL::UInt<8>> EncryptionDict2645_80_ra2o;
  
// Parameters for L_82_EncryptionDict2645
  DDL::Input EncryptionDict2645_82_ra2o;
  User::Value EncryptionDict2645_82_ra0o;
  User::TrailerDictEncrypt EncryptionDict2645_82_ra1o;
  
// Parameters for L_83_EncryptionDict2645
  DDL::Input EncryptionDict2645_83_ra0o;
  
// Parameters for L_85_EncryptionDict2645
  User::Value EncryptionDict2645_85_ra0o;
  DDL::Input EncryptionDict2645_85_ra1o;
  User::TrailerDictEncrypt EncryptionDict2645_85_ra2o;
  
// Parameters for L_86_EncryptionDict2645
  DDL::Input EncryptionDict2645_86_ra0o;
  User::TrailerDictEncrypt EncryptionDict2645_86_ra1o;
  EncryptionDict2645_86_ra0o = a1;
  EncryptionDict2645_86_ra1o = a2;
  goto EncryptionDict2645_86;
  // ReturnBlock (RetNo NoCapture)
  EncryptionDict2645_0: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  EncryptionDict2645_1: {
    User::EncryptionDict r0;
    r0.init(EncryptionDict2645_1_ra2o, EncryptionDict2645_1_ra3o,
            EncryptionDict2645_1_ra4o, EncryptionDict2645_1_ra5o,
            EncryptionDict2645_1_ra6o, EncryptionDict2645_1_ra7o,
            EncryptionDict2645_1_ra8o, EncryptionDict2645_1_ra9o,
            EncryptionDict2645_1_ra10o, EncryptionDict2645_1_ra11o,
            EncryptionDict2645_1_ra0o);
    p.popDebug();
    *_result = r0;
    *_result_input = EncryptionDict2645_1_ra1o;
    return true;
  }
  // NormalBlock
  EncryptionDict2645_3: {
    User::Number r0 = EncryptionDict2645_3_ra0o.get_number();
    EncryptionDict2645_3_ra0o.free();
    DDL::Integer r1 = r0.get_num();
    r0.free();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:33:10--33:30:ChooseCiph_2644",
                false);
    EncryptionDict2645_3_ra2o.copy();
    if (parser_ChooseCiph_2644(p, &EncryptionDict2645_1_ra0o,
                               &EncryptionDict2645_1_ra1o, EncryptionDict2645_3_ra11o,
                               EncryptionDict2645_3_ra1o, EncryptionDict2645_3_ra2o)) {
      EncryptionDict2645_1_ra2o = EncryptionDict2645_3_ra3o;
      EncryptionDict2645_1_ra3o = EncryptionDict2645_3_ra4o;
      EncryptionDict2645_1_ra4o = EncryptionDict2645_3_ra5o;
      EncryptionDict2645_1_ra5o = EncryptionDict2645_3_ra2o;
      EncryptionDict2645_1_ra6o = EncryptionDict2645_3_ra6o;
      EncryptionDict2645_1_ra7o = EncryptionDict2645_3_ra7o;
      EncryptionDict2645_1_ra8o = EncryptionDict2645_3_ra8o;
      EncryptionDict2645_1_ra9o = EncryptionDict2645_3_ra9o;
      EncryptionDict2645_1_ra10o = EncryptionDict2645_3_ra10o;
      EncryptionDict2645_1_ra11o = r1;
      goto EncryptionDict2645_1;
    } else {
      EncryptionDict2645_3_ra3o.free();
      EncryptionDict2645_3_ra4o.free();
      EncryptionDict2645_3_ra5o.free();
      EncryptionDict2645_3_ra2o.free();
      EncryptionDict2645_3_ra6o.free();
      EncryptionDict2645_3_ra7o.free();
      EncryptionDict2645_3_ra8o.free();
      EncryptionDict2645_3_ra9o.free();
      EncryptionDict2645_3_ra10o.free();
      r1.free();
      goto EncryptionDict2645_0;
    }
  }
  // NormalBlock
  EncryptionDict2645_4: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:29:11--29:37",
               EncryptionDict2645_4_ra0o, r0);
    EncryptionDict2645_4_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EncryptionDict2645_6: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:29:11--29:26",
               EncryptionDict2645_6_ra0o, r0);
    EncryptionDict2645_6_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EncryptionDict2645_7: {
    User::Value r0 = EncryptionDict2645_7_ra0o.getValue();
    EncryptionDict2645_7_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::number:
        EncryptionDict2645_3_ra11o = EncryptionDict2645_7_ra11o;
        EncryptionDict2645_3_ra0o = r0;
        EncryptionDict2645_3_ra1o = EncryptionDict2645_7_ra1o;
        EncryptionDict2645_3_ra2o = EncryptionDict2645_7_ra2o;
        EncryptionDict2645_3_ra3o = EncryptionDict2645_7_ra3o;
        EncryptionDict2645_3_ra4o = EncryptionDict2645_7_ra4o;
        EncryptionDict2645_3_ra5o = EncryptionDict2645_7_ra5o;
        EncryptionDict2645_3_ra6o = EncryptionDict2645_7_ra6o;
        EncryptionDict2645_3_ra7o = EncryptionDict2645_7_ra7o;
        EncryptionDict2645_3_ra8o = EncryptionDict2645_7_ra8o;
        EncryptionDict2645_3_ra9o = EncryptionDict2645_7_ra9o;
        EncryptionDict2645_3_ra10o = EncryptionDict2645_7_ra10o;
        goto EncryptionDict2645_3;
      default:
        EncryptionDict2645_7_ra1o.free();
        EncryptionDict2645_7_ra2o.free();
        EncryptionDict2645_7_ra3o.free();
        EncryptionDict2645_7_ra4o.free();
        EncryptionDict2645_7_ra5o.free();
        EncryptionDict2645_7_ra6o.free();
        EncryptionDict2645_7_ra7o.free();
        EncryptionDict2645_7_ra8o.free();
        EncryptionDict2645_7_ra9o.free();
        EncryptionDict2645_7_ra10o.free();
        r0.free();
        EncryptionDict2645_4_ra0o = EncryptionDict2645_7_ra11o;
        goto EncryptionDict2645_4;
    }
  }
  // NormalBlock
  EncryptionDict2645_8: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL)};
    DDL::Maybe<User::Value> r1 = EncryptionDict2645_8_ra1o.lookup(r0);
    r0.free();
    if (r1.isJust()) {
      EncryptionDict2645_7_ra11o = EncryptionDict2645_8_ra2o;
      EncryptionDict2645_7_ra0o = r1;
      EncryptionDict2645_7_ra1o = EncryptionDict2645_8_ra1o;
      EncryptionDict2645_7_ra2o = EncryptionDict2645_8_ra3o;
      EncryptionDict2645_7_ra3o = EncryptionDict2645_8_ra4o;
      EncryptionDict2645_7_ra4o = EncryptionDict2645_8_ra5o;
      EncryptionDict2645_7_ra5o = EncryptionDict2645_8_ra6o;
      EncryptionDict2645_7_ra6o = EncryptionDict2645_8_ra7o;
      EncryptionDict2645_7_ra7o = EncryptionDict2645_8_ra8o;
      EncryptionDict2645_7_ra8o = EncryptionDict2645_8_ra9o;
      EncryptionDict2645_7_ra9o = EncryptionDict2645_8_ra10o;
      EncryptionDict2645_7_ra10o = EncryptionDict2645_8_ra0o;
      goto EncryptionDict2645_7;
    } else {
      EncryptionDict2645_8_ra0o.free();
      EncryptionDict2645_8_ra1o.free();
      EncryptionDict2645_8_ra3o.free();
      EncryptionDict2645_8_ra4o.free();
      EncryptionDict2645_8_ra5o.free();
      EncryptionDict2645_8_ra6o.free();
      EncryptionDict2645_8_ra7o.free();
      EncryptionDict2645_8_ra8o.free();
      EncryptionDict2645_8_ra9o.free();
      EncryptionDict2645_8_ra10o.free();
      r1.free();
      EncryptionDict2645_6_ra0o = EncryptionDict2645_8_ra2o;
      goto EncryptionDict2645_6;
    }
  }
  // NormalBlock
  EncryptionDict2645_9: {
    EncryptionDict2645_8_ra0o = (DDL::Maybe<DDL::Array<DDL::UInt<8>>>());
    EncryptionDict2645_8_ra2o = EncryptionDict2645_9_ra0o;
    EncryptionDict2645_8_ra1o = EncryptionDict2645_9_ra1o;
    EncryptionDict2645_8_ra3o = EncryptionDict2645_9_ra2o;
    EncryptionDict2645_8_ra4o = EncryptionDict2645_9_ra3o;
    EncryptionDict2645_8_ra5o = EncryptionDict2645_9_ra4o;
    EncryptionDict2645_8_ra6o = EncryptionDict2645_9_ra5o;
    EncryptionDict2645_8_ra7o = EncryptionDict2645_9_ra6o;
    EncryptionDict2645_8_ra8o = EncryptionDict2645_9_ra7o;
    EncryptionDict2645_8_ra9o = EncryptionDict2645_9_ra8o;
    EncryptionDict2645_8_ra10o = EncryptionDict2645_9_ra9o;
    goto EncryptionDict2645_8;
  }
  // NormalBlock
  EncryptionDict2645_13: {
    DDL::Array<DDL::UInt<8>> r0 = EncryptionDict2645_13_ra0o.get_string();
    EncryptionDict2645_13_ra0o.free();
    DDL::Maybe<DDL::Array<DDL::UInt<8>>> r1 = DDL::Maybe<DDL::Array<DDL::UInt<8>>>(r0);
    EncryptionDict2645_8_ra0o = r1;
    EncryptionDict2645_8_ra2o = EncryptionDict2645_13_ra10o;
    EncryptionDict2645_8_ra1o = EncryptionDict2645_13_ra1o;
    EncryptionDict2645_8_ra3o = EncryptionDict2645_13_ra2o;
    EncryptionDict2645_8_ra4o = EncryptionDict2645_13_ra3o;
    EncryptionDict2645_8_ra5o = EncryptionDict2645_13_ra4o;
    EncryptionDict2645_8_ra6o = EncryptionDict2645_13_ra5o;
    EncryptionDict2645_8_ra7o = EncryptionDict2645_13_ra6o;
    EncryptionDict2645_8_ra8o = EncryptionDict2645_13_ra7o;
    EncryptionDict2645_8_ra9o = EncryptionDict2645_13_ra8o;
    EncryptionDict2645_8_ra10o = EncryptionDict2645_13_ra9o;
    goto EncryptionDict2645_8;
  }
  // NormalBlock
  EncryptionDict2645_14: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:26:22--26:49",
               EncryptionDict2645_14_ra0o, r0);
    EncryptionDict2645_14_ra0o.free();
    r0.free();
    EncryptionDict2645_9_ra0o = EncryptionDict2645_14_ra1o;
    EncryptionDict2645_9_ra1o = EncryptionDict2645_14_ra2o;
    EncryptionDict2645_9_ra2o = EncryptionDict2645_14_ra3o;
    EncryptionDict2645_9_ra3o = EncryptionDict2645_14_ra4o;
    EncryptionDict2645_9_ra4o = EncryptionDict2645_14_ra5o;
    EncryptionDict2645_9_ra5o = EncryptionDict2645_14_ra6o;
    EncryptionDict2645_9_ra6o = EncryptionDict2645_14_ra7o;
    EncryptionDict2645_9_ra7o = EncryptionDict2645_14_ra8o;
    EncryptionDict2645_9_ra8o = EncryptionDict2645_14_ra9o;
    EncryptionDict2645_9_ra9o = EncryptionDict2645_14_ra10o;
    goto EncryptionDict2645_9;
  }
  // NormalBlock
  EncryptionDict2645_17: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:26:22--26:38",
               EncryptionDict2645_17_ra0o, r0);
    EncryptionDict2645_17_ra0o.free();
    r0.free();
    EncryptionDict2645_9_ra0o = EncryptionDict2645_17_ra1o;
    EncryptionDict2645_9_ra1o = EncryptionDict2645_17_ra2o;
    EncryptionDict2645_9_ra2o = EncryptionDict2645_17_ra3o;
    EncryptionDict2645_9_ra3o = EncryptionDict2645_17_ra4o;
    EncryptionDict2645_9_ra4o = EncryptionDict2645_17_ra5o;
    EncryptionDict2645_9_ra5o = EncryptionDict2645_17_ra6o;
    EncryptionDict2645_9_ra6o = EncryptionDict2645_17_ra7o;
    EncryptionDict2645_9_ra7o = EncryptionDict2645_17_ra8o;
    EncryptionDict2645_9_ra8o = EncryptionDict2645_17_ra9o;
    EncryptionDict2645_9_ra9o = EncryptionDict2645_17_ra10o;
    goto EncryptionDict2645_9;
  }
  // NormalBlock
  EncryptionDict2645_18: {
    User::Value r0 = EncryptionDict2645_18_ra0o.getValue();
    EncryptionDict2645_18_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::string:
        EncryptionDict2645_18_ra10o.free();
        EncryptionDict2645_13_ra10o = EncryptionDict2645_18_ra11o;
        EncryptionDict2645_13_ra0o = r0;
        EncryptionDict2645_13_ra1o = EncryptionDict2645_18_ra1o;
        EncryptionDict2645_13_ra2o = EncryptionDict2645_18_ra2o;
        EncryptionDict2645_13_ra3o = EncryptionDict2645_18_ra3o;
        EncryptionDict2645_13_ra4o = EncryptionDict2645_18_ra4o;
        EncryptionDict2645_13_ra5o = EncryptionDict2645_18_ra5o;
        EncryptionDict2645_13_ra6o = EncryptionDict2645_18_ra6o;
        EncryptionDict2645_13_ra7o = EncryptionDict2645_18_ra7o;
        EncryptionDict2645_13_ra8o = EncryptionDict2645_18_ra8o;
        EncryptionDict2645_13_ra9o = EncryptionDict2645_18_ra9o;
        goto EncryptionDict2645_13;
      default:
        r0.free();
        EncryptionDict2645_14_ra0o = EncryptionDict2645_18_ra11o;
        EncryptionDict2645_14_ra1o = EncryptionDict2645_18_ra10o;
        EncryptionDict2645_14_ra2o = EncryptionDict2645_18_ra1o;
        EncryptionDict2645_14_ra3o = EncryptionDict2645_18_ra2o;
        EncryptionDict2645_14_ra4o = EncryptionDict2645_18_ra3o;
        EncryptionDict2645_14_ra5o = EncryptionDict2645_18_ra4o;
        EncryptionDict2645_14_ra6o = EncryptionDict2645_18_ra5o;
        EncryptionDict2645_14_ra7o = EncryptionDict2645_18_ra6o;
        EncryptionDict2645_14_ra8o = EncryptionDict2645_18_ra7o;
        EncryptionDict2645_14_ra9o = EncryptionDict2645_18_ra8o;
        EncryptionDict2645_14_ra10o = EncryptionDict2645_18_ra9o;
        goto EncryptionDict2645_14;
    }
  }
  // NormalBlock
  EncryptionDict2645_19: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL),
                                                           DDL::UInt<8>(69UL)};
    DDL::Maybe<User::Value> r1 = EncryptionDict2645_19_ra2o.lookup(r0);
    r0.free();
    EncryptionDict2645_19_ra1o.copy();
    EncryptionDict2645_19_ra1o.copy();
    if (r1.isJust()) {
      EncryptionDict2645_19_ra1o.free();
      EncryptionDict2645_18_ra11o = EncryptionDict2645_19_ra1o;
      EncryptionDict2645_18_ra0o = r1;
      EncryptionDict2645_18_ra1o = EncryptionDict2645_19_ra2o;
      EncryptionDict2645_18_ra2o = EncryptionDict2645_19_ra3o;
      EncryptionDict2645_18_ra3o = EncryptionDict2645_19_ra4o;
      EncryptionDict2645_18_ra4o = EncryptionDict2645_19_ra5o;
      EncryptionDict2645_18_ra5o = EncryptionDict2645_19_ra6o;
      EncryptionDict2645_18_ra6o = EncryptionDict2645_19_ra7o;
      EncryptionDict2645_18_ra7o = EncryptionDict2645_19_ra8o;
      EncryptionDict2645_18_ra8o = EncryptionDict2645_19_ra9o;
      EncryptionDict2645_18_ra9o = EncryptionDict2645_19_ra0o;
      EncryptionDict2645_18_ra10o = EncryptionDict2645_19_ra1o;
      goto EncryptionDict2645_18;
    } else {
      r1.free();
      EncryptionDict2645_19_ra1o.free();
      EncryptionDict2645_17_ra0o = EncryptionDict2645_19_ra1o;
      EncryptionDict2645_17_ra1o = EncryptionDict2645_19_ra1o;
      EncryptionDict2645_17_ra2o = EncryptionDict2645_19_ra2o;
      EncryptionDict2645_17_ra3o = EncryptionDict2645_19_ra3o;
      EncryptionDict2645_17_ra4o = EncryptionDict2645_19_ra4o;
      EncryptionDict2645_17_ra5o = EncryptionDict2645_19_ra5o;
      EncryptionDict2645_17_ra6o = EncryptionDict2645_19_ra6o;
      EncryptionDict2645_17_ra7o = EncryptionDict2645_19_ra7o;
      EncryptionDict2645_17_ra8o = EncryptionDict2645_19_ra8o;
      EncryptionDict2645_17_ra9o = EncryptionDict2645_19_ra9o;
      EncryptionDict2645_17_ra10o = EncryptionDict2645_19_ra0o;
      goto EncryptionDict2645_17;
    }
  }
  // NormalBlock
  EncryptionDict2645_20: {
    EncryptionDict2645_19_ra0o = (DDL::Maybe<DDL::Array<DDL::UInt<8>>>());
    EncryptionDict2645_19_ra1o = EncryptionDict2645_20_ra0o;
    EncryptionDict2645_19_ra2o = EncryptionDict2645_20_ra1o;
    EncryptionDict2645_19_ra3o = EncryptionDict2645_20_ra2o;
    EncryptionDict2645_19_ra4o = EncryptionDict2645_20_ra3o;
    EncryptionDict2645_19_ra5o = EncryptionDict2645_20_ra4o;
    EncryptionDict2645_19_ra6o = EncryptionDict2645_20_ra5o;
    EncryptionDict2645_19_ra7o = EncryptionDict2645_20_ra6o;
    EncryptionDict2645_19_ra8o = EncryptionDict2645_20_ra7o;
    EncryptionDict2645_19_ra9o = EncryptionDict2645_20_ra8o;
    goto EncryptionDict2645_19;
  }
  // NormalBlock
  EncryptionDict2645_24: {
    DDL::Array<DDL::UInt<8>> r0 = EncryptionDict2645_24_ra0o.get_string();
    EncryptionDict2645_24_ra0o.free();
    DDL::Maybe<DDL::Array<DDL::UInt<8>>> r1 = DDL::Maybe<DDL::Array<DDL::UInt<8>>>(r0);
    EncryptionDict2645_19_ra0o = r1;
    EncryptionDict2645_19_ra1o = EncryptionDict2645_24_ra9o;
    EncryptionDict2645_19_ra2o = EncryptionDict2645_24_ra1o;
    EncryptionDict2645_19_ra3o = EncryptionDict2645_24_ra2o;
    EncryptionDict2645_19_ra4o = EncryptionDict2645_24_ra3o;
    EncryptionDict2645_19_ra5o = EncryptionDict2645_24_ra4o;
    EncryptionDict2645_19_ra6o = EncryptionDict2645_24_ra5o;
    EncryptionDict2645_19_ra7o = EncryptionDict2645_24_ra6o;
    EncryptionDict2645_19_ra8o = EncryptionDict2645_24_ra7o;
    EncryptionDict2645_19_ra9o = EncryptionDict2645_24_ra8o;
    goto EncryptionDict2645_19;
  }
  // NormalBlock
  EncryptionDict2645_25: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:25:22--25:49",
               EncryptionDict2645_25_ra0o, r0);
    EncryptionDict2645_25_ra0o.free();
    r0.free();
    EncryptionDict2645_20_ra0o = EncryptionDict2645_25_ra1o;
    EncryptionDict2645_20_ra1o = EncryptionDict2645_25_ra2o;
    EncryptionDict2645_20_ra2o = EncryptionDict2645_25_ra3o;
    EncryptionDict2645_20_ra3o = EncryptionDict2645_25_ra4o;
    EncryptionDict2645_20_ra4o = EncryptionDict2645_25_ra5o;
    EncryptionDict2645_20_ra5o = EncryptionDict2645_25_ra6o;
    EncryptionDict2645_20_ra6o = EncryptionDict2645_25_ra7o;
    EncryptionDict2645_20_ra7o = EncryptionDict2645_25_ra8o;
    EncryptionDict2645_20_ra8o = EncryptionDict2645_25_ra9o;
    goto EncryptionDict2645_20;
  }
  // NormalBlock
  EncryptionDict2645_28: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:25:22--25:38",
               EncryptionDict2645_28_ra0o, r0);
    EncryptionDict2645_28_ra0o.free();
    r0.free();
    EncryptionDict2645_20_ra0o = EncryptionDict2645_28_ra1o;
    EncryptionDict2645_20_ra1o = EncryptionDict2645_28_ra2o;
    EncryptionDict2645_20_ra2o = EncryptionDict2645_28_ra3o;
    EncryptionDict2645_20_ra3o = EncryptionDict2645_28_ra4o;
    EncryptionDict2645_20_ra4o = EncryptionDict2645_28_ra5o;
    EncryptionDict2645_20_ra5o = EncryptionDict2645_28_ra6o;
    EncryptionDict2645_20_ra6o = EncryptionDict2645_28_ra7o;
    EncryptionDict2645_20_ra7o = EncryptionDict2645_28_ra8o;
    EncryptionDict2645_20_ra8o = EncryptionDict2645_28_ra9o;
    goto EncryptionDict2645_20;
  }
  // NormalBlock
  EncryptionDict2645_29: {
    User::Value r0 = EncryptionDict2645_29_ra0o.getValue();
    EncryptionDict2645_29_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::string:
        EncryptionDict2645_29_ra9o.free();
        EncryptionDict2645_24_ra9o = EncryptionDict2645_29_ra10o;
        EncryptionDict2645_24_ra0o = r0;
        EncryptionDict2645_24_ra1o = EncryptionDict2645_29_ra1o;
        EncryptionDict2645_24_ra2o = EncryptionDict2645_29_ra2o;
        EncryptionDict2645_24_ra3o = EncryptionDict2645_29_ra3o;
        EncryptionDict2645_24_ra4o = EncryptionDict2645_29_ra4o;
        EncryptionDict2645_24_ra5o = EncryptionDict2645_29_ra5o;
        EncryptionDict2645_24_ra6o = EncryptionDict2645_29_ra6o;
        EncryptionDict2645_24_ra7o = EncryptionDict2645_29_ra7o;
        EncryptionDict2645_24_ra8o = EncryptionDict2645_29_ra8o;
        goto EncryptionDict2645_24;
      default:
        r0.free();
        EncryptionDict2645_25_ra0o = EncryptionDict2645_29_ra10o;
        EncryptionDict2645_25_ra1o = EncryptionDict2645_29_ra9o;
        EncryptionDict2645_25_ra2o = EncryptionDict2645_29_ra1o;
        EncryptionDict2645_25_ra3o = EncryptionDict2645_29_ra2o;
        EncryptionDict2645_25_ra4o = EncryptionDict2645_29_ra3o;
        EncryptionDict2645_25_ra5o = EncryptionDict2645_29_ra4o;
        EncryptionDict2645_25_ra6o = EncryptionDict2645_29_ra5o;
        EncryptionDict2645_25_ra7o = EncryptionDict2645_29_ra6o;
        EncryptionDict2645_25_ra8o = EncryptionDict2645_29_ra7o;
        EncryptionDict2645_25_ra9o = EncryptionDict2645_29_ra8o;
        goto EncryptionDict2645_25;
    }
  }
  // NormalBlock
  EncryptionDict2645_31: {
    DDL::Array<DDL::UInt<8>> r0 = EncryptionDict2645_31_ra0o.get_string();
    EncryptionDict2645_31_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(79UL),
                                                           DDL::UInt<8>(69UL)};
    DDL::Maybe<User::Value> r2 = EncryptionDict2645_31_ra1o.lookup(r1);
    r1.free();
    EncryptionDict2645_31_ra8o.copy();
    EncryptionDict2645_31_ra8o.copy();
    if (r2.isJust()) {
      EncryptionDict2645_31_ra8o.free();
      EncryptionDict2645_29_ra10o = EncryptionDict2645_31_ra8o;
      EncryptionDict2645_29_ra0o = r2;
      EncryptionDict2645_29_ra1o = EncryptionDict2645_31_ra1o;
      EncryptionDict2645_29_ra2o = EncryptionDict2645_31_ra2o;
      EncryptionDict2645_29_ra3o = EncryptionDict2645_31_ra3o;
      EncryptionDict2645_29_ra4o = EncryptionDict2645_31_ra4o;
      EncryptionDict2645_29_ra5o = EncryptionDict2645_31_ra5o;
      EncryptionDict2645_29_ra6o = EncryptionDict2645_31_ra6o;
      EncryptionDict2645_29_ra7o = EncryptionDict2645_31_ra7o;
      EncryptionDict2645_29_ra8o = r0;
      EncryptionDict2645_29_ra9o = EncryptionDict2645_31_ra8o;
      goto EncryptionDict2645_29;
    } else {
      r2.free();
      EncryptionDict2645_31_ra8o.free();
      EncryptionDict2645_28_ra0o = EncryptionDict2645_31_ra8o;
      EncryptionDict2645_28_ra1o = EncryptionDict2645_31_ra8o;
      EncryptionDict2645_28_ra2o = EncryptionDict2645_31_ra1o;
      EncryptionDict2645_28_ra3o = EncryptionDict2645_31_ra2o;
      EncryptionDict2645_28_ra4o = EncryptionDict2645_31_ra3o;
      EncryptionDict2645_28_ra5o = EncryptionDict2645_31_ra4o;
      EncryptionDict2645_28_ra6o = EncryptionDict2645_31_ra5o;
      EncryptionDict2645_28_ra7o = EncryptionDict2645_31_ra6o;
      EncryptionDict2645_28_ra8o = EncryptionDict2645_31_ra7o;
      EncryptionDict2645_28_ra9o = r0;
      goto EncryptionDict2645_28;
    }
  }
  // NormalBlock
  EncryptionDict2645_32: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:23:11--23:37",
               EncryptionDict2645_32_ra0o, r0);
    EncryptionDict2645_32_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EncryptionDict2645_34: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:23:11--23:26",
               EncryptionDict2645_34_ra0o, r0);
    EncryptionDict2645_34_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EncryptionDict2645_35: {
    User::Value r0 = EncryptionDict2645_35_ra0o.getValue();
    EncryptionDict2645_35_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::string:
        EncryptionDict2645_31_ra8o = EncryptionDict2645_35_ra8o;
        EncryptionDict2645_31_ra0o = r0;
        EncryptionDict2645_31_ra1o = EncryptionDict2645_35_ra1o;
        EncryptionDict2645_31_ra2o = EncryptionDict2645_35_ra2o;
        EncryptionDict2645_31_ra3o = EncryptionDict2645_35_ra3o;
        EncryptionDict2645_31_ra4o = EncryptionDict2645_35_ra4o;
        EncryptionDict2645_31_ra5o = EncryptionDict2645_35_ra5o;
        EncryptionDict2645_31_ra6o = EncryptionDict2645_35_ra6o;
        EncryptionDict2645_31_ra7o = EncryptionDict2645_35_ra7o;
        goto EncryptionDict2645_31;
      default:
        EncryptionDict2645_35_ra1o.free();
        EncryptionDict2645_35_ra2o.free();
        EncryptionDict2645_35_ra3o.free();
        EncryptionDict2645_35_ra4o.free();
        EncryptionDict2645_35_ra5o.free();
        EncryptionDict2645_35_ra6o.free();
        EncryptionDict2645_35_ra7o.free();
        r0.free();
        EncryptionDict2645_32_ra0o = EncryptionDict2645_35_ra8o;
        goto EncryptionDict2645_32;
    }
  }
  // NormalBlock
  EncryptionDict2645_37: {
    DDL::Array<DDL::UInt<8>> r0 = EncryptionDict2645_37_ra0o.get_string();
    EncryptionDict2645_37_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(85UL)};
    DDL::Maybe<User::Value> r2 = EncryptionDict2645_37_ra1o.lookup(r1);
    r1.free();
    if (r2.isJust()) {
      EncryptionDict2645_35_ra8o = EncryptionDict2645_37_ra7o;
      EncryptionDict2645_35_ra0o = r2;
      EncryptionDict2645_35_ra1o = EncryptionDict2645_37_ra1o;
      EncryptionDict2645_35_ra2o = EncryptionDict2645_37_ra2o;
      EncryptionDict2645_35_ra3o = EncryptionDict2645_37_ra3o;
      EncryptionDict2645_35_ra4o = EncryptionDict2645_37_ra4o;
      EncryptionDict2645_35_ra5o = EncryptionDict2645_37_ra5o;
      EncryptionDict2645_35_ra6o = EncryptionDict2645_37_ra6o;
      EncryptionDict2645_35_ra7o = r0;
      goto EncryptionDict2645_35;
    } else {
      EncryptionDict2645_37_ra1o.free();
      EncryptionDict2645_37_ra2o.free();
      EncryptionDict2645_37_ra3o.free();
      EncryptionDict2645_37_ra4o.free();
      EncryptionDict2645_37_ra5o.free();
      EncryptionDict2645_37_ra6o.free();
      r0.free();
      r2.free();
      EncryptionDict2645_34_ra0o = EncryptionDict2645_37_ra7o;
      goto EncryptionDict2645_34;
    }
  }
  // NormalBlock
  EncryptionDict2645_38: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:22:11--22:37",
               EncryptionDict2645_38_ra0o, r0);
    EncryptionDict2645_38_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EncryptionDict2645_40: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:22:11--22:26",
               EncryptionDict2645_40_ra0o, r0);
    EncryptionDict2645_40_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EncryptionDict2645_41: {
    User::Value r0 = EncryptionDict2645_41_ra0o.getValue();
    EncryptionDict2645_41_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::string:
        EncryptionDict2645_37_ra7o = EncryptionDict2645_41_ra7o;
        EncryptionDict2645_37_ra0o = r0;
        EncryptionDict2645_37_ra1o = EncryptionDict2645_41_ra1o;
        EncryptionDict2645_37_ra2o = EncryptionDict2645_41_ra2o;
        EncryptionDict2645_37_ra3o = EncryptionDict2645_41_ra3o;
        EncryptionDict2645_37_ra4o = EncryptionDict2645_41_ra4o;
        EncryptionDict2645_37_ra5o = EncryptionDict2645_41_ra5o;
        EncryptionDict2645_37_ra6o = EncryptionDict2645_41_ra6o;
        goto EncryptionDict2645_37;
      default:
        EncryptionDict2645_41_ra1o.free();
        EncryptionDict2645_41_ra2o.free();
        EncryptionDict2645_41_ra3o.free();
        EncryptionDict2645_41_ra4o.free();
        EncryptionDict2645_41_ra5o.free();
        EncryptionDict2645_41_ra6o.free();
        r0.free();
        EncryptionDict2645_38_ra0o = EncryptionDict2645_41_ra7o;
        goto EncryptionDict2645_38;
    }
  }
  // NormalBlock
  EncryptionDict2645_43: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(79UL)};
    DDL::Maybe<User::Value> r1 = EncryptionDict2645_43_ra0o.lookup(r0);
    r0.free();
    if (r1.isJust()) {
      EncryptionDict2645_41_ra7o = EncryptionDict2645_43_ra6o;
      EncryptionDict2645_41_ra0o = r1;
      EncryptionDict2645_41_ra1o = EncryptionDict2645_43_ra0o;
      EncryptionDict2645_41_ra2o = EncryptionDict2645_43_ra1o;
      EncryptionDict2645_41_ra3o = EncryptionDict2645_43_ra2o;
      EncryptionDict2645_41_ra4o = EncryptionDict2645_43_ra3o;
      EncryptionDict2645_41_ra5o = EncryptionDict2645_43_ra4o;
      EncryptionDict2645_41_ra6o = EncryptionDict2645_43_ra5o;
      goto EncryptionDict2645_41;
    } else {
      EncryptionDict2645_43_ra0o.free();
      EncryptionDict2645_43_ra1o.free();
      EncryptionDict2645_43_ra2o.free();
      EncryptionDict2645_43_ra3o.free();
      EncryptionDict2645_43_ra4o.free();
      EncryptionDict2645_43_ra5o.free();
      r1.free();
      EncryptionDict2645_40_ra0o = EncryptionDict2645_43_ra6o;
      goto EncryptionDict2645_40;
    }
  }
  // NormalBlock
  EncryptionDict2645_44: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:20:3--20:75",
               EncryptionDict2645_44_ra0o, r0);
    EncryptionDict2645_44_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EncryptionDict2645_45: {
    if (EncryptionDict2645_45_ra0u.getValue()) {
      EncryptionDict2645_43_ra6o = EncryptionDict2645_45_ra1o;
      EncryptionDict2645_43_ra0o = EncryptionDict2645_45_ra2o;
      EncryptionDict2645_43_ra1o = EncryptionDict2645_45_ra3o;
      EncryptionDict2645_43_ra2o = EncryptionDict2645_45_ra4o;
      EncryptionDict2645_43_ra3o = EncryptionDict2645_45_ra5o;
      EncryptionDict2645_43_ra4o = EncryptionDict2645_45_ra6o;
      EncryptionDict2645_43_ra5o = EncryptionDict2645_45_ra7o;
      goto EncryptionDict2645_43;
    } else {
      EncryptionDict2645_45_ra2o.free();
      EncryptionDict2645_45_ra3o.free();
      EncryptionDict2645_45_ra4o.free();
      EncryptionDict2645_45_ra5o.free();
      EncryptionDict2645_45_ra6o.free();
      EncryptionDict2645_45_ra7o.free();
      EncryptionDict2645_44_ra0o = EncryptionDict2645_45_ra1o;
      goto EncryptionDict2645_44;
    }
  }
  // NormalBlock
  EncryptionDict2645_46: {
    EncryptionDict2645_45_ra1o = EncryptionDict2645_46_ra6o;
    EncryptionDict2645_45_ra0u = DDL::Bool(true);
    EncryptionDict2645_45_ra2o = EncryptionDict2645_46_ra0o;
    EncryptionDict2645_45_ra3o = EncryptionDict2645_46_ra1o;
    EncryptionDict2645_45_ra4o = EncryptionDict2645_46_ra2o;
    EncryptionDict2645_45_ra5o = EncryptionDict2645_46_ra3o;
    EncryptionDict2645_45_ra6o = EncryptionDict2645_46_ra4o;
    EncryptionDict2645_45_ra7o = EncryptionDict2645_46_ra5o;
    goto EncryptionDict2645_45;
  }
  // NormalBlock
  EncryptionDict2645_47: {
    EncryptionDict2645_45_ra1o = EncryptionDict2645_47_ra7o;
    EncryptionDict2645_45_ra0u = EncryptionDict2645_47_ra0u;
    EncryptionDict2645_45_ra2o = EncryptionDict2645_47_ra1o;
    EncryptionDict2645_45_ra3o = EncryptionDict2645_47_ra2o;
    EncryptionDict2645_45_ra4o = EncryptionDict2645_47_ra3o;
    EncryptionDict2645_45_ra5o = EncryptionDict2645_47_ra4o;
    EncryptionDict2645_45_ra6o = EncryptionDict2645_47_ra5o;
    EncryptionDict2645_45_ra7o = EncryptionDict2645_47_ra6o;
    goto EncryptionDict2645_45;
  }
  // NormalBlock
  EncryptionDict2645_48: {
    DDL::Integer r0 = DDL::Integer("6");
    DDL::Bool r1 = DDL::Bool{EncryptionDict2645_48_ra0o == r0};
    r0.free();
    EncryptionDict2645_47_ra7o = EncryptionDict2645_48_ra6o;
    EncryptionDict2645_47_ra0u = r1;
    EncryptionDict2645_47_ra1o = EncryptionDict2645_48_ra1o;
    EncryptionDict2645_47_ra2o = EncryptionDict2645_48_ra2o;
    EncryptionDict2645_47_ra3o = EncryptionDict2645_48_ra3o;
    EncryptionDict2645_47_ra4o = EncryptionDict2645_48_ra4o;
    EncryptionDict2645_47_ra5o = EncryptionDict2645_48_ra5o;
    EncryptionDict2645_47_ra6o = EncryptionDict2645_48_ra0o;
    goto EncryptionDict2645_47;
  }
  // NormalBlock
  EncryptionDict2645_49: {
    EncryptionDict2645_47_ra7o = EncryptionDict2645_49_ra6o;
    EncryptionDict2645_47_ra0u = DDL::Bool(false);
    EncryptionDict2645_47_ra1o = EncryptionDict2645_49_ra0o;
    EncryptionDict2645_47_ra2o = EncryptionDict2645_49_ra1o;
    EncryptionDict2645_47_ra3o = EncryptionDict2645_49_ra2o;
    EncryptionDict2645_47_ra4o = EncryptionDict2645_49_ra3o;
    EncryptionDict2645_47_ra5o = EncryptionDict2645_49_ra4o;
    EncryptionDict2645_47_ra6o = EncryptionDict2645_49_ra5o;
    goto EncryptionDict2645_47;
  }
  // NormalBlock
  EncryptionDict2645_50: {
    DDL::Integer r0 = DDL::Integer("5");
    DDL::Bool r1 = DDL::Bool{EncryptionDict2645_50_ra0o == r0};
    r0.free();
    if (r1.getValue()) {
      EncryptionDict2645_48_ra6o = EncryptionDict2645_50_ra6o;
      EncryptionDict2645_48_ra0o = EncryptionDict2645_50_ra5o;
      EncryptionDict2645_48_ra1o = EncryptionDict2645_50_ra1o;
      EncryptionDict2645_48_ra2o = EncryptionDict2645_50_ra0o;
      EncryptionDict2645_48_ra3o = EncryptionDict2645_50_ra2o;
      EncryptionDict2645_48_ra4o = EncryptionDict2645_50_ra3o;
      EncryptionDict2645_48_ra5o = EncryptionDict2645_50_ra4o;
      goto EncryptionDict2645_48;
    } else {
      EncryptionDict2645_49_ra6o = EncryptionDict2645_50_ra6o;
      EncryptionDict2645_49_ra0o = EncryptionDict2645_50_ra1o;
      EncryptionDict2645_49_ra1o = EncryptionDict2645_50_ra0o;
      EncryptionDict2645_49_ra2o = EncryptionDict2645_50_ra2o;
      EncryptionDict2645_49_ra3o = EncryptionDict2645_50_ra3o;
      EncryptionDict2645_49_ra4o = EncryptionDict2645_50_ra4o;
      EncryptionDict2645_49_ra5o = EncryptionDict2645_50_ra5o;
      goto EncryptionDict2645_49;
    }
  }
  // NormalBlock
  EncryptionDict2645_51: {
    if (EncryptionDict2645_51_ra0u.getValue()) {
      EncryptionDict2645_46_ra6o = EncryptionDict2645_51_ra7o;
      EncryptionDict2645_46_ra0o = EncryptionDict2645_51_ra2o;
      EncryptionDict2645_46_ra1o = EncryptionDict2645_51_ra1o;
      EncryptionDict2645_46_ra2o = EncryptionDict2645_51_ra3o;
      EncryptionDict2645_46_ra3o = EncryptionDict2645_51_ra4o;
      EncryptionDict2645_46_ra4o = EncryptionDict2645_51_ra5o;
      EncryptionDict2645_46_ra5o = EncryptionDict2645_51_ra6o;
      goto EncryptionDict2645_46;
    } else {
      EncryptionDict2645_50_ra6o = EncryptionDict2645_51_ra7o;
      EncryptionDict2645_50_ra0o = EncryptionDict2645_51_ra1o;
      EncryptionDict2645_50_ra1o = EncryptionDict2645_51_ra2o;
      EncryptionDict2645_50_ra2o = EncryptionDict2645_51_ra3o;
      EncryptionDict2645_50_ra3o = EncryptionDict2645_51_ra4o;
      EncryptionDict2645_50_ra4o = EncryptionDict2645_51_ra5o;
      EncryptionDict2645_50_ra5o = EncryptionDict2645_51_ra6o;
      goto EncryptionDict2645_50;
    }
  }
  // NormalBlock
  EncryptionDict2645_52: {
    EncryptionDict2645_51_ra7o = EncryptionDict2645_52_ra6o;
    EncryptionDict2645_51_ra0u = DDL::Bool(true);
    EncryptionDict2645_51_ra1o = EncryptionDict2645_52_ra0o;
    EncryptionDict2645_51_ra2o = EncryptionDict2645_52_ra1o;
    EncryptionDict2645_51_ra3o = EncryptionDict2645_52_ra2o;
    EncryptionDict2645_51_ra4o = EncryptionDict2645_52_ra3o;
    EncryptionDict2645_51_ra5o = EncryptionDict2645_52_ra4o;
    EncryptionDict2645_51_ra6o = EncryptionDict2645_52_ra5o;
    goto EncryptionDict2645_51;
  }
  // NormalBlock
  EncryptionDict2645_53: {
    EncryptionDict2645_51_ra7o = EncryptionDict2645_53_ra7o;
    EncryptionDict2645_51_ra0u = EncryptionDict2645_53_ra0u;
    EncryptionDict2645_51_ra1o = EncryptionDict2645_53_ra1o;
    EncryptionDict2645_51_ra2o = EncryptionDict2645_53_ra2o;
    EncryptionDict2645_51_ra3o = EncryptionDict2645_53_ra3o;
    EncryptionDict2645_51_ra4o = EncryptionDict2645_53_ra4o;
    EncryptionDict2645_51_ra5o = EncryptionDict2645_53_ra5o;
    EncryptionDict2645_51_ra6o = EncryptionDict2645_53_ra6o;
    goto EncryptionDict2645_51;
  }
  // NormalBlock
  EncryptionDict2645_54: {
    DDL::Integer r0 = DDL::Integer("4");
    DDL::Bool r1 = DDL::Bool{EncryptionDict2645_54_ra0o == r0};
    r0.free();
    EncryptionDict2645_53_ra7o = EncryptionDict2645_54_ra6o;
    EncryptionDict2645_53_ra0u = r1;
    EncryptionDict2645_53_ra1o = EncryptionDict2645_54_ra1o;
    EncryptionDict2645_53_ra2o = EncryptionDict2645_54_ra2o;
    EncryptionDict2645_53_ra3o = EncryptionDict2645_54_ra3o;
    EncryptionDict2645_53_ra4o = EncryptionDict2645_54_ra4o;
    EncryptionDict2645_53_ra5o = EncryptionDict2645_54_ra5o;
    EncryptionDict2645_53_ra6o = EncryptionDict2645_54_ra0o;
    goto EncryptionDict2645_53;
  }
  // NormalBlock
  EncryptionDict2645_55: {
    EncryptionDict2645_53_ra7o = EncryptionDict2645_55_ra6o;
    EncryptionDict2645_53_ra0u = DDL::Bool(false);
    EncryptionDict2645_53_ra1o = EncryptionDict2645_55_ra0o;
    EncryptionDict2645_53_ra2o = EncryptionDict2645_55_ra1o;
    EncryptionDict2645_53_ra3o = EncryptionDict2645_55_ra2o;
    EncryptionDict2645_53_ra4o = EncryptionDict2645_55_ra3o;
    EncryptionDict2645_53_ra5o = EncryptionDict2645_55_ra4o;
    EncryptionDict2645_53_ra6o = EncryptionDict2645_55_ra5o;
    goto EncryptionDict2645_53;
  }
  // NormalBlock
  EncryptionDict2645_56: {
    DDL::Integer r0 = DDL::Integer("4");
    DDL::Bool r1 = DDL::Bool{EncryptionDict2645_56_ra0o == r0};
    r0.free();
    if (r1.getValue()) {
      EncryptionDict2645_54_ra6o = EncryptionDict2645_56_ra6o;
      EncryptionDict2645_54_ra0o = EncryptionDict2645_56_ra5o;
      EncryptionDict2645_54_ra1o = EncryptionDict2645_56_ra0o;
      EncryptionDict2645_54_ra2o = EncryptionDict2645_56_ra1o;
      EncryptionDict2645_54_ra3o = EncryptionDict2645_56_ra2o;
      EncryptionDict2645_54_ra4o = EncryptionDict2645_56_ra3o;
      EncryptionDict2645_54_ra5o = EncryptionDict2645_56_ra4o;
      goto EncryptionDict2645_54;
    } else {
      EncryptionDict2645_55_ra6o = EncryptionDict2645_56_ra6o;
      EncryptionDict2645_55_ra0o = EncryptionDict2645_56_ra0o;
      EncryptionDict2645_55_ra1o = EncryptionDict2645_56_ra1o;
      EncryptionDict2645_55_ra2o = EncryptionDict2645_56_ra2o;
      EncryptionDict2645_55_ra3o = EncryptionDict2645_56_ra3o;
      EncryptionDict2645_55_ra4o = EncryptionDict2645_56_ra4o;
      EncryptionDict2645_55_ra5o = EncryptionDict2645_56_ra5o;
      goto EncryptionDict2645_55;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  EncryptionDict2645_57: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  EncryptionDict2645_58: {
    DDL::Integer r0 = DDL::Integer("3");
    DDL::Bool r1 = DDL::Bool{EncryptionDict2645_58_ra0o == r0};
    r0.free();
    if (r1.getValue()) {
      EncryptionDict2645_52_ra6o = EncryptionDict2645_58_ra1o;
      EncryptionDict2645_52_ra0o = EncryptionDict2645_58_ra2o;
      EncryptionDict2645_52_ra1o = EncryptionDict2645_58_ra3o;
      EncryptionDict2645_52_ra2o = EncryptionDict2645_58_ra4o;
      EncryptionDict2645_52_ra3o = EncryptionDict2645_58_ra5o;
      EncryptionDict2645_52_ra4o = EncryptionDict2645_58_ra6o;
      EncryptionDict2645_52_ra5o = EncryptionDict2645_58_ra0o;
      goto EncryptionDict2645_52;
    } else {
      EncryptionDict2645_56_ra6o = EncryptionDict2645_58_ra1o;
      EncryptionDict2645_56_ra0o = EncryptionDict2645_58_ra2o;
      EncryptionDict2645_56_ra1o = EncryptionDict2645_58_ra3o;
      EncryptionDict2645_56_ra2o = EncryptionDict2645_58_ra4o;
      EncryptionDict2645_56_ra3o = EncryptionDict2645_58_ra5o;
      EncryptionDict2645_56_ra4o = EncryptionDict2645_58_ra6o;
      EncryptionDict2645_56_ra5o = EncryptionDict2645_58_ra0o;
      goto EncryptionDict2645_56;
    }
  }
  // ReturnBlock (RetNo NoCapture)
  EncryptionDict2645_59: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  EncryptionDict2645_60: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(82UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:19:10--19:28:LookupNat",
                false);
    EncryptionDict2645_60_ra2o.copy();
    if (parser_LookupNat(p, &EncryptionDict2645_58_ra0o,
                         &EncryptionDict2645_58_ra1o, EncryptionDict2645_60_ra1o, r0,
                         EncryptionDict2645_60_ra2o)) {
      EncryptionDict2645_58_ra2o = EncryptionDict2645_60_ra0o;
      EncryptionDict2645_58_ra3o = EncryptionDict2645_60_ra2o;
      EncryptionDict2645_58_ra4o = EncryptionDict2645_60_ra3o;
      EncryptionDict2645_58_ra5o = EncryptionDict2645_60_ra4o;
      EncryptionDict2645_58_ra6o = EncryptionDict2645_60_ra5o;
      goto EncryptionDict2645_58;
    } else {
      EncryptionDict2645_60_ra0o.free();
      EncryptionDict2645_60_ra2o.free();
      EncryptionDict2645_60_ra3o.free();
      EncryptionDict2645_60_ra4o.free();
      EncryptionDict2645_60_ra5o.free();
      goto EncryptionDict2645_57;
    }
  }
  // NormalBlock
  EncryptionDict2645_61: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(86UL)};
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:16:10--16:28:LookupNat",
                false);
    EncryptionDict2645_61_ra1o.copy();
    if (parser_LookupNat(p, &EncryptionDict2645_60_ra0o,
                         &EncryptionDict2645_60_ra1o, EncryptionDict2645_61_ra4o, r0,
                         EncryptionDict2645_61_ra1o)) {
      EncryptionDict2645_60_ra2o = EncryptionDict2645_61_ra1o;
      EncryptionDict2645_60_ra3o = EncryptionDict2645_61_ra2o;
      EncryptionDict2645_60_ra4o = EncryptionDict2645_61_ra3o;
      EncryptionDict2645_60_ra5o = EncryptionDict2645_61_ra0o;
      goto EncryptionDict2645_60;
    } else {
      EncryptionDict2645_61_ra1o.free();
      EncryptionDict2645_61_ra2o.free();
      EncryptionDict2645_61_ra3o.free();
      EncryptionDict2645_61_ra0o.free();
      goto EncryptionDict2645_59;
    }
  }
  // NormalBlock
  EncryptionDict2645_62: {
    EncryptionDict2645_61_ra0o = (DDL::Maybe<DDL::Array<DDL::UInt<8>>>());
    EncryptionDict2645_61_ra4o = EncryptionDict2645_62_ra0o;
    EncryptionDict2645_61_ra1o = EncryptionDict2645_62_ra1o;
    EncryptionDict2645_61_ra2o = EncryptionDict2645_62_ra2o;
    EncryptionDict2645_61_ra3o = EncryptionDict2645_62_ra3o;
    goto EncryptionDict2645_61;
  }
  // NormalBlock
  EncryptionDict2645_66: {
    DDL::Array<DDL::UInt<8>> r0 = EncryptionDict2645_66_ra0o.get_name();
    EncryptionDict2645_66_ra0o.free();
    DDL::Maybe<DDL::Array<DDL::UInt<8>>> r1 = DDL::Maybe<DDL::Array<DDL::UInt<8>>>(r0);
    EncryptionDict2645_61_ra0o = r1;
    EncryptionDict2645_61_ra4o = EncryptionDict2645_66_ra4o;
    EncryptionDict2645_61_ra1o = EncryptionDict2645_66_ra1o;
    EncryptionDict2645_61_ra2o = EncryptionDict2645_66_ra2o;
    EncryptionDict2645_61_ra3o = EncryptionDict2645_66_ra3o;
    goto EncryptionDict2645_61;
  }
  // NormalBlock
  EncryptionDict2645_67: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:14:29--14:61",
               EncryptionDict2645_67_ra0o, r0);
    EncryptionDict2645_67_ra0o.free();
    r0.free();
    EncryptionDict2645_62_ra0o = EncryptionDict2645_67_ra1o;
    EncryptionDict2645_62_ra1o = EncryptionDict2645_67_ra2o;
    EncryptionDict2645_62_ra2o = EncryptionDict2645_67_ra3o;
    EncryptionDict2645_62_ra3o = EncryptionDict2645_67_ra4o;
    goto EncryptionDict2645_62;
  }
  // NormalBlock
  EncryptionDict2645_70: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:14:29--14:52",
               EncryptionDict2645_70_ra0o, r0);
    EncryptionDict2645_70_ra0o.free();
    r0.free();
    EncryptionDict2645_62_ra0o = EncryptionDict2645_70_ra1o;
    EncryptionDict2645_62_ra1o = EncryptionDict2645_70_ra2o;
    EncryptionDict2645_62_ra2o = EncryptionDict2645_70_ra3o;
    EncryptionDict2645_62_ra3o = EncryptionDict2645_70_ra4o;
    goto EncryptionDict2645_62;
  }
  // NormalBlock
  EncryptionDict2645_71: {
    User::Value r0 = EncryptionDict2645_71_ra0o.getValue();
    EncryptionDict2645_71_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::name:
        EncryptionDict2645_71_ra4o.free();
        EncryptionDict2645_66_ra4o = EncryptionDict2645_71_ra5o;
        EncryptionDict2645_66_ra0o = r0;
        EncryptionDict2645_66_ra1o = EncryptionDict2645_71_ra1o;
        EncryptionDict2645_66_ra2o = EncryptionDict2645_71_ra2o;
        EncryptionDict2645_66_ra3o = EncryptionDict2645_71_ra3o;
        goto EncryptionDict2645_66;
      default:
        r0.free();
        EncryptionDict2645_67_ra0o = EncryptionDict2645_71_ra5o;
        EncryptionDict2645_67_ra1o = EncryptionDict2645_71_ra4o;
        EncryptionDict2645_67_ra2o = EncryptionDict2645_71_ra1o;
        EncryptionDict2645_67_ra3o = EncryptionDict2645_71_ra2o;
        EncryptionDict2645_67_ra4o = EncryptionDict2645_71_ra3o;
        goto EncryptionDict2645_67;
    }
  }
  // NormalBlock
  EncryptionDict2645_73: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(83UL),
                                                           DDL::UInt<8>(117UL), DDL::UInt<8>(98UL),
                                                           DDL::UInt<8>(70UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL)};
    DDL::Maybe<User::Value> r1 = EncryptionDict2645_73_ra0o.lookup(r0);
    r0.free();
    EncryptionDict2645_73_ra3o.copy();
    EncryptionDict2645_73_ra3o.copy();
    if (r1.isJust()) {
      EncryptionDict2645_73_ra3o.free();
      EncryptionDict2645_71_ra5o = EncryptionDict2645_73_ra3o;
      EncryptionDict2645_71_ra0o = r1;
      EncryptionDict2645_71_ra1o = EncryptionDict2645_73_ra0o;
      EncryptionDict2645_71_ra2o = EncryptionDict2645_73_ra1o;
      EncryptionDict2645_71_ra3o = EncryptionDict2645_73_ra2o;
      EncryptionDict2645_71_ra4o = EncryptionDict2645_73_ra3o;
      goto EncryptionDict2645_71;
    } else {
      r1.free();
      EncryptionDict2645_73_ra3o.free();
      EncryptionDict2645_70_ra0o = EncryptionDict2645_73_ra3o;
      EncryptionDict2645_70_ra1o = EncryptionDict2645_73_ra3o;
      EncryptionDict2645_70_ra2o = EncryptionDict2645_73_ra0o;
      EncryptionDict2645_70_ra3o = EncryptionDict2645_73_ra1o;
      EncryptionDict2645_70_ra4o = EncryptionDict2645_73_ra2o;
      goto EncryptionDict2645_70;
    }
  }
  // NormalBlock
  EncryptionDict2645_74: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:12:3--12:33",
               EncryptionDict2645_74_ra0o, r0);
    EncryptionDict2645_74_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EncryptionDict2645_76: {
    DDL::Array<DDL::UInt<8>> r0 = EncryptionDict2645_76_ra0o.get_name();
    EncryptionDict2645_76_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(83UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(97UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(100UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(100UL)};
    DDL::Bool r2 = DDL::Bool{r0 == r1};
    r1.free();
    if (r2.getValue()) {
      EncryptionDict2645_73_ra3o = EncryptionDict2645_76_ra3o;
      EncryptionDict2645_73_ra0o = EncryptionDict2645_76_ra1o;
      EncryptionDict2645_73_ra1o = EncryptionDict2645_76_ra2o;
      EncryptionDict2645_73_ra2o = r0;
      goto EncryptionDict2645_73;
    } else {
      EncryptionDict2645_76_ra1o.free();
      EncryptionDict2645_76_ra2o.free();
      r0.free();
      EncryptionDict2645_74_ra0o = EncryptionDict2645_76_ra3o;
      goto EncryptionDict2645_74;
    }
  }
  // NormalBlock
  EncryptionDict2645_77: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:11:16--11:45",
               EncryptionDict2645_77_ra0o, r0);
    EncryptionDict2645_77_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EncryptionDict2645_79: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(120UL), DDL::UInt<8>(112UL),
                                                           DDL::UInt<8>(101UL), DDL::UInt<8>(99UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(100UL), DDL::UInt<8>(32UL),
                                                           DDL::UInt<8>(96UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(111UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(104UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(110UL), DDL::UInt<8>(103UL),
                                                           DDL::UInt<8>(96UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:11:16--11:36",
               EncryptionDict2645_79_ra0o, r0);
    EncryptionDict2645_79_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // NormalBlock
  EncryptionDict2645_80: {
    User::Value r0 = EncryptionDict2645_80_ra0o.getValue();
    EncryptionDict2645_80_ra0o.free();
    switch (r0.getTag()) {
      case DDL::Tag::Value::name:
        EncryptionDict2645_76_ra3o = EncryptionDict2645_80_ra3o;
        EncryptionDict2645_76_ra0o = r0;
        EncryptionDict2645_76_ra1o = EncryptionDict2645_80_ra1o;
        EncryptionDict2645_76_ra2o = EncryptionDict2645_80_ra2o;
        goto EncryptionDict2645_76;
      default:
        EncryptionDict2645_80_ra1o.free();
        EncryptionDict2645_80_ra2o.free();
        r0.free();
        EncryptionDict2645_77_ra0o = EncryptionDict2645_80_ra3o;
        goto EncryptionDict2645_77;
    }
  }
  // NormalBlock
  EncryptionDict2645_82: {
    DDL::Map<DDL::Array<DDL::UInt<8>>,
             User::Value> r0 = EncryptionDict2645_82_ra0o.get_dict();
    EncryptionDict2645_82_ra0o.free();
    DDL::Array<DDL::UInt<8>> r1 = EncryptionDict2645_82_ra1o.get_id0();
    EncryptionDict2645_82_ra1o.free();
    DDL::Array<DDL::UInt<8>> r2 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(70UL),
                                                           DDL::UInt<8>(105UL), DDL::UInt<8>(108UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL)};
    DDL::Maybe<User::Value> r3 = r0.lookup(r2);
    r2.free();
    if (r3.isJust()) {
      EncryptionDict2645_80_ra3o = EncryptionDict2645_82_ra2o;
      EncryptionDict2645_80_ra0o = r3;
      EncryptionDict2645_80_ra1o = r0;
      EncryptionDict2645_80_ra2o = r1;
      goto EncryptionDict2645_80;
    } else {
      r0.free();
      r1.free();
      r3.free();
      EncryptionDict2645_79_ra0o = EncryptionDict2645_82_ra2o;
      goto EncryptionDict2645_79;
    }
  }
  // NormalBlock
  EncryptionDict2645_83: {
    DDL::Array<DDL::UInt<8>> r0 = DDL::Array<DDL::UInt<8>>{DDL::UInt<8>(80UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(116UL), DDL::UInt<8>(101UL),
                                                           DDL::UInt<8>(114UL), DDL::UInt<8>(110UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(109UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(116UL),
                                                           DDL::UInt<8>(99UL), DDL::UInt<8>(104UL),
                                                           DDL::UInt<8>(32UL), DDL::UInt<8>(102UL),
                                                           DDL::UInt<8>(97UL), DDL::UInt<8>(105UL),
                                                           DDL::UInt<8>(108UL), DDL::UInt<8>(117UL),
                                                           DDL::UInt<8>(114UL),
                                                           DDL::UInt<8>(101UL)};
    p.noteFail(true,
               "/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:8:13--8:43",
               EncryptionDict2645_83_ra0o, r0);
    EncryptionDict2645_83_ra0o.free();
    r0.free();
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetNo NoCapture)
  EncryptionDict2645_84: {
    p.popDebug();
    return false;
  }
  // ReturnBlock (RetYes NoCapture)
  EncryptionDict2645_85: {
    switch (EncryptionDict2645_85_ra0o.getTag()) {
      case DDL::Tag::Value::dict:
        EncryptionDict2645_82_ra2o = EncryptionDict2645_85_ra1o;
        EncryptionDict2645_82_ra0o = EncryptionDict2645_85_ra0o;
        EncryptionDict2645_82_ra1o = EncryptionDict2645_85_ra2o;
        goto EncryptionDict2645_82;
      default:
        EncryptionDict2645_85_ra0o.free();
        EncryptionDict2645_85_ra2o.free();
        EncryptionDict2645_83_ra0o = EncryptionDict2645_85_ra1o;
        goto EncryptionDict2645_83;
    }
  }
  // NormalBlock
  EncryptionDict2645_86: {
    User::Ref r0 = EncryptionDict2645_86_ra1o.get_eref();
    p.pushDebug("/home/diatchki/src/daedalus/formats/pdf/new/c++/pdfcos/../../spec/PdfCrypto.ddl:8:13--8:34:ResolveValRef",
                false);
    if (parser_ResolveValRef(p, &EncryptionDict2645_85_ra0o,
                             &EncryptionDict2645_85_ra1o, EncryptionDict2645_86_ra0o, r0)) {
      EncryptionDict2645_85_ra2o = EncryptionDict2645_86_ra1o;
      goto EncryptionDict2645_85;
    } else {
      EncryptionDict2645_86_ra1o.free();
      goto EncryptionDict2645_84;
    }
  }
}