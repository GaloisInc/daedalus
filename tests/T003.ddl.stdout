module T003
 
--- Imports:
 
--- Type defs:
rec
  type T003.List0 = { head: uint 8
                    ; tail: T003.List
                    }
   
  type T003.List = Choose { node: T003.List0
                          ; nil: {}
                          }
 
--- Rules:
 
rec value
  T003.List : Grammar T003.List =
    Choose biased
      { {- node -} do (_3 : T003.List0) <- do (head : uint 8) <- Match UInt8
                                              (tail : T003.List) <- T003.List
                                              pure {head = head,
                                                    tail = tail}
                      pure {node: _3}
      | {- nil -} do (_4 : {}) <- pure {}
                     pure {nil: _4}
      }
 
T003.List_ : Grammar {} =
  Choose biased
    { {- node -} do @Match UInt8
                    T003.List
                    pure {}
    | {- nil -} pure {}
    }
