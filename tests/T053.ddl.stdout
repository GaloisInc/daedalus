[WARNING] ./T053.ddl:23:23--26:15:
            Using unbiased choice may be inefficient.
[WARNING] ./T053.ddl:12:18--12:34:
            Using unbiased choice may be inefficient.
[WARNING] ./T053.ddl:8:18--8:31:
            Using unbiased choice may be inefficient.
[WARNING] ./T053.ddl:7:18--7:30:
            Using unbiased choice may be inefficient.
module T053
 
--- Imports:
 
--- Type defs:
type T053.Main = { ex1: Maybe int
                 ; ex2: Maybe int
                 ; ex3: Maybe int
                 ; ex4: Maybe int
                 ; ex5: Maybe int
                 ; ex6: Maybe int
                 ; ex7: Maybe int
                 ; ex8: Maybe {}
                 }
 
--- Rules:
 
T053.Ok (x : int) : Grammar int =
  pure x
 
T053.PFail : Grammar int =
  Fail "Erro"
 
T053.Throw : Grammar int =
  Commit
    do ($$ : int) <- T053.PFail
       pure $$
 
T053.Check ?a0 (P : Grammar ?a0) : Grammar (Maybe ?a0) =
  Optional (Try P)
 
T053._Ok : Grammar {} =
  pure {}
 
T053._PFail : Grammar {} =
  Fail "Erro"
 
T053.Main : Grammar T053.Main =
  do (ex1 : Maybe int) <- T053.Check int Choose biased
                                           { T053.Throw
                                           | T053.Ok 1
                                           }
     (ex2 : Maybe int) <- T053.Check int Choose biased
                                           { T053.Ok 1
                                           | T053.Throw
                                           }
     (ex3 : Maybe int) <- T053.Check int Choose fair
                                           { T053.Throw
                                           | T053.Ok 1
                                           }
     (ex4 : Maybe int) <- T053.Check int Choose fair
                                           { T053.Ok 1
                                           | T053.Throw
                                           }
     (ex5 : Maybe int) <- T053.Check int Choose biased
                                           { Try T053.Throw
                                           | T053.Ok 1
                                           }
     (ex6 : Maybe int) <- T053.Check int Choose fair
                                           { Try T053.Throw
                                           | T053.Ok 1
                                           }
     (ex7 : Maybe int) <- T053.Check int Choose biased
                                           { do T053._Ok
                                                Commit
                                                  do T053._PFail
                                                     ($$ : int) <- T053.Ok 2
                                                     pure $$
                                           | T053.Ok 3
                                           }
     (ex8 : Maybe {}) <- T053.Check {} do (x : int) <- Choose fair
                                                         { Commit
                                                             do ($$ : int) <- T053.Ok 1
                                                                pure $$
                                                         | T053.Ok 2
                                                         }
                                          ($$ : {}) <- case x == 2 is
                                                         { true -> pure {}
                                                         }
                                          pure $$
     pure {ex1 = ex1,
           ex2 = ex2,
           ex3 = ex3,
           ex4 = ex4,
           ex5 = ex5,
           ex6 = ex6,
           ex7 = ex7,
           ex8 = ex8}
 
T053._Throw : Grammar {} =
  Commit T053._PFail
 
T053._Check ?a0 (_P : Grammar {}) : Grammar {} =
  Choose biased
    { Try _P
    | pure {}
    }
 
T053._Main : Grammar {} =
  do T053._Check int Choose biased
                       { T053._Throw
                       | T053._Ok
                       }
     T053._Check int Choose biased
                       { T053._Ok
                       | T053._Throw
                       }
     T053._Check int Choose fair
                       { T053._Throw
                       | T053._Ok
                       }
     T053._Check int Choose fair
                       { T053._Ok
                       | T053._Throw
                       }
     T053._Check int Choose biased
                       { Try T053._Throw
                       | T053._Ok
                       }
     T053._Check int Choose fair
                       { Try T053._Throw
                       | T053._Ok
                       }
     T053._Check int Choose biased
                       { do T053._Ok
                            Commit
                              do T053._PFail
                                 T053._Ok
                       | T053._Ok
                       }
     T053._Check {} do (x : int) <- Choose fair
                                      { Commit
                                          do ($$ : int) <- T053.Ok 1
                                             pure $$
                                      | T053.Ok 2
                                      }
                       case x == 2 is
                         { true -> pure {}
                         }
