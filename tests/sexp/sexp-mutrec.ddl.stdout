module sexp-mutrec
 
--- Imports:
 
--- Type defs:
rec
  type sexp-mutrec.Sexp = Choose { symbol: [uint 8]
                                 ; sexp: [sexp-mutrec.Sexp]
                                 }
 
--- Rules:
 
sexp-mutrec.lf : uint 8 =
  '\n'
 
sexp-mutrec.cr : uint 8 =
  '\r'
 
sexp-mutrec.WS : Grammar {} =
  @Match ((((({'\NUL'} | {'\t'}) | {'\f'}) | {' '}) | {'\n'}) |
          {'\r'})
 
sexp-mutrec._WS : Grammar {} =
  @Match ((((({'\NUL'} | {'\t'}) | {'\f'}) | {' '}) | {'\n'}) |
          {'\r'})
 
sexp-mutrec.Token ?a0 (P : Grammar ?a0) : Grammar ?a0 =
  do ($$ : ?a0) <- P
     @Many[] sexp-mutrec._WS
     pure $$
 
sexp-mutrec._Token ?a0 (_P : Grammar {}) : Grammar {} =
  do _P
     @Many[] sexp-mutrec._WS
 
sexp-mutrec.KW ?a0 (P : Grammar ?a0) : Grammar {} =
  sexp-mutrec._Token ?a0 do P
                            pure {}
 
sexp-mutrec._KW ?a0 (_P : Grammar {}) : Grammar {} =
  sexp-mutrec._Token ?a0 _P
 
rec value
  sexp-mutrec.Sexp : Grammar sexp-mutrec.Sexp =
    Choose fair
      { {- sexp -} do (_13 : [sexp-mutrec.Sexp]) <- do sexp-mutrec._KW [uint 8] (@MatchBytes "(")
                                                       ($$ : [sexp-mutrec.Sexp]) <- sexp-mutrec.ManySexp
                                                       sexp-mutrec._KW [uint 8] (@MatchBytes ")")
                                                       pure $$
                      pure {sexp: _13}
      | {- symbol -} do (_14 : [uint 8]) <- sexp-mutrec.Token [uint 8] (Many[ 1 .. ] Match ('a' .. 'z'))
                        pure {symbol: _14}
      }
   
  sexp-mutrec.ManySexp : Grammar [sexp-mutrec.Sexp] =
    Many[] sexp-mutrec.Sexp
 
sexp-mutrec.Main : Grammar sexp-mutrec.Sexp =
  do @Many[] sexp-mutrec._WS
     ($$ : sexp-mutrec.Sexp) <- sexp-mutrec.Sexp
     pure $$
 
sexp-mutrec._Sexp : Grammar {} =
  Choose fair
    { {- sexp -} do sexp-mutrec._KW [uint 8] (@MatchBytes "(")
                    do sexp-mutrec.ManySexp
                       pure {}
                    sexp-mutrec._KW [uint 8] (@MatchBytes ")")
    | {- symbol -} sexp-mutrec._Token [uint 8] (@Many[ 1 .. ] @Match ('a' .. 'z'))
    }
 
sexp-mutrec._ManySexp : Grammar {} =
  @Many[] sexp-mutrec._Sexp
 
sexp-mutrec._Main : Grammar {} =
  do @Many[] sexp-mutrec._WS
     sexp-mutrec._Sexp
