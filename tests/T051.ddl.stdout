module T051
 
--- Imports:
 
--- Type defs:
type T051.Main0 = { k: uint 64
                  ; x: int
                  }
 
type T051.Main1 = { k: uint 64
                  ; x: int
                  }
 
type T051.Main2 = { k: uint 64
                  ; x: int
                  }
 
type T051.Main3 = { k: uint 64
                  ; x: int
                  }
 
type T051.Main = { a: [int]
                 ; b: [T051.Main0]
                 ; c: [int]
                 ; d: [T051.Main1]
                 ; m: Map (uint 64) int
                 ; e: [int]
                 ; f: [T051.Main2]
                 ; g: [int]
                 ; h: [T051.Main3]
                 }
 
--- Rules:
 
T051.xs : [int] =
  [7,
   8,
   9]
 
T051.Mp : Grammar (Map (uint 64) int) =
  for ((s : Map (uint 64) int) = empty; (k : uint 64), (x : int) in T051.xs)
    (Insert k x s)
 
T051.Main : Grammar T051.Main =
  do (a : [int]) <- pure (map ((x : int) in T051.xs)
                            (x + 1))
     (b : [T051.Main0]) <- pure (map ((k : uint 64), (x : int) in T051.xs)
                                   {k = k,
                                    x = x + 1})
     (c : [int]) <- map ((x : int) in T051.xs)
                      (pure (x + 1))
     (d : [T051.Main1]) <- map ((k : uint 64), (x : int) in T051.xs)
                             (pure {k = k,
                                    x = x + 1})
     (m : Map (uint 64) int) <- T051.Mp
     (e : [int]) <- pure (map ((x : int) in m)
                            (x + 1))
     (f : [T051.Main2]) <- pure (map ((k : uint 64), (x : int) in m)
                                   {k = k,
                                    x = x + 1})
     (g : [int]) <- map ((x : int) in m)
                      (pure (x + 1))
     (h : [T051.Main3]) <- map ((k : uint 64), (x : int) in m)
                             (pure {k = k,
                                    x = x + 1})
     pure {a = a,
           b = b,
           c = c,
           d = d,
           m = m,
           e = e,
           f = f,
           g = g,
           h = h}
 
T051._Mp : Grammar (Map (uint 64) int) =
  for ((s : Map (uint 64) int) = empty; (k : uint 64), (x : int) in T051.xs)
    (Insert k x s)
 
T051._Main : Grammar {} =
  do map ((x : int) in T051.xs)
       (pure (x + 1))
     map ((k : uint 64), (x : int) in T051.xs)
       (pure {k = k,
              x = x + 1})
     (m : Map (uint 64) int) <- T051.Mp
     map ((x : int) in m)
       (pure (x + 1))
     map ((k : uint 64), (x : int) in m)
       (pure {k = k,
              x = x + 1})
     pure {}
