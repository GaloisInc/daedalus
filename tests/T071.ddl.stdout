module T071
 
--- Imports:
 
--- Type defs:
{- bitdata
00
-}
type T071.B_A = [ 0 [2]
                ]
 
{- bitdata
01
-}
type T071.B_B = [ 1 [2]
                ]
 
{- bitdata
0_
-}
type T071.B = Choose { A: T071.B_A -- 00
                     ; B: T071.B_B -- 01
                     }
 
{- bitdata
0_______
-}
type T071.C_X = [ tag : T071.B
                | val : uint 6
                ]
 
{- bitdata
1_______
-}
type T071.C_Y = [ 1 [1]
                | val : uint 7
                ]
 
{- bitdata
________
-}
type T071.C = Choose { X: T071.C_X -- 0_______
                     ; Y: T071.C_Y -- 1_______
                     }
 
type T071.Main = { x: T071.C
                 ; y: T071.B
                 }
 
--- Rules:
 
T071.Main : Grammar T071.Main =
  do (x : T071.C) <- pure (0 as T071.C)
     (y : T071.B) <- 0 AS T071.B
     pure {x = x,
           y = y}
 
T071.Main_9 : Grammar {} =
  @(0 AS T071.B)
