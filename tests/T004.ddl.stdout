module T004
 
--- Imports:
 
--- Type defs:
rec
  type T004.Repeat0 ?a4 = { head: ?a4
                          ; tail: T004.Repeat ?a4
                          }
   
  type T004.Repeat ?a4 = Choose { cons: T004.Repeat0 ?a4
                                ; nil: {}
                                }
 
--- Rules:
 
rec value
  T004.Repeat ?a4 (P : Grammar ?a4) : Grammar (T004.Repeat ?a4) =
    Choose fair
      { {- cons -} do (_0 : T004.Repeat0 ?a4) <- do (head : ?a4) <- P
                                                    (tail : T004.Repeat ?a4) <- T004.Repeat ?a4 P
                                                    pure {head = head,
                                                          tail = tail}
                      pure {cons: _0}
      | {- nil -} do (_1 : {}) <- pure {}
                     pure {nil: _1}
      }
 
T004._Repeat ?a4 (P : Grammar ?a4) (_P : Grammar {}) : Grammar {} =
  Choose fair
    { {- cons -} do _P
                    T004.Repeat ?a4 P
                    pure {}
    | {- nil -} pure {}
    }
