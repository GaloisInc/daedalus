module T009
 
--- Imports:
 
--- Type defs:
type T009.P = { x: uint 8
              ; y: uint 8
              }
 
type T009.R = Choose { b: {}
                     ; a: uint 8
                     }
 
--- Rules:
 
T009.P : Grammar T009.P =
  do (x : uint 8) <- Match UInt8
     (y : uint 8) <- Match UInt8
     pure {x = x,
           y = y}
 
T009.Q : Grammar (uint 8) =
  do (s : T009.P) <- T009.P
     ($$ : uint 8) <- pure (s.x)
     pure $$
 
T009.R : Grammar T009.R =
  Choose biased
    { {- a -} do (_10 : uint 8) <- Match UInt8
                 pure {a: _10}
    | {- b -} do (_11 : {}) <- pure {}
                 pure {b: _11}
    }
 
T009.S : Grammar (uint 8) =
  do (u : T009.R) <- T009.R
     ($$ : uint 8) <- case u is
                        { {| a = _12 |} -> pure _12
                        }
     pure $$
 
T009.P_13 : Grammar {} =
  do @Match UInt8
     @Match UInt8
 
T009.Q_14 : Grammar {} =
  T009.P_13
 
T009.R_15 : Grammar {} =
  Choose biased
    { {- a -} @Match UInt8
    | {- b -} pure {}
    }
 
T009.S_16 : Grammar {} =
  do (u : T009.R) <- T009.R
     case u is
       { {| a = _12 |} -> pure {}
       }
