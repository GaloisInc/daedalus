module P015
 
--- Imports:
 
--- Type defs:
type P015.Main = { x: uint 8
                 ; y: int
                 }
 
--- Rules:
 
rec value
  P015.mygauss (m : int) : int =
    if (m == 0) then 0 else m + (P015.mygauss (m - 1))
 
P015.myfun (m : int) : int =
  (P015.mygauss m) + 42
 
P015.A : Grammar (uint 8) =
  do ($$ : uint 8) <- Match UInt8
     pure $$
 
P015.Main : Grammar P015.Main =
  do (x : uint 8) <- P015.A
     (y : int) <- pure (P015.myfun (x as int))
     pure {x = x,
           y = y}
 
P015.A_9 : Grammar {} =
  @Match UInt8
 
P015.Main_10 : Grammar {} =
  P015.A_9
