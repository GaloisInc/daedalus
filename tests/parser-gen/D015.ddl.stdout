module D015
 
--- Imports:
 
--- Type defs:
type D015.PPM = { width: int
                ; height: int
                ; maxVal: int
                }
 
--- Rules:
 
D015.WS_27 : Grammar {} =
  @Match ((((({0} | {9}) | {12}) | {32}) | {'\n'}) | {'\r'})
 
D015.Token ?a0 (P : Grammar ?a0) : Grammar ?a0 =
  do ($$ : ?a0) <- P
     @Many[ 1 .. ] D015.WS_27
     pure $$
 
D015.Digit : Grammar (uint 8) =
  do (d : uint 8) <- Match ('0' .. '9')
     ($$ : uint 8) <- pure (d - '0')
     pure $$
 
D015.addDigit ?a0 (Coerce safe ?a0 int) (val : int) (d : ?a0) : int =
  (10 * val) + (d as int)
 
D015.Natural : Grammar int =
  do (ds : [uint 8]) <- Many[ 1 .. ] D015.Digit
     ($$ : int) <- pure (for ((val : int) = 0; (d : uint 8) in ds)
                           (D015.addDigit (uint 8) val d))
     pure $$
 
D015.Natural3 : Grammar int =
  do (ds : [uint 8]) <- Many[ 3 .. ] D015.Digit
     ($$ : int) <- pure (for ((val : int) = 0; (d : uint 8) in ds)
                           (D015.addDigit (uint 8) val d))
     pure $$
 
D015.PPM : Grammar D015.PPM =
  do @MatchBytes "P"
     (version : int) <- D015.Token int D015.Natural
     case version == 3 is
       { true -> pure {}
       }
     (width : int) <- D015.Token int D015.Natural
     (height : int) <- D015.Token int D015.Natural
     (maxVal : int) <- D015.Token int D015.Natural3
     pure {width = width,
           height = height,
           maxVal = maxVal}
 
D015.Main : Grammar D015.PPM =
  do ($$ : D015.PPM) <- D015.PPM
     END
     pure $$
 
D015.WS : Grammar (uint 8) =
  Match ((((({0} | {9}) | {12}) | {32}) | {'\n'}) | {'\r'})
 
D015.Token_28 ?a0 (P : Grammar {}) : Grammar {} =
  do P
     @Many[ 1 .. ] D015.WS_27
 
D015.Digit_31 : Grammar {} =
  @Match ('0' .. '9')
 
D015.Natural_32 : Grammar {} =
  @Many[ 1 .. ] D015.Digit_31
 
D015.Natural3_33 : Grammar {} =
  @Many[ 3 .. ] D015.Digit_31
 
D015.PPM_34 : Grammar {} =
  do @MatchBytes "P"
     (version : int) <- D015.Token int D015.Natural
     case version == 3 is
       { true -> pure {}
       }
     D015.Token_28 int D015.Natural_32
     D015.Token_28 int D015.Natural_32
     D015.Token_28 int D015.Natural3_33
 
D015.Main_36 : Grammar {} =
  do D015.PPM_34
     END
