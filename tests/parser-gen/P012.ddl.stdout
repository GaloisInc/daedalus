module P012
 
--- Imports:
 
--- Type defs:
type P012.Length = { a: uint 8
                   ; b: uint 8
                   ; c: uint 8
                   ; d: uint 8
                   ; e: uint 8
                   ; f: uint 8
                   }
 
type P012.Main = { x: P012.Length
                 ; vor: uint 8
                 ; vand: uint 8
                 ; vxor: uint 8
                 }
 
--- Rules:
 
P012.Length : Grammar P012.Length =
  do (a : uint 8) <- GetByte
     (b : uint 8) <- GetByte
     (c : uint 8) <- GetByte
     (d : uint 8) <- GetByte
     (e : uint 8) <- GetByte
     (f : uint 8) <- GetByte
     pure {a = a,
           b = b,
           c = c,
           d = d,
           e = e,
           f = f}
 
P012.Main : Grammar P012.Main =
  do (x : P012.Length) <- P012.Length
     (vor : uint 8) <- pure ((x.a as uint 8) .|. (x.b as uint 8))
     (vand : uint 8) <- pure ((x.c as uint 8) .&. (x.d as uint 8))
     (vxor : uint 8) <- pure ((x.e as uint 8) .^. (x.f as uint 8))
     pure {x = x,
           vor = vor,
           vand = vand,
           vxor = vxor}
 
P012._Length : Grammar {} =
  do @GetByte
     @GetByte
     @GetByte
     @GetByte
     @GetByte
     @GetByte
 
P012._Main : Grammar {} =
  P012._Length
