module D023
 
--- Imports:
 
--- Type defs:
type D023.Main = { y: Stream
                 }
 
--- Rules:
 
D023.Main : Grammar D023.Main =
  do (x : uint 64) <- do (_3 : uint 8) <- Match UInt8
                         pure (_3 as uint 64)
     (y : Stream) <- CurrentStream
     do (_4 : Stream) <- StreamLen x y
        SetStream _4
     @Many[x] @Match {'a'}
     do (_5 : Stream) <- StreamOff x y
        SetStream _5
     END
     pure {y = y}
 
D023.Main_ : Grammar {} =
  do (x : uint 64) <- do (_3 : uint 8) <- Match UInt8
                         pure (_3 as uint 64)
     (y : Stream) <- CurrentStream
     do (_4 : Stream) <- StreamLen x y
        SetStream _4
     @Many[x] @Match {'a'}
     do (_5 : Stream) <- StreamOff x y
        SetStream _5
     END
