import Stdlib
import Map

import Glyph

def StdEncodings = [
  MapEntry (octalTriple 1 0 1) (Glyph "A")
, MapEntry (octalTriple 3 4 1) (Glyph "AE")
, MapEntry (octalTriple 1 0 2) (Glyph "B")
, MapEntry (octalTriple 1 0 3) (Glyph "C")
, MapEntry (octalTriple 1 0 4) (Glyph "D")
, MapEntry (octalTriple 1 0 5) (Glyph "E")
, MapEntry (octalTriple 1 0 6) (Glyph "F")
, MapEntry (octalTriple 1 0 7) (Glyph "G")
, MapEntry (octalTriple 1 1 0) (Glyph "H")
, MapEntry (octalTriple 1 1 1) (Glyph "I")
, MapEntry (octalTriple 1 1 2) (Glyph "J")
, MapEntry (octalTriple 1 1 3) (Glyph "K")
, MapEntry (octalTriple 1 1 4) (Glyph "L")
, MapEntry (octalTriple 3 5 0) (Glyph "Lslash")
, MapEntry (octalTriple 1 1 5) (Glyph "M")
, MapEntry (octalTriple 1 1 6) (Glyph "N")
, MapEntry (octalTriple 1 1 7) (Glyph "O")
, MapEntry (octalTriple 3 5 2) (Glyph "OE")
, MapEntry (octalTriple 3 5 1) (Glyph "Oslash")
, MapEntry (octalTriple 1 2 0) (Glyph "P")
, MapEntry (octalTriple 1 2 1) (Glyph "Q")
, MapEntry (octalTriple 1 2 2) (Glyph "R")
, MapEntry (octalTriple 1 2 3) (Glyph "S")
, MapEntry (octalTriple 1 2 4) (Glyph "T")
, MapEntry (octalTriple 1 2 5) (Glyph "U")
, MapEntry (octalTriple 1 2 6) (Glyph "V")
, MapEntry (octalTriple 1 2 7) (Glyph "W")
, MapEntry (octalTriple 1 3 0) (Glyph "X")
, MapEntry (octalTriple 1 3 1) (Glyph "Y")
, MapEntry (octalTriple 1 3 2) (Glyph "Z")
, MapEntry (octalTriple 1 4 1) (Glyph "a")
, MapEntry (octalTriple 3 0 2) (Glyph "acute")
, MapEntry (octalTriple 3 6 1) (Glyph "ae")
, MapEntry (octalTriple 0 4 6) (Glyph "ampersand")
, MapEntry (octalTriple 1 3 6) (Glyph "asciicircum")
, MapEntry (octalTriple 1 7 6) (Glyph "asciitilde")
, MapEntry (octalTriple 0 5 2) (Glyph "asterisk")
, MapEntry (octalTriple 1 0 0) (Glyph "at")
, MapEntry (octalTriple 1 4 2) (Glyph "b")
, MapEntry (octalTriple 1 3 4) (Glyph "backslash")
, MapEntry (octalTriple 1 7 4) (Glyph "bar")
, MapEntry (octalTriple 1 7 3) (Glyph "braceleft")
, MapEntry (octalTriple 1 7 5) (Glyph "braceright")
, MapEntry (octalTriple 1 3 3) (Glyph "bracketleft")
, MapEntry (octalTriple 1 3 5) (Glyph "bracketright")
, MapEntry (octalTriple 3 0 6) (Glyph "breve")
, MapEntry (octalTriple 1 4 3) (Glyph "c")
, MapEntry (octalTriple 3 1 7) (Glyph "caron")
, MapEntry (octalTriple 3 1 3) (Glyph "cedilla")
, MapEntry (octalTriple 2 4 2) (Glyph "cent")
, MapEntry (octalTriple 3 0 3) (Glyph "circumflex")
, MapEntry (octalTriple 0 7 2) (Glyph "colon")
, MapEntry (octalTriple 0 5 4) (Glyph "comma")
, MapEntry (octalTriple 2 5 0) (Glyph "currency1")
, MapEntry (octalTriple 1 4 4) (Glyph "d")
, MapEntry (octalTriple 2 6 2) (Glyph "dagger")
, MapEntry (octalTriple 2 6 3) (Glyph "daggerdbl")
, MapEntry (octalTriple 3 1 0) (Glyph "dieresis")
, MapEntry (octalTriple 0 4 4) (Glyph "dollar")
, MapEntry (octalTriple 3 0 7) (Glyph "dotaccent")
, MapEntry (octalTriple 3 6 5) (Glyph "dotlessi")
, MapEntry (octalTriple 1 4 5) (Glyph "e")
, MapEntry (octalTriple 0 7 0) (Glyph "eight")
, MapEntry (octalTriple 2 7 4) (Glyph "ellipsis")
, MapEntry (octalTriple 3 2 0) (Glyph "emdash")
, MapEntry (octalTriple 2 6 1) (Glyph "endash")
, MapEntry (octalTriple 0 7 5) (Glyph "equal")
, MapEntry (octalTriple 0 4 1) (Glyph "exclam")
, MapEntry (octalTriple 2 4 1) (Glyph "exclamdown")
, MapEntry (octalTriple 1 4 6) (Glyph "f")
, MapEntry (octalTriple 2 5 6) (Glyph "fi")
, MapEntry (octalTriple 0 6 5) (Glyph "five")
, MapEntry (octalTriple 2 5 7) (Glyph "fl")
, MapEntry (octalTriple 2 4 6) (Glyph "florin")
, MapEntry (octalTriple 0 6 4) (Glyph "four")
, MapEntry (octalTriple 2 4 4) (Glyph "fraction")
, MapEntry (octalTriple 1 4 7) (Glyph "g")
, MapEntry (octalTriple 3 7 3) (Glyph "germandbls")
, MapEntry (octalTriple 3 0 1) (Glyph "grave")
, MapEntry (octalTriple 0 7 6) (Glyph "greater")
, MapEntry (octalTriple 2 5 4) (Glyph "guilsinglleft")
, MapEntry (octalTriple 2 5 5) (Glyph "guilsinglright")
, MapEntry (octalTriple 1 5 0) (Glyph "h")
, MapEntry (octalTriple 3 1 5) (Glyph "hungarumlaut")
, MapEntry (octalTriple 1 5 1) (Glyph "i")
, MapEntry (octalTriple 1 5 2) (Glyph "j")
, MapEntry (octalTriple 1 5 3) (Glyph "k")
, MapEntry (octalTriple 1 5 4) (Glyph "l")
, MapEntry (octalTriple 0 7 4) (Glyph "less")
, MapEntry (octalTriple 3 7 0) (Glyph "lslash")
, MapEntry (octalTriple 1 5 5) (Glyph "m")
, MapEntry (octalTriple 3 0 5) (Glyph "macron")
, MapEntry (octalTriple 1 5 6) (Glyph "n")
, MapEntry (octalTriple 0 7 1) (Glyph "nine")
, MapEntry (octalTriple 0 4 3) (Glyph "numbersign")
, MapEntry (octalTriple 1 5 7) (Glyph "o")
, MapEntry (octalTriple 3 7 2) (Glyph "oe")
, MapEntry (octalTriple 3 1 6) (Glyph "ogonek")
, MapEntry (octalTriple 0 6 1) (Glyph "one")
, MapEntry (octalTriple 3 4 3) (Glyph "ordfeminine")
, MapEntry (octalTriple 3 5 3) (Glyph "ordmasculine")
, MapEntry (octalTriple 3 7 1) (Glyph "oslash")
, MapEntry (octalTriple 1 6 0) (Glyph "p")
, MapEntry (octalTriple 2 6 6) (Glyph "paragraph")
, MapEntry (octalTriple 0 5 0) (Glyph "parenleft")
, MapEntry (octalTriple 0 5 1) (Glyph "parenright")
, MapEntry (octalTriple 0 4 5) (Glyph "percent")
, MapEntry (octalTriple 0 5 6) (Glyph "period")
, MapEntry (octalTriple 2 6 4) (Glyph "periodcentered")
, MapEntry (octalTriple 2 7 5) (Glyph "perthousand")
, MapEntry (octalTriple 0 5 3) (Glyph "plus")
, MapEntry (octalTriple 1 6 1) (Glyph "q")
, MapEntry (octalTriple 0 7 7) (Glyph "question")
, MapEntry (octalTriple 2 7 7) (Glyph "questiondown")
, MapEntry (octalTriple 0 4 2) (Glyph "quotedbl")
, MapEntry (octalTriple 2 7 1) (Glyph "quotedblbase")
, MapEntry (octalTriple 2 5 2) (Glyph "quotedblleft")
, MapEntry (octalTriple 2 7 2) (Glyph "quotedblright")
, MapEntry (octalTriple 1 4 0) (Glyph "quoteleft")
, MapEntry (octalTriple 0 4 7) (Glyph "quoteright")
, MapEntry (octalTriple 2 7 0) (Glyph "quotesinglbase")
, MapEntry (octalTriple 2 5 1) (Glyph "quotesingle")
, MapEntry (octalTriple 1 6 2) (Glyph "r")
, MapEntry (octalTriple 3 1 2) (Glyph "ring")
, MapEntry (octalTriple 1 6 3) (Glyph "s")
, MapEntry (octalTriple 2 4 7) (Glyph "section")
, MapEntry (octalTriple 0 7 3) (Glyph "semicolon")
, MapEntry (octalTriple 0 6 7) (Glyph "seven")
, MapEntry (octalTriple 0 6 6) (Glyph "six")
, MapEntry (octalTriple 0 5 7) (Glyph "slash")
, MapEntry (octalTriple 2 4 3) (Glyph "sterling")
, MapEntry (octalTriple 1 6 4) (Glyph "t")
, MapEntry (octalTriple 0 6 3) (Glyph "three")
, MapEntry (octalTriple 3 0 4) (Glyph "tilde")
, MapEntry (octalTriple 0 6 2) (Glyph "two")
, MapEntry (octalTriple 1 6 5) (Glyph "u")
, MapEntry (octalTriple 1 3 7) (Glyph "underscore")
, MapEntry (octalTriple 1 6 6) (Glyph "v")
, MapEntry (octalTriple 1 6 7) (Glyph "w")
, MapEntry (octalTriple 1 7 0) (Glyph "x")
, MapEntry (octalTriple 1 7 1) (Glyph "y")
, MapEntry (octalTriple 2 4 5) (Glyph "yen")
, MapEntry (octalTriple 1 7 2) (Glyph "z")
, MapEntry (octalTriple 0 6 0) (Glyph "zero")
]

def StdEncoding : [ uint 8 -> Glyph ] = ListToMap StdEncodings
